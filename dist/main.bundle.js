!function(e){function t(t){for(var a,i,s=t[0],l=t[1],c=t[2],p=0,u=[];p<s.length;p++)i=s[p],r[i]&&u.push(r[i][0]),r[i]=0;for(a in l)Object.prototype.hasOwnProperty.call(l,a)&&(e[a]=l[a]);for(d&&d(t);u.length;)u.shift()();return o.push.apply(o,c||[]),n()}function n(){for(var e,t=0;t<o.length;t++){for(var n=o[t],a=!0,s=1;s<n.length;s++){var l=n[s];0!==r[l]&&(a=!1)}a&&(o.splice(t--,1),e=i(i.s=n[0]))}return e}var a={},r={9:0};var o=[];function i(t){if(a[t])return a[t].exports;var n=a[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,i),n.l=!0,n.exports}i.e=function(e){var t=[],n=r[e];if(0!==n)if(n)t.push(n[2]);else{var a=new Promise(function(t,a){n=r[e]=[t,a]});t.push(n[2]=a);var o=document.getElementsByTagName("head")[0],s=document.createElement("script");s.charset="utf-8",s.timeout=120,i.nc&&s.setAttribute("nonce",i.nc),s.src=function(e){return i.p+""+({0:"vendors~Explorer",1:"Explorer",2:"vendors~SearchDialog",3:"vendors~ExplorerNode",4:"vendors~ExplorerBranch",6:"ExplorerNode",7:"SearchDialog",8:"ExplorerBranch"}[e]||e)+".bundle.js"}(e);var l=setTimeout(function(){c({type:"timeout",target:s})},12e4);function c(t){s.onerror=s.onload=null,clearTimeout(l);var n=r[e];if(0!==n){if(n){var a=t&&("load"===t.type?"missing":t.type),o=t&&t.target&&t.target.src,i=new Error("Loading chunk "+e+" failed.\n("+a+": "+o+")");i.type=a,i.request=o,n[1](i)}r[e]=void 0}}s.onerror=s.onload=c,o.appendChild(s)}return Promise.all(t)},i.m=e,i.c=a,i.d=function(e,t,n){i.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},i.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="/dist/",i.oe=function(e){throw console.error(e),e};var s=window.webpackJsonp=window.webpackJsonp||[],l=s.push.bind(s);s.push=t,s=s.slice();for(var c=0;c<s.length;c++)t(s[c]);var d=l;o.push([558,5]),n()}({1068:function(module,exports){eval("/* (ignored) */\n\n//# sourceURL=webpack:///crypto_(ignored)?")},1089:function(module,exports){eval("/* (ignored) */\n\n//# sourceURL=webpack:///util_(ignored)?")},164:function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return TimeScope; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return GoogleChartColors; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return ChartCodeToGoogleChartType; });\n/* unused harmony export DatasetNameToAspectName */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return AspectNameToDatasetName; });\n// copyright (c) 2016 Henrik Bechmann, Toronto, MIT Licence\n// explorerchart.tsx\n// constants.tsx\nvar TimeScope;\n(function (TimeScope) {\n    TimeScope[TimeScope[\"OneYear\"] = 0] = \"OneYear\";\n    TimeScope[TimeScope[\"TwoYears\"] = 1] = \"TwoYears\";\n    TimeScope[TimeScope[\"AllYears\"] = 2] = \"AllYears\";\n})(TimeScope || (TimeScope = {}));\n// from http://there4.io/2012/05/02/google-chart-color-list/\nlet GoogleChartColors = [\"#3366CC\", \"#DC3912\", \"#FF9900\", \"#109618\", \"#990099\", \"#3B3EAC\", \"#0099C6\", \"#DD4477\", \"#66AA00\", \"#B82E2E\", \"#316395\", \"#994499\", \"#22AA99\", \"#AAAA11\", \"#6633CC\", \"#E67300\", \"#8B0707\", \"#329262\", \"#5574A6\", \"#3B3EAC\"];\nlet ChartCodeToGoogleChartType = {\n    'DonutChart': 'PieChart',\n    'ColumnChart': 'ColumnChart',\n    'DiffPieChart': 'PieChart',\n    'DiffColumnChart': 'ColumnChart',\n    'TimeLine': 'LineChart',\n    'ContextChart': 'TreeMap',\n    'StackedArea': 'AreaChart',\n    'Proportional': 'AreaChart'\n};\n\n// DatasetName means source file name here.\nlet AspectNameToDatasetName = {\n    'Expenses': 'Expenses',\n    'Revenues': 'Revenues',\n    'Staffing': 'Staffing',\n    'Expenditure': 'Expenditure',\n    'Assets': 'FinancialAssets',\n    'TangibleAssets': 'NonFinancialAssets',\n    'Liabilities': 'Liabilities',\n    'Reserves': 'Reserves'\n};\nvar DatasetNameToAspectName = {};\nfor (let AspectName in AspectNameToDatasetName) {\n    DatasetNameToAspectName[AspectNameToDatasetName[AspectName]] = AspectName;\n}\n\n\n//# sourceURL=webpack:///./ts/addons/explorer/constants.tsx?")},486:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return getExplorerDeclarationData; });\n/* harmony import */ var redux__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(35);\n/* harmony import */ var _legacy_budgetpedia_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(70);\n/* harmony import */ var _actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(7);\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(164);\n// copyright (c) 2016 Henrik Bechmann, Toronto, MIT Licence\n// explorer reducers.tsx\n/*\n    TODO: change chartSelection from yearScope to root cell\n*/\n\n\n\n\nlet generationcounter = 0;\nlet defaults = (state = _legacy_budgetpedia_model__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"].explorer.defaults, action) => {\n    return state;\n};\nlet branchList = (state = [], action) => {\n    let { type } = action;\n    let newstate;\n    switch (type) {\n        case _actions__WEBPACK_IMPORTED_MODULE_2__[/* types */ "z"].ADD_BRANCH:\n            {\n                let { refbranchuid, branchuid } = action.payload;\n                if (!refbranchuid) {\n                    newstate = [...state, action.payload.branchuid];\n                } else {\n                    newstate = [...state];\n                    let index = newstate.indexOf(refbranchuid);\n                    if (index == -1) {\n                        console.error(\'System error; could not find rebranchid\', refbranchuid, state);\n                        newstate.push(branchuid);\n                    } else {\n                        newstate.splice(index + 1, 0, branchuid);\n                    }\n                }\n                return newstate;\n            }\n        case _actions__WEBPACK_IMPORTED_MODULE_2__[/* types */ "z"].CLONE_BRANCH:\n            {\n                let { refbranchuid, settings } = action.payload;\n                let newbranchuid = settings.newbranchid;\n                if (!refbranchuid) {\n                    newstate = [...state, newbranchuid];\n                } else {\n                    newstate = [...state];\n                    let index = newstate.indexOf(refbranchuid);\n                    if (index == -1) {\n                        console.error(\'System error; could not find rebranchid\', refbranchuid, state);\n                        newstate.push(newbranchuid);\n                    } else {\n                        newstate.splice(index + 1, 0, newbranchuid);\n                    }\n                }\n                return newstate;\n            }\n        case _actions__WEBPACK_IMPORTED_MODULE_2__[/* types */ "z"].REMOVE_BRANCH:\n            {\n                newstate = state.filter(item => item != action.payload.branchuid);\n                return newstate;\n            }\n        case _actions__WEBPACK_IMPORTED_MODULE_2__[/* types */ "z"].REMOVE_BRANCHES:\n            {\n                newstate = [];\n                return newstate;\n            }\n        case _actions__WEBPACK_IMPORTED_MODULE_2__[/* types */ "z"].BRANCH_MOVE_UP:\n            {\n                newstate = [...state];\n                let { branchuid } = action.payload;\n                let pos = newstate.indexOf(branchuid);\n                if (pos == -1) {\n                    console.error(\'System Error: branchuid not found in list\', branchuid, newstate);\n                    return newstate;\n                }\n                if (pos == 0) {\n                    console.error(\'System Error: branchuid for move up at beginning of list already\', branchuid, newstate);\n                    return newstate;\n                }\n                let oldbranchuid = newstate[pos - 1];\n                newstate[pos - 1] = branchuid;\n                newstate[pos] = oldbranchuid;\n                return newstate;\n            }\n        case _actions__WEBPACK_IMPORTED_MODULE_2__[/* types */ "z"].BRANCH_MOVE_DOWN:\n            {\n                newstate = [...state];\n                let { branchuid } = action.payload;\n                let pos = newstate.indexOf(branchuid);\n                if (pos == -1) {\n                    console.error(\'System Error: branchuid not found in list\', branchuid, newstate);\n                    return newstate;\n                }\n                if (pos == newstate.length - 1) {\n                    console.error(\'System Error: branchuid for move down at end of list already\', branchuid, newstate);\n                    return newstate;\n                }\n                let oldbranchuid = newstate[pos + 1];\n                newstate[pos + 1] = branchuid;\n                newstate[pos] = oldbranchuid;\n                return newstate;\n            }\n        default:\n            return state;\n    }\n};\nlet branchesById = (state = {}, action) => {\n    let { type } = action;\n    let newstate;\n    switch (type) {\n        case _actions__WEBPACK_IMPORTED_MODULE_2__[/* types */ "z"].ADD_BRANCH:\n            {\n                newstate = Object.assign({}, state, { [action.payload.branchuid]: action.payload.settings });\n                return newstate;\n            }\n        case _actions__WEBPACK_IMPORTED_MODULE_2__[/* types */ "z"].UPDATE_BRANCH:\n            {\n                let { branchuid } = action.payload;\n                newstate = Object.assign({}, state);\n                let newbranchstate = Object.assign({}, newstate[branchuid]);\n                newbranchstate = Object.assign(newbranchstate, action.payload.settings);\n                newstate[branchuid] = newbranchstate;\n                return newstate;\n            }\n        case _actions__WEBPACK_IMPORTED_MODULE_2__[/* types */ "z"].CLONE_BRANCH:\n            {\n                let newbranchid = action.payload.settings.newbranchid;\n                newstate = Object.assign({}, state, { [newbranchid]: action.payload.settings.branch[newbranchid] });\n                return newstate;\n            }\n        case _actions__WEBPACK_IMPORTED_MODULE_2__[/* types */ "z"].REMOVE_BRANCH:\n            {\n                newstate = Object.assign({}, state);\n                delete newstate[action.payload.branchuid];\n                return newstate;\n            }\n        case _actions__WEBPACK_IMPORTED_MODULE_2__[/* types */ "z"].REMOVE_BRANCHES:\n            {\n                newstate = {};\n                return newstate;\n            }\n        case _actions__WEBPACK_IMPORTED_MODULE_2__[/* types */ "z"].ADD_NODE:\n            {\n                let { branchuid } = action.payload;\n                newstate = Object.assign({}, state);\n                newstate[branchuid] = Object.assign({}, newstate[branchuid]);\n                newstate[branchuid].nodeList = [...state[branchuid].nodeList, action.payload.nodeuid];\n                return newstate;\n            }\n        case _actions__WEBPACK_IMPORTED_MODULE_2__[/* types */ "z"].ADD_NODES:\n            {\n                let { branchuid } = action.payload;\n                newstate = Object.assign({}, state);\n                newstate[branchuid] = Object.assign({}, newstate[branchuid]);\n                let { settingslist } = action.payload;\n                let newnodelist = [];\n                for (let settingsdata of settingslist) {\n                    newnodelist.push(settingsdata.nodeuid);\n                }\n                newstate[branchuid].nodeList = [...state[branchuid].nodeList, ...newnodelist];\n                // console.log(\'add nodes\',newstate, newnodelist)\n                return newstate;\n            }\n        case _actions__WEBPACK_IMPORTED_MODULE_2__[/* types */ "z"].REMOVE_NODES:\n            {\n                let { branchuid } = action.payload;\n                newstate = Object.assign({}, state);\n                let removelist = action.payload.items;\n                let newList = newstate[branchuid].nodeList.filter(nodeuid => {\n                    let foundlist = removelist.filter(item => {\n                        return item.nodeuid == nodeuid;\n                    });\n                    return foundlist.length == 0;\n                });\n                newstate[branchuid].nodeList = newList;\n                return newstate;\n            }\n        case _actions__WEBPACK_IMPORTED_MODULE_2__[/* types */ "z"].CHANGE_VIEWPOINT:\n            {\n                let { branchuid } = action.payload;\n                newstate = Object.assign({}, state);\n                let newbranchstate = Object.assign({}, newstate[branchuid]);\n                newbranchstate.viewpoint = action.payload.viewpointname;\n                newbranchstate.version = newbranchstate.defaultVersions[newbranchstate.viewpoint];\n                newbranchstate.aspect = newbranchstate.defaultAspects[newbranchstate.version];\n                newstate[branchuid] = newbranchstate;\n                return newstate;\n            }\n        case _actions__WEBPACK_IMPORTED_MODULE_2__[/* types */ "z"].CHANGE_VERSION:\n            {\n                let { branchuid } = action.payload;\n                newstate = Object.assign({}, state);\n                let newbranchstate = Object.assign({}, newstate[branchuid]);\n                newbranchstate.version = action.payload.versionname;\n                newbranchstate.aspect = newbranchstate.defaultAspects[newbranchstate.version];\n                newstate[branchuid] = newbranchstate;\n                return newstate;\n            }\n        case _actions__WEBPACK_IMPORTED_MODULE_2__[/* types */ "z"].CHANGE_ASPECT:\n            {\n                let { branchuid } = action.payload;\n                newstate = Object.assign({}, state);\n                newstate[branchuid] = Object.assign({}, newstate[branchuid]);\n                newstate[branchuid].aspect = action.payload.aspectname;\n                return newstate;\n            }\n        case _actions__WEBPACK_IMPORTED_MODULE_2__[/* types */ "z"].TOGGLE_INFLATION_ADJUSTED:\n            {\n                let { branchuid } = action.payload;\n                newstate = Object.assign({}, state);\n                newstate[branchuid] = Object.assign({}, newstate[branchuid]);\n                newstate[branchuid].inflationAdjusted = action.payload.value;\n                return newstate;\n            }\n        case _actions__WEBPACK_IMPORTED_MODULE_2__[/* types */ "z"].UPDATE_PRORATA:\n            {\n                let { branchuid } = action.payload;\n                newstate = Object.assign({}, state);\n                newstate[branchuid] = Object.assign({}, newstate[branchuid]);\n                newstate[branchuid].prorata = action.payload.value;\n                return newstate;\n            }\n        case _actions__WEBPACK_IMPORTED_MODULE_2__[/* types */ "z"].TOGGLE_SHOW_OPTIONS:\n            {\n                let { branchuid } = action.payload;\n                newstate = Object.assign({}, state);\n                newstate[branchuid] = Object.assign({}, newstate[branchuid]);\n                newstate[branchuid].showOptions = action.payload.value;\n                return newstate;\n            }\n        // increment branch data version\n        case _actions__WEBPACK_IMPORTED_MODULE_2__[/* types */ "z"].CHANGE_BRANCH_DATA:\n            {\n                let { branchuid } = action.payload;\n                newstate = Object.assign({}, state);\n                newstate[branchuid] = Object.assign({}, newstate[branchuid]);\n                newstate[branchuid].branchDataGeneration++;\n                return newstate;\n            }\n        case _actions__WEBPACK_IMPORTED_MODULE_2__[/* types */ "z"].CLEAR_BRANCH_STORY:\n            {\n                let { branchuid } = action.payload;\n                newstate = Object.assign({}, state);\n                newstate[branchuid] = Object.assign({}, newstate[branchuid]);\n                delete newstate[branchuid].story;\n                return newstate;\n            }\n        default:\n            return state;\n    }\n};\nlet nodesById = (state = {}, action) => {\n    let { type } = action;\n    let newstate;\n    switch (type) {\n        case _actions__WEBPACK_IMPORTED_MODULE_2__[/* types */ "z"].ADD_NODE:\n            {\n                let node = state[action.payload.nodeuid] || {};\n                node = Object.assign(node, action.payload.settings);\n                newstate = Object.assign({}, state, { [action.payload.nodeuid]: node });\n                return newstate;\n            }\n        case _actions__WEBPACK_IMPORTED_MODULE_2__[/* types */ "z"].ADD_NODES:\n            {\n                let { settingslist } = action.payload;\n                // console.log(\'settingslist in reducers ADD_NODES\',settingslist)\n                let newstate = Object.assign({}, state);\n                for (let settingsdata of settingslist) {\n                    let node = newstate[settingsdata.nodeuid] || {};\n                    node = Object.assign(node, settingsdata.settings);\n                    newstate[settingsdata.nodeuid] = node;\n                }\n                // console.log(\'ADD_NODES in nodesById\',newstate)\n                return newstate;\n            }\n        case _actions__WEBPACK_IMPORTED_MODULE_2__[/* types */ "z"].CLONE_BRANCH:\n            {\n                let newnodes = action.payload.settings.nodes;\n                newstate = Object.assign({}, state);\n                for (let nodeid in newnodes) {\n                    newstate[nodeid] = newnodes[nodeid];\n                }\n                return newstate;\n            }\n        case _actions__WEBPACK_IMPORTED_MODULE_2__[/* types */ "z"].REMOVE_NODES:\n            {\n                newstate = Object.assign({}, state);\n                let removelist = action.payload.items;\n                for (let removeitem of removelist) {\n                    delete newstate[removeitem.nodeuid];\n                }\n                return newstate;\n            }\n        case _actions__WEBPACK_IMPORTED_MODULE_2__[/* types */ "z"].ADD_CELLS:\n            {\n                let newstate = Object.assign({}, state);\n                let nodeuid = action.payload.nodeuid;\n                let newnode = Object.assign({}, newstate[nodeuid]);\n                newnode.cellList = newnode.cellList || [];\n                let newcellList = action.payload.settings.map(setting => setting.celluid);\n                newnode.cellList = [...newnode.cellList, ...newcellList];\n                newstate[nodeuid] = newnode;\n                return newstate;\n            }\n        case _actions__WEBPACK_IMPORTED_MODULE_2__[/* types */ "z"].CHANGE_TAB:\n            {\n                let newstate = Object.assign({}, state);\n                let { nodeuid } = action.payload;\n                let newnode = Object.assign({}, newstate[action.payload.nodeuid]);\n                newnode.cellIndex = action.payload.tabvalue;\n                newstate[nodeuid] = newnode;\n                return newstate;\n            }\n        case _actions__WEBPACK_IMPORTED_MODULE_2__[/* types */ "z"].UPDATE_NODE_YEAR_SELECTIONS:\n            {\n                newstate = Object.assign({}, state);\n                let { nodeuid, leftyear, rightyear } = action.payload;\n                let newnode = Object.assign({}, newstate[nodeuid]);\n                let newYearSelections = Object.assign({}, newnode.yearSelections);\n                if (leftyear > rightyear) {\n                    leftyear = rightyear;\n                }\n                newYearSelections.leftYear = leftyear;\n                newYearSelections.rightYear = rightyear;\n                newnode.yearSelections = newYearSelections;\n                newstate[nodeuid] = newnode;\n                return newstate;\n            }\n        case _actions__WEBPACK_IMPORTED_MODULE_2__[/* types */ "z"].NORMALIZE_CELL_YEAR_DEPENDENCIES:\n            {\n                newstate = Object.assign({}, state);\n                let { nodeuid, yearsRange } = action.payload;\n                let { start: startYear, end: endYear } = yearsRange;\n                let newnode = Object.assign({}, newstate[nodeuid]);\n                let yearSpan = endYear - startYear;\n                let range = Object.assign({}, newnode.yearSelections);\n                if (range.leftYear < startYear || range.leftYear > endYear) {\n                    range.leftYear = startYear;\n                }\n                if (range.rightYear > endYear || range.rightYear < startYear) {\n                    range.rightYear = endYear;\n                }\n                newnode.yearSelections = range;\n                newstate[nodeuid] = newnode;\n                return newstate;\n            }\n        case _actions__WEBPACK_IMPORTED_MODULE_2__[/* types */ "z"].HARMONIZE_CELLS:\n            {\n                newstate = Object.assign({}, state);\n                let { nodeProperties, nodeList } = action.payload;\n                for (let nodeuid of nodeList) {\n                    let newnode = Object.assign({}, newstate[nodeuid]);\n                    if (nodeProperties.cellIndex < newnode.cellList.length) {\n                        newnode.cellIndex = nodeProperties.cellIndex;\n                    }\n                    let yearSelections = nodeProperties.yearSelections;\n                    newnode.yearSelections = Object.assign({}, yearSelections);\n                    newstate[nodeuid] = newnode;\n                }\n                return newstate;\n            }\n        default:\n            return state;\n    }\n};\nlet cellsById = (state = {}, action) => {\n    let { type } = action;\n    let newstate = Object.assign({}, state);\n    switch (type) {\n        case _actions__WEBPACK_IMPORTED_MODULE_2__[/* types */ "z"].ADD_CELLS:\n            {\n                for (let setting of action.payload.settings) {\n                    // TODO: cell declaration should not include celluid property\n                    // but the property crept into usage in node.class setCells\n                    // leaving for now for sake of stability\n                    newstate[setting.celluid] = setting;\n                }\n                return newstate;\n            }\n        case _actions__WEBPACK_IMPORTED_MODULE_2__[/* types */ "z"].CLONE_BRANCH:\n            {\n                let newcells = action.payload.settings.cells;\n                newstate = Object.assign({}, state);\n                for (let cellid in newcells) {\n                    newstate[cellid] = newcells[cellid];\n                }\n                return newstate;\n            }\n        case _actions__WEBPACK_IMPORTED_MODULE_2__[/* types */ "z"].REMOVE_NODES:\n            {\n                for (let removeitem of action.payload.items) {\n                    for (let celluid of removeitem.cellList) delete newstate[celluid];\n                }\n                return newstate;\n            }\n        // TODO empty chartSlection - empty array rather than null\n        case _actions__WEBPACK_IMPORTED_MODULE_2__[/* types */ "z"].UPDATE_CELL_SELECTION:\n            {\n                let { celluid } = action.payload;\n                let newcell = Object.assign({}, newstate[celluid]);\n                let chartSelection = action.payload.selection;\n                // console.log(\'setting newcell chart selection\', chartSelection)\n                // if (Array.isArray(chartSelection) && chartSelection.length == 0) {\n                //     chartSelection = null\n                // }\n                newcell.chartSelection = chartSelection;\n                // let newChartConfigs = Object.assign({},newcell.chartConfigs)\n                // let scopeSettings = Object.assign({},newChartConfigs[newcell.yearScope])\n                // scopeSettings.chartSelection = chartSelection\n                // newChartConfigs[newcell.yearScope] = scopeSettings\n                // newcell.chartConfigs = newChartConfigs\n                newstate[celluid] = newcell;\n                return newstate;\n            }\n        case _actions__WEBPACK_IMPORTED_MODULE_2__[/* types */ "z"].UPDATE_CELL_TIMECODE:\n            {\n                let { celluid, explorerTimeCode } = action.payload;\n                let newcell = Object.assign({}, newstate[celluid]);\n                newcell.yearScope = explorerTimeCode;\n                newstate[celluid] = newcell;\n                return newstate;\n            }\n        case _actions__WEBPACK_IMPORTED_MODULE_2__[/* types */ "z"].UPDATE_CELL_CHART_CODE:\n            {\n                let { celluid, explorerChartCode } = action.payload;\n                let newcell = Object.assign({}, newstate[celluid]);\n                let newChartConfigs = Object.assign({}, newcell.chartConfigs);\n                let yearSettings = Object.assign({}, newChartConfigs[newcell.yearScope]);\n                yearSettings.explorerChartCode = explorerChartCode;\n                newChartConfigs[newcell.yearScope] = yearSettings;\n                newcell.chartConfigs = newChartConfigs;\n                newstate[celluid] = newcell;\n                return newstate;\n            }\n        case _actions__WEBPACK_IMPORTED_MODULE_2__[/* types */ "z"].NORMALIZE_CELL_YEAR_DEPENDENCIES:\n            {\n                let { cellList, yearsRange } = action.payload;\n                let { start: startYear, end: endYear } = yearsRange;\n                let yearSpan = endYear - startYear;\n                for (let celluid of cellList) {\n                    let newcell = Object.assign({}, newstate[celluid]);\n                    if (yearSpan == 0) {\n                        newcell.yearScope = _constants__WEBPACK_IMPORTED_MODULE_3__[/* TimeScope */ "d"][_constants__WEBPACK_IMPORTED_MODULE_3__[/* TimeScope */ "d"].OneYear];\n                    }\n                    newstate[celluid] = newcell;\n                }\n                return newstate;\n            }\n        case _actions__WEBPACK_IMPORTED_MODULE_2__[/* types */ "z"].HARMONIZE_CELLS:\n            {\n                newstate = Object.assign({}, state);\n                let { cellProperties, cellList } = action.payload;\n                for (let celluid of cellList) {\n                    let newcell = Object.assign({}, newstate[celluid]);\n                    newcell.yearScope = cellProperties.yearScope;\n                    let chartconfigs = JSON.parse(JSON.stringify(newcell.chartConfigs));\n                    chartconfigs[newcell.yearScope].explorerChartCode = cellProperties.chartCode;\n                    newcell.chartConfigs = chartconfigs;\n                    newstate[celluid] = newcell;\n                }\n                return newstate;\n            }\n        default:\n            return state;\n    }\n};\nlet lastActionDefaultState = {\n    type: undefined, branchuid: undefined, nodeuid: undefined, celluid: undefined, explorer: undefined,\n    generation: null\n};\nlet lastAction = (state = lastActionDefaultState, action) => {\n    let newstate = Object.assign({}, state);\n    if (!action.payload && !(action.type == _actions__WEBPACK_IMPORTED_MODULE_2__[/* types */ "z"].RESET_LAST_ACTION)) {\n        let newstate = Object.assign({}, lastActionDefaultState);\n        newstate.type = action.type;\n        return newstate;\n    }\n    let { type } = action;\n    switch (type) {\n        case _actions__WEBPACK_IMPORTED_MODULE_2__[/* types */ "z"].RESET_LAST_ACTION:\n            {\n                let newstate = Object.assign({}, lastActionDefaultState);\n                newstate.type = action.type;\n                newstate.explorer = action.meta.explorer;\n                newstate.generation = generationcounter;\n                return newstate;\n            }\n        default:\n            {\n                if (action.meta) {\n                    newstate.explorer = action.meta.explorer;\n                }\n                let { payload } = action;\n                newstate.type = action.type;\n                newstate.branchuid = payload.branchuid;\n                newstate.nodeuid = payload.nodeuid;\n                newstate.celluid = payload.celluid;\n                newstate.generation = generationcounter;\n                return newstate;\n            }\n    }\n};\n/*\n    There\'s a race condition which overwrites lastAction before being distributed.\n    This compensates by saveing types by uid rather than type\n*/\nlet lastTargetedAction = (state = { counter: null }, action) => {\n    if (!action.payload || !action.meta) {\n        return state;\n    }\n    let { payload } = action;\n    if (!payload.branchuid && !payload.nodeuid && !payload.celluid) {\n        return state;\n    }\n    let newstate = Object.assign({}, state);\n    switch (action.type) {\n        case _actions__WEBPACK_IMPORTED_MODULE_2__[/* types */ "z"].REMOVE_BRANCH:\n            delete newstate[payload.branchuid];\n            return newstate;\n        case _actions__WEBPACK_IMPORTED_MODULE_2__[/* types */ "z"].REMOVE_BRANCHES:\n            newstate = { counter: null };\n            return newstate;\n        case _actions__WEBPACK_IMPORTED_MODULE_2__[/* types */ "z"].REMOVE_NODES:\n            // delete newstate[payload.branchuid]\n            for (let removeitem of payload.items) {\n                delete newstate[removeitem.nodeuid];\n                for (let celluid of removeitem.cellList) delete newstate[celluid];\n            }\n            return newstate;\n    }\n    if (payload.branchuid) {\n        newstate[payload.branchuid] = {\n            type: action.type,\n            generation: generationcounter,\n            branch: true\n        };\n    }\n    if (payload.nodeuid) {\n        newstate[payload.nodeuid] = {\n            type: action.type,\n            generation: generationcounter,\n            node: true\n        };\n    }\n    if (payload.celluid) {\n        newstate[payload.celluid] = {\n            type: action.type,\n            generation: generationcounter,\n            cell: true\n        };\n    }\n    newstate.counter = { generation: generationcounter };\n    return newstate;\n};\nlet generation = (state = null, action) => {\n    return generationcounter++;\n};\nlet onetimenotification = (state = false, action) => {\n    if (action.type == _actions__WEBPACK_IMPORTED_MODULE_2__[/* types */ "z"].ONETIME_NOTIFICATION) {\n        return true;\n    } else {\n        return state;\n    }\n};\nlet explorer = Object(redux__WEBPACK_IMPORTED_MODULE_0__[/* combineReducers */ "c"])({\n    defaults,\n    branchList,\n    branchesById,\n    nodesById,\n    cellsById,\n    lastAction,\n    lastTargetedAction,\n    generation,\n    onetimenotification\n});\n/* harmony default export */ __webpack_exports__["a"] = (explorer);\nconst getExplorerDeclarationData = state => state.explorer;\n\n//# sourceURL=webpack:///./ts/addons/explorer/reducers.tsx?')},558:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(0);\n\n// EXTERNAL MODULE: ./node_modules/react-dom/index.js\nvar react_dom = __webpack_require__(23);\n\n// EXTERNAL MODULE: ./node_modules/redux/es/index.js + 6 modules\nvar es = __webpack_require__(35);\n\n// EXTERNAL MODULE: ./node_modules/history/createBrowserHistory.js\nvar createBrowserHistory = __webpack_require__(159);\nvar createBrowserHistory_default = /*#__PURE__*/__webpack_require__.n(createBrowserHistory);\n\n// EXTERNAL MODULE: ./node_modules/react-router-redux/es/index.js + 6 modules\nvar react_router_redux_es = __webpack_require__(46);\n\n// EXTERNAL MODULE: ./node_modules/redux-thunk/lib/index.js\nvar lib = __webpack_require__(539);\nvar lib_default = /*#__PURE__*/__webpack_require__.n(lib);\n\n// EXTERNAL MODULE: ./node_modules/react-redux-toastr/lib/index.js\nvar react_redux_toastr_lib = __webpack_require__(125);\nvar react_redux_toastr_lib_default = /*#__PURE__*/__webpack_require__.n(react_redux_toastr_lib);\n\n// EXTERNAL MODULE: ./ts/legacy/budgetpedia.model.tsx\nvar budgetpedia_model = __webpack_require__(70);\n\n// EXTERNAL MODULE: ./ts/addons/explorer/reducers.tsx\nvar reducers = __webpack_require__(486);\n\n// CONCATENATED MODULE: ./ts/core/actions/reducers.tsx\n// copyright (c) 2016 Henrik Bechmann, Toronto, MIT Licence\n// reducers.tsx\n// TODO: co-locate selectors here: get...(...)\n\n\n\n\n\n// -------------[ app resources ]---------------\n// import * as Actions from \'./actions\'\n\n// ----------[ app settings ]----------------------\n\n// -----------[ system resource reducers ]------------\nlet reducers_theme = (state = budgetpedia_model["a" /* default */].theme) => {\n    return state;\n};\n// let system = (state:any = masterModel.system) => {\n//     return state\n// }\nlet colors = (state = budgetpedia_model["a" /* default */].colors) => {\n    return state;\n};\nlet reducers_resources = Object(es["c" /* combineReducers */])({\n    theme: reducers_theme,\n    colors\n});\n// ---------------------[ ui core services reducers ]------------------------\nlet reducers_globalbar = (state = budgetpedia_model["a" /* default */].globalbar, action) => {\n    return state;\n};\nlet global = Object(es["c" /* combineReducers */])({\n    globalbar: reducers_globalbar\n});\n// ---------------------[ home grid reducers ]------------------------\nlet reducers_homepage = (state = budgetpedia_model["a" /* default */].homepage, action) => {\n    return state;\n};\nlet reducers_pagetargets = (state = budgetpedia_model["a" /* default */].pagetargets, action) => {\n    return state;\n};\nlet pages = Object(es["c" /* combineReducers */])({\n    homepage: reducers_homepage,\n    pagetargets: reducers_pagetargets\n});\n// ---------------------------[ main reducer ]--------------------------------\nlet mainReducerCore = {\n    // app data\n    explorer: reducers["a" /* default */],\n    // system data\n    resources: reducers_resources,\n    router: react_router_redux_es["d" /* routerReducer */],\n    // page model\n    pages,\n    toastr: react_redux_toastr_lib["reducer"],\n    // global ui management\n    global\n};\n/* harmony default export */ var actions_reducers = (mainReducerCore);\n// CONCATENATED MODULE: ./ts/core/start/globaldataconfig.utility.tsx\n// copyright (c) 2016 Henrik Bechmann, Toronto, MIT Licence\n// configurestore.tsx\n\n\n\n\n\n// assemble reducers\nconst globaldataconfig_utility_reducers = Object(es["c" /* combineReducers */])(Object.assign({}, actions_reducers, { router: react_router_redux_es["d" /* routerReducer */] }));\n// assemble middleware\nconst globaldataconfig_utility_history = createBrowserHistory_default()();\nconst reduxRouterMiddleware = Object(react_router_redux_es["c" /* routerMiddleware */])(globaldataconfig_utility_history);\nconst middleware = Object(es["a" /* applyMiddleware */])(reduxRouterMiddleware, lib_default.a);\n// create store\nconst store = Object(es["e" /* createStore */])(globaldataconfig_utility_reducers, middleware);\n\n// EXTERNAL MODULE: ./node_modules/react-redux/es/index.js + 23 modules\nvar react_redux_es = __webpack_require__(58);\n\n// EXTERNAL MODULE: ./node_modules/material-ui/styles/MuiThemeProvider.js\nvar MuiThemeProvider = __webpack_require__(536);\nvar MuiThemeProvider_default = /*#__PURE__*/__webpack_require__.n(MuiThemeProvider);\n\n// EXTERNAL MODULE: ./node_modules/material-ui/styles/getMuiTheme.js\nvar getMuiTheme = __webpack_require__(226);\nvar getMuiTheme_default = /*#__PURE__*/__webpack_require__.n(getMuiTheme);\n\n// EXTERNAL MODULE: ./node_modules/material-ui/AppBar/index.js\nvar AppBar = __webpack_require__(535);\nvar AppBar_default = /*#__PURE__*/__webpack_require__.n(AppBar);\n\n// CONCATENATED MODULE: ./ts/core/global/globalbar.view.tsx\n// copyright (c) 2017 Henrik Bechmann, Toronto, MIT Licence\n// globalbar.view.tsx\n\n\n // required by bundler\n\nclass globalbar_view_GlobalBarView extends react["Component"] {\n    render() {\n        let defaultStyle = {\n            position: "fixed",\n            backgroundColor: "#336797"\n        };\n        let defaultTitleStyle = {\n            cursor: \'pointer\'\n        };\n        let titleStyle = this.props.titleStyle || {};\n        let style = this.props.style || {};\n        return react["createElement"](AppBar_default.a, { onTitleClick: () => this.props.onSelect(), titleStyle: Object.assign({}, defaultTitleStyle, titleStyle), style: Object.assign({}, defaultStyle, style), title: react["createElement"]("span", null, this.props.title), iconElementLeft: this.props.iconElementLeft }, this.props.children);\n    }\n}\n/* harmony default export */ var globalbar_view = (globalbar_view_GlobalBarView);\n// EXTERNAL MODULE: ./node_modules/material-ui/IconButton/index.js\nvar IconButton = __webpack_require__(103);\nvar IconButton_default = /*#__PURE__*/__webpack_require__.n(IconButton);\n\n// EXTERNAL MODULE: ./node_modules/material-ui/FontIcon/index.js\nvar FontIcon = __webpack_require__(71);\nvar FontIcon_default = /*#__PURE__*/__webpack_require__.n(FontIcon);\n\n// CONCATENATED MODULE: ./ts/core/global/menuicon.view.tsx\n// copyright (c) 2017 Henrik Bechmann, Toronto, MIT Licence\n// menuicon.view.tsx\n/*\n    Note: FontIcon style seems to be ignored when nested in IconButton\n\n*/\n\n\n // required by bundler\n\n\nclass menuicon_view_MenuIconView extends react["Component"] {\n    render() {\n        return react["createElement"](IconButton_default.a, { onClick: this.props.onSelect, style: this.props.style }, react["createElement"](FontIcon_default.a, { className: "material-icons", color: this.props.color }, "menu"));\n    }\n}\n/* harmony default export */ var menuicon_view = (menuicon_view_MenuIconView);\n// EXTERNAL MODULE: ./node_modules/material-ui/Drawer/index.js\nvar Drawer = __webpack_require__(534);\nvar Drawer_default = /*#__PURE__*/__webpack_require__.n(Drawer);\n\n// EXTERNAL MODULE: ./node_modules/material-ui/Divider/index.js\nvar Divider = __webpack_require__(239);\nvar Divider_default = /*#__PURE__*/__webpack_require__.n(Divider);\n\n// EXTERNAL MODULE: ./node_modules/material-ui/MenuItem/index.js\nvar MenuItem = __webpack_require__(235);\nvar MenuItem_default = /*#__PURE__*/__webpack_require__.n(MenuItem);\n\n// CONCATENATED MODULE: ./ts/core/global/menurow.view.tsx\n// copyright (c) 2017 Henrik Bechmann, Toronto, MIT Licence\n// menurow.tsx\n\n\n\n\nclass menurow_view_MenuRowView extends react["Component"] {\n    constructor() {\n        super(...arguments);\n        this.pushHistory = e => {\n            e.stopPropagation();\n            this.props.onSelect(this.props.route);\n        };\n    }\n    render() {\n        return react["createElement"](MenuItem_default.a, { onClick: this.pushHistory, primaryText: this.props.primaryText, leftIcon: react["createElement"]("img", { src: this.props.image }), disabled: this.props.disabled ? true : false });\n    }\n}\n// CONCATENATED MODULE: ./ts/core/global/menusidebar.view.tsx\n// copyright (c) 2017 Henrik Bechmann, Toronto, MIT Licence\n// menusidebar.view.tsx\n\n\n // required by bundler\n\n\n\nclass menusidebar_view_MenuSidebarView extends react["Component"] {\n    render() {\n        let tailtargets = this.props.tailData;\n        // console.log(\'pagetargets\',pagetargets)\n        let menuitems = tailtargets.map(menurow => {\n            return react["createElement"](menurow_view_MenuRowView, { onSelect: this.props.onSelect, key: menurow.id, primaryText: menurow.content.title, image: menurow.content.image, route: menurow.route, disabled: menurow.content.disabled });\n        });\n        let { headData } = this.props;\n        let { primaryText, image, route, disabled } = headData;\n        let menuhead = [react["createElement"](menurow_view_MenuRowView, { onSelect: this.props.onSelect, key: \'home\', primaryText: primaryText, image: image, route: route, disabled: disabled }), react["createElement"](Divider_default.a, { key: "divider" })];\n        return react["createElement"](Drawer_default.a, { width: this.props.width, docked: this.props.docked, disableSwipeToOpen: this.props.disableSwipeToOpen, onRequestChange: this.props.onRequestChange, open: this.props.open }, menuhead, menuitems);\n    }\n}\n/* harmony default export */ var menusidebar_view = (menusidebar_view_MenuSidebarView);\n// CONCATENATED MODULE: ./ts/core/global/tagline.view.tsx\n// copyright (c) 2017 Henrik Bechmann, Toronto, MIT Licence\n// tagline.view.tsx\n\n\n\nclass tagline_view_TaglineView extends react["Component"] {\n    render() {\n        let defaultstyle = {\n            fontSize: "12px",\n            color: "gold",\n            padding: "3px"\n        };\n        return react["createElement"]("div", { style: Object.assign({}, defaultstyle, this.props.style) }, this.props.text);\n    }\n}\n/* harmony default export */ var tagline_view = (tagline_view_TaglineView);\n// EXTERNAL MODULE: ./node_modules/radium/es/index.js + 22 modules\nvar radium_es = __webpack_require__(1141);\n\n// CONCATENATED MODULE: ./ts/core/global/contact.view.tsx\n// copyright (c) 2017 Henrik Bechmann, Toronto, MIT Licence\n// contact.view.tsx\n\n\n // required by bundler\n// TODO: replace radium with css classes\n\nlet { StyleRoot } = radium_es;\nclass contact_view_ContactView extends react["Component"] {\n    render() {\n        let defaultStyle = {\n            fontSize: "12px",\n            color: "white",\n            padding: "3px"\n        };\n        return react["createElement"](StyleRoot, null, react["createElement"]("div", { style: [defaultStyle, this.props.style] }, "contact: ", react["createElement"]("a", { style: [{\n                color: \'white\',\n                \':hover\': {\n                    color: \'white\',\n                    background: \'black\'\n                },\n                \':visited\': { color: \'gold\' }\n            }, this.props.contactStyle], target: "_blank", href: this.props.contactAddress }, this.props.contactPrompt)));\n    }\n}\n/* harmony default export */ var contact_view = (contact_view_ContactView);\n// CONCATENATED MODULE: ./ts/core/global/globalbar.controller.tsx\n// copyright (c) 2016 Henrik Bechmann, Toronto, MIT Licence\n// globalbar.controller.tsx\n/*\n    TODO:\n    - animate and abstract a ui message board\n*/\n\n\n\n\n\n\n\n\n\n\n\nlet GlobalBarController = class extends react["Component"] {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            menusidebaropen: false\n        };\n        this.handleMenuSidebarToggle = e => {\n            e.stopPropagation();\n            e.preventDefault();\n            this.setState({ menusidebaropen: !this.state.menusidebaropen });\n        };\n        this.menutransition = fn => {\n            this.setState({\n                menusidebaropen: false\n            });\n            return fn;\n        };\n        this.doMenuTransition = Object(es["d" /* compose */])(this.menutransition, this.props.push);\n    }\n    render() {\n        let { globalbar, theme } = this.props;\n        let { pagetargets, homepage } = this.props;\n        let { title: primaryText, image } = homepage.content;\n        let { route } = homepage;\n        let headData = {\n            primaryText,\n            image,\n            route\n        };\n        let taglineView = react["createElement"](tagline_view, { text: globalbar.tagLine, style: {\n                position: "absolute",\n                bottom: 0,\n                left: \'62px\'\n            } });\n        let contactView = react["createElement"](contact_view, { style: {\n                position: "absolute",\n                top: 0,\n                right: 0\n            }, contactAddress: globalbar.contactAddress, contactPrompt: globalbar.contactPrompt });\n        let menuiconView = react["createElement"](menuicon_view, { onSelect: e => {\n                this.handleMenuSidebarToggle(e);\n            }, color: theme.palette.alternateTextColor });\n        let menuSidebarView = react["createElement"](menusidebar_view, { headData: headData, tailData: pagetargets, onSelect: this.doMenuTransition, width: 300, docked: false, disableSwipeToOpen: true, onRequestChange: open => this.setState({ menusidebaropen: open }), open: this.state.menusidebaropen });\n        return react["createElement"](globalbar_view, { onSelect: () => this.props.push(homepage.route), titleStyle: { cursor: \'pointer\' }, title: globalbar.title, iconElementLeft: menuiconView }, taglineView, contactView, menuSidebarView);\n    }\n};\nfunction mapStateToProps(state) {\n    let { resources, pages, global } = state;\n    return {\n        globalbar: global.globalbar,\n        theme: resources.theme,\n        pagetargets: pages.pagetargets,\n        homepage: pages.homepage\n    };\n}\nGlobalBarController = Object(react_redux_es["connect"])(mapStateToProps, {\n    push: react_router_redux_es["b" /* push */]\n})(GlobalBarController);\n/* harmony default export */ var globalbar_controller = (GlobalBarController);\n// EXTERNAL MODULE: ./node_modules/react-router-dom/es/index.js + 13 modules\nvar react_router_dom_es = __webpack_require__(43);\n\n// EXTERNAL MODULE: ./node_modules/tslib/tslib.es6.js\nvar tslib_es6 = __webpack_require__(3);\n\n// EXTERNAL MODULE: ./node_modules/material-ui/Chip/index.js\nvar Chip = __webpack_require__(122);\nvar Chip_default = /*#__PURE__*/__webpack_require__.n(Chip);\n\n// EXTERNAL MODULE: ./node_modules/firebase/index.js\nvar firebase = __webpack_require__(232);\n\n// EXTERNAL MODULE: ./node_modules/firebase/firestore/index.js\nvar firestore = __webpack_require__(891);\n\n// CONCATENATED MODULE: ./ts/gateway/firebase.api.tsx\n// firebase.api.tsx\n\n\n\n\nfirebase["initializeApp"]({\n    apiKey: "AIzaSyB3-RFiL63BlUtZ56CmL9TpDUJRAd0LLlw",\n    authDomain: "budgetpedia-89c3d.firebaseapp.com",\n    databaseURL: "https://budgetpedia-89c3d.firebaseio.com",\n    projectId: "budgetpedia-89c3d",\n    storageBucket: "budgetpedia-89c3d.appspot.com",\n    messagingSenderId: "66994833687"\n});\nlet firebaseapi = firebase;\n/* harmony default export */ var firebase_api = (firebaseapi);\n// CONCATENATED MODULE: ./ts/model/cards.index.tsx\n// cards.index.tsx\nlet budgetssummary = {\n    type: \'card\',\n    controller: \'card\',\n    index: \'budgetssummary\',\n    description: \'summary of budgets\',\n    properties: {\n        style: {\n            margin: "16px",\n            border: "2px solid silver",\n            borderRadius: "8px",\n            boxShadow: \'rgba(0, 0, 0, 0.4) 0px 10px 30px, rgba(0, 0, 0, 0.4) 0px 6px 10px\'\n        }\n    },\n    children: [{\n        type: \'cardtitle\',\n        controller: \'card\',\n        index: \'summary\',\n        description: \'summary title\',\n        properties: {\n            title: \'Summary\',\n            titleStyle: {\n                fontSize: \'20px\',\n                fontWeight: \'bold\'\n            },\n            style: {\n                padding: "16px 16px 0 16px"\n            }\n        }\n    }, {\n        type: \'cardtext\',\n        controller: \'card\',\n        index: \'summary\',\n        description: \'summary of budgets\',\n        properties: {\n            style: {\n                padding: \'0 16px\',\n                fontSize: \'16px\'\n            }\n        },\n        children: [{\n            type: \'markupblock\',\n            controller: \'card\',\n            index: \'summary\',\n            description: \'summary of budgets\',\n            properties: {\n                markup: `\n<figure style=\'float:right;width:30%;max-width:300px\'>\n<img src = \'/public/images/CommunityBudgetForum.jpg\' style=\'width:100%\'/>\n<figcaption style=\'font-size:x-small;text-align:center\'>Community budget forum</figcaption>\n</figure>\n\n### Budget structure\n\nLike most budgets, the City or Toronto budget consists of an _operating budget_ and a _capital budget_.\n\nAt its core, an operating budget is an estimation of future (annual) operating staffing costs, and consumable\ngoods and services purchased for the purpose of supporting those staff in performing their daily \ntasks. If a full accrual basis of budgeting is used, then depreciation of capital assets is also included\nin the budget.\n\nA capital budget consists of money to purchase or improve capital assets, which are the assets that\nare used to stage and support operating services. These include tangible assets (like \nbuildings, vehicles, or comptuter equipment) and other investments. \n\n_State of good repair_ budgets are a gray area, and their treatment can vary. If they _improve_ the assets \nto which they are applied, they are considered capital costs. If they simply _prevent excessive deterioration_ \nof an asset, they are considered operating costs. Toronto budgets treat state of good repair as capital costs.\n\n### Budget purpose\n\nThe purpose of budgets is to plan activities, and provide measurable criteria for evaluating performance.\nThe budget cycle supports management, and evaluation helps with improvements in management. In addition, \nmunicipal budgets are intended to inform the public. For all these reasons, budgets must be clear and \nunambiguous.\n\n### Interpreting the Toronto budget\n\nIt is important to understand that Toronto uses unconventional methods with its budgeting, together with \nconflations and even errors, to the point of being idiosyncratic. In addition there are signs that the \nunderlying accounting systems continue to have deficiencies (a full generation after amalgamation), and \ntherefore questions about accuracy. Finally, although a substantial amount of information is released, \ngranular information is not, making much of the data untestable. All of this, taken together, makes \nit difficult if not impossible to rely on budgetary information for detailed analytics. In other words \nToronto budgets are neither clear nor unambiguous. Moreover they do not easily compare to audited statements, \nfor evaluating outcomes.\n\nInstead, we urge readers to use budget information for general information, with caution, and rely more on \naudited statements for meaningful trends.\n\n### Our proposal\n\nHaving come to the conclusion that Toronto budgets are overly complex and obtuse, we have a \nproposal to help with this. Our proposal is twofold:\n- work toward simple and conventional approaches to budgeting, to achieve accurate, understandable reporting\n- publish granular data (to the cost-centre level) to achieve grounded, practical decision-making\n\nWe think both of these are achievable.\n`\n            }\n        }]\n    }]\n};\nlet roadmapsummary = {\n    type: \'card\',\n    controller: \'card\',\n    index: \'roadmapsummary\',\n    description: \'summary of roadmap\',\n    properties: {\n        style: {\n            margin: "16px",\n            border: "2px solid silver",\n            borderRadius: "8px",\n            boxShadow: \'rgba(0, 0, 0, 0.4) 0px 10px 30px, rgba(0, 0, 0, 0.4) 0px 6px 10px\'\n        }\n    },\n    children: [{\n        type: \'cardtitle\',\n        controller: \'card\',\n        index: \'tableofcontents\',\n        description: \'summary title\',\n        properties: {\n            title: \'Summary\',\n            titleStyle: {\n                fontSize: \'20px\',\n                fontWeight: \'bold\'\n            },\n            style: {\n                padding: "16px 16px 0 16px"\n            }\n        }\n    }, {\n        type: \'cardtext\',\n        controller: \'card\',\n        index: \'summary\',\n        description: \'summary of roadmap\',\n        properties: {\n            style: {\n                padding: \'0 16px\',\n                fontSize: \'16px\'\n            }\n        },\n        children: [{\n            type: \'markupblock\',\n            controller: \'card\',\n            index: \'tableofcontents\',\n            description: \'page table of contents\',\n            properties: {\n                markup: `### Budget scope\n\nThe City of Toronto has about 60 divisions (directly managed by the City Manager) and agencies \n(managed at arms length). Collectively called _programs_, these organizations are staffed by\nabout 55,000 people. The operating budget for all this activity is around $12B.\n\n<figure style=\'float:right;width:30%;max-width:300px\'>\n<img src = \'/public/images/RileyPetersonDeputant.png\' style=\'width:100%\'/>\n<figcaption style=\'font-size:x-small;text-align:center\'>Riley Peterson, TYC, deputing</figcaption>\n</figure>\n\n### Budget creation process \n\nWe are informed through Freedom of Information requests that budgeting is begun at the _cost-centre_ level \n(there are about 13,000 of these),\nand rolled up from there both for an organizational view (roughly through units, sections, and programs), \nand a services view (roughly sub-activities, activiites, services and programs).\n\nThe results are assembled by Financial Planning Division (FPD) Analysts, and reviewed and negotiated with the \nFPD Executive Director. It then goes through iterations involving the Chief Financial Officer, Deputy City Managers,\nand the City Manager. Subsequently it goes through iterations involving the Budget Committee, the Executive Committee,\nand City Council. Public deputations (typically with 5 minute limitations) are invited by the Budget Committee\na couple of months before the budget is approved by City Council.\n\n### Strategy and evaluation\n\nPrior to this process senior City staff and politicians develop a general strategy and priorities. Subsequent to this\nprocess the Budget Committee receives high level (divisoin and agency level) variance reports from the Financial Planning Division on a quarterly\nbasis, to review actual expenditures against the budgets.\n\nFinally an audited statement for the budget year is issued about half a year after the budget year is over, and\nsome 27 months after the process begins.\n\n### Improvements\n\nAlthough much material is published throughout this long cycle, we think that given the size and importance\nof the budget, more delegation, inclusiveness and collaborarion at all levels around\nthe budget process would very likely lead to better outcomes for all.\n\n`\n            }\n        }]\n    }]\n};\nlet mainpageheader = {\n    controller: \'card\',\n    index: \'mainpageheader\',\n    description: \'header for the main page\',\n    lookups: {\n        style: {\n            repo: \'styles\',\n            index: \'headercardstyle\'\n        }\n    },\n    wrapper: {\n        type: \'div\',\n        properties: {\n            style: {\n                margin: "8px"\n            }\n        }\n    },\n    type: \'card\',\n    properties: {},\n    children: [{\n        controller: \'card\',\n        index: \'htmlview\',\n        description: \'images at right of header\',\n        lookups: {\n            html: {\n                index: \'headerimages\',\n                repo: \'html\'\n            }\n        },\n        type: \'htmlview\'\n    }, {\n        controller: \'card\',\n        index: \'cardtitle\',\n        type: \'cardtitle\',\n        properties: {\n            title: "This is _Budgetpedia_",\n            subtitle: "Supporting informed debate about the Toronto budget",\n            style: {\n                padding: "16px 16px 0 16px"\n            },\n            titleStyle: {\n                fontSize: \'20px\',\n                fontWeight: \'bold\'\n            }\n        }\n    }, {\n        controller: \'card\',\n        index: \'cardtext\',\n        type: \'cardtext\',\n        properties: {\n            style: {\n                fontSize: \'16px\'\n            }\n        },\n        children: [{\n            index: \'toplinklist\',\n            repo: \'linklists\'\n        }, {\n            index: \'secondlinklist\',\n            repo: \'linklists\'\n        }]\n    }]\n};\nlet mainpagefooter = {\n    controller: \'card\',\n    index: \'mainpagefooter\',\n    description: \'footer for the main page\',\n    lookups: {\n        style: {\n            repo: \'styles\',\n            index: \'footercardstyle\'\n        }\n    },\n    wrapper: {\n        type: \'div\',\n        properties: {\n            style: {\n                padding: "8px"\n            }\n        }\n    },\n    type: \'card\',\n    properties: {},\n    children: [{\n        controller: \'card\',\n        index: \'cardtext\',\n        type: \'cardtext\',\n        properties: {},\n        children: [{\n            index: \'thirdlinklist\',\n            repo: \'linklists\'\n        }]\n    }]\n};\nlet cards = {\n    budgetssummary,\n    roadmapsummary,\n    mainpageheader,\n    mainpagefooter\n};\n/* harmony default export */ var cards_index = (cards);\n// CONCATENATED MODULE: ./ts/model/pages.index.tsx\n// pages.index.tsx\n// ======================= [INVENTORY]========================\n// # a child\n// {\n//     disabled:true,\n//     index:\'home.twitterfeed\',\n//     repo:\'sections\',\n// },\n// ===========================================================\nlet pages_index_pages = {\n    home: {\n        controller: \'page\',\n        index: \'home\',\n        type: \'page\',\n        noToc: true,\n        attribution: {\n            custodian: {\n                name: \'Henrik Bechmann\',\n                link: \'mailto:henrik@budgetpedia.ca\'\n            },\n            authority: null,\n            creator: null,\n            updater: null,\n            contact: {\n                name: \'mail@budgetpedia.ca\',\n                link: \'mailto:mail@budgetpedia.ca\'\n            },\n            dates: {\n                created: \'12-01-2018\',\n                updated: \'27-04-2018\'\n            }\n        },\n        tags: null,\n        properties: {\n            title: \'budgetpedia home\',\n            description: \'Toronto budgetpedia home\'\n        },\n        children: [{\n            index: \'home.header\',\n            repo: \'sections\'\n        }, {\n            index: \'torontobudget\',\n            repo: \'sections\'\n        }, {\n            index: \'aboutbudgetpedia\',\n            repo: \'sections\'\n        }, {\n            index: \'home.tiles\',\n            repo: \'sections\'\n        }]\n    },\n    budgets: {\n        controller: \'page\',\n        index: \'budgets\',\n        type: \'page\',\n        attribution: {\n            custodian: {\n                name: \'Henrik Bechmann\',\n                link: \'mailto:henrik@budgetpedia.ca\'\n            },\n            authority: null,\n            creator: null,\n            updater: null,\n            contact: {\n                name: \'mail@budgetpedia.ca\',\n                link: \'mailto:mail@budgetpedia.ca\'\n            },\n            dates: {\n                created: \'12-01-2018\',\n                updated: \'12-01-2018\'\n            }\n        },\n        tags: null,\n        properties: {\n            title: \'Toronto budgets\',\n            description: \'Summary of Toronto budgets\'\n        },\n        children: [{\n            repo: \'sections\',\n            index: \'budgets.header\'\n        }, {\n            repo: \'sections\',\n            index: \'budgets.instances\'\n        }, {\n            repo: \'sections\',\n            index: \'budgets.resources\'\n        }, {\n            repo: \'sections\',\n            index: \'budgets.systems\'\n        }, {\n            repo: \'sections\',\n            index: \'budgets.perspectives\'\n        }]\n    },\n    roadmap: {\n        controller: \'page\',\n        index: \'roadmap\',\n        type: \'page\',\n        attribution: {\n            custodian: {\n                name: \'Henrik Bechmann\',\n                link: \'mailto:henrik@budgetpedia.ca\'\n            },\n            authority: null,\n            creator: null,\n            updater: null,\n            contact: {\n                name: \'mail@budgetpedia.ca\',\n                link: \'mailto:mail@budgetpedia.ca\'\n            },\n            dates: {\n                created: \'31-12-2017\',\n                updated: \'9-1-2018\'\n            }\n        },\n        tags: null,\n        properties: {\n            title: \'Toronto budget roadmap\',\n            description: \'Summary of Toronto budget processes over the years\'\n        },\n        children: [{\n            repo: \'sections\',\n            index: \'roadmap.header\'\n        }, {\n            repo: \'sections\',\n            index: \'roadmap.notes\'\n        }, {\n            repo: \'sections\',\n            index: \'roadmap.council\'\n        }, {\n            repo: \'sections\',\n            index: \'roadmap.civilsociety\'\n        }, {\n            repo: \'sections\',\n            index: \'roadmap.elsewhere\'\n        }, {\n            repo: \'sections\',\n            index: \'roadmap.possibilities\'\n        }]\n    },\n    overview: {\n        controller: \'page\',\n        index: \'overview\',\n        type: \'page\',\n        attribution: {\n            custodian: {\n                name: \'Henrik Bechmann\',\n                link: \'mailto:henrik@budgetpedia.ca\'\n            },\n            authority: null,\n            creator: null,\n            updater: null,\n            contact: {\n                name: \'mail@budgetpedia.ca\',\n                link: \'mailto:mail@budgetpedia.ca\'\n            },\n            dates: {\n                created: \'22-12-2017\',\n                updated: \'9-1-2018\'\n            }\n        },\n        tags: null,\n        properties: {\n            title: \'Budgetpedia Overview\',\n            description: \'supporting informed debate about the Toronto budget\'\n        },\n        children: [{\n            index: \'overview\',\n            repo: \'sections\'\n        }, {\n            index: \'home.nuggets\',\n            repo: \'sections\'\n        }, {\n            index: \'home.basics\',\n            repo: \'sections\'\n        }, {\n            index: \'home.concerns\',\n            repo: \'sections\'\n        }, {\n            index: \'home.stories\',\n            repo: \'sections\'\n        }]\n    }\n};\n/* harmony default export */ var pages_index = (pages_index_pages);\n// CONCATENATED MODULE: ./ts/model/routes.index.tsx\n// routes.repo.tsx\nlet routes = {\n    \'/roadmap\': \'roadmap\',\n    \'/\': \'home\',\n    \'/budgets\': \'budgets\',\n    \'/overview\': \'overview\'\n};\n/* harmony default export */ var routes_index = (routes);\n// CONCATENATED MODULE: ./ts/model/styles.index.tsx\nlet headercardstyle = {\n    backgroundImage: "url(/public/icons/WebsiteBanner.png)",\n    backgroundSize: "cover",\n    margin: "8px",\n    border: "2px solid silver",\n    borderRadius: "8px",\n    boxShadow: \'rgba(0, 0, 0, 0.4) 0px 10px 30px, rgba(0, 0, 0, 0.4) 0px 6px 10px\'\n};\nlet footercardstyle = {\n    backgroundImage: "url(/public/icons/WebsiteBanner.png)",\n    backgroundSize: "cover",\n    margin: "8px",\n    border: "2px solid silver",\n    borderRadius: "8px",\n    boxShadow: \'rgba(0, 0, 0, 0.4) 0px 10px 30px, rgba(0, 0, 0, 0.4) 0px 6px 10px\'\n};\nlet tileliststyle = {\n    padding: "36px 16px 16px",\n    display: "block",\n    overflowX: "scroll"\n};\nlet styles_index_styles = {\n    headercardstyle,\n    footercardstyle,\n    tileliststyle\n};\n/* harmony default export */ var styles_index = (styles_index_styles);\n// CONCATENATED MODULE: ./ts/model/linklists.index.tsx\n// linklists.index.tsx\nlet toplinklist = {\n    controller: \'list\',\n    index: \'toplinklist\',\n    type: \'linklist\',\n    properties: {\n        upperDivider: true,\n        header: \'Browse our site:\',\n        items: [{\n            prompt: "See information about Toronto\'s budget decision cycle at our",\n            icon: \'/public/icons/ic_map_48px.svg\',\n            target: \'/roadmap/\',\n            targetText: \'Budget Roadmap\',\n            suffix: \'page\'\n        }, {\n            prompt: \'See budget details on our\',\n            icon: \'/public/icons/ic_attach_money_48px.svg\',\n            target: \'/budgets\',\n            targetText: \'Budgets\',\n            suffix: \'page\'\n        }, {\n            prompt: \'Explore the Toronto budget with our\',\n            icon: \'/public/icons/ic_explore_48px.svg\',\n            target: \'/explorer\',\n            targetText: \'Budget Explorer\'\n        }, {\n            prompt: \'Find related\',\n            icon: \'/public/icons/ic_library_books_48px.svg\',\n            target: \'/resources\',\n            targetText: \'Resources\'\n        }, {\n            prompt: \'See our Toronto budgeting overview\',\n            icon: \'/public/icons/ic_wb_sunny_black_48px.svg\',\n            target: \'/overview\',\n            targetText: \'Overview\'\n        }, {\n            prompt: \'See our publications on our subsite\',\n            icon: \'/public/icons/ic_wb_sunny_black_48px.svg\',\n            target: \'http://pubs.budgetpedia.ca\',\n            targetText: \'pubs.budgetpedia.ca\',\n            external: true\n        }]\n    }\n};\nlet secondlinklist = {\n    controller: \'list\',\n    index: \'secondlinklist\',\n    type: \'linklist\',\n    properties: {\n        upperDivider: true,\n        header: \'Follow us:\',\n        items: [{\n            external: true,\n            prompt: \'For news check out our\',\n            icon: \'/public/icons/twitter.png\',\n            target: \'http://twitter.com/budgetpedia\',\n            targetText: \'Twitter account\',\n            // description:\'... or see the twitter feed below\',\n            imageStyle: {\n                height: \'14px\'\n            }\n        }, {\n            external: true,\n            prompt: \'For in-depth articles see our\',\n            icon: \'/public/icons/medium.png\',\n            target: \'http://medium.com/budgetpedia\',\n            targetText: \'Medium publication\'\n        }]\n    }\n};\n// let thirdlinklistheader = \'More media (experimental):\'\n// let thirdlinklistitems = [\nlet thirdlinklist = {\n    controller: \'list\',\n    index: \'thirdlinklist\',\n    type: \'linklist\',\n    properties: {\n        header: \'More media (experimental):\',\n        items: [{\n            external: true,\n            icon: \'/public/icons/facebook.png\',\n            target: \'http://facebook.com/budgetpedia\',\n            targetText: \'our Facebook page\'\n        }, {\n            external: true,\n            icon: \'/public/icons/facebook.png\',\n            target: \'http://facebook.com/groups/budgetpedia\',\n            targetText: \'our Facebook group\'\n        }, {\n            external: true,\n            prompt: \'For technical discussions:\',\n            icon: \'/public/icons/g-logo.png\',\n            target: \'http://groups.google.com/d/forum/budgetpedia\',\n            targetText: \'our Google forum\'\n        }, {\n            external: true,\n            prompt: \'Videos:\',\n            icon: \'/public/icons/YouTube-icon-full_color.png\',\n            target: \'https://www.youtube.com/channel/UCatXKvLCA5qGkzj3jw8AQig\',\n            targetText: \'YouTube\'\n        }, {\n            external: true,\n            prompt: \'Blog:\',\n            icon: \'/public/icons/blogspot.jpeg\',\n            target: \'http://budgetpedia.blogspot.ca/\',\n            targetText: \'Blogspot\'\n        }]\n    }\n};\nlet linklists = {\n    toplinklist,\n    secondlinklist,\n    thirdlinklist\n};\n/* harmony default export */ var linklists_index = (linklists);\n// CONCATENATED MODULE: ./ts/model/nuggetlists.index.tsx\n// nuggetlists.index.tsx\nlet abouttoronto = {\n    controller: \'list\',\n    index: \'abouttoronto\',\n    description: \'basic stats about toronto\',\n    type: \'nuggetlist\',\n    properties: {\n        title: \'**About Toronto**\',\n        subtitle: \'(source: [StatsCan Census](http://www12.statcan.gc.ca/census-recensement/2016/dp-pd/prof/details/page.cfm?Lang=E&Geo1=CSD&Code1=3520005&Geo2=PR&Code2=01&Data=Count&SearchText=Toronto&SearchType=Begins&SearchPR=01&TABID=1&B1=All){style="color:white"})\',\n        image: \'/public/images/city-people-faded2.jpg\',\n        nuggets: [{\n            prefix: \'Population\',\n            infix: \'<span style=color:lightgreen>2.73M</span>\',\n            suffix: \'for 2016, including <span style="color:gold">~400K</span> 14 or under\',\n            contrast: true\n        }, {\n            prefix: \'Households\',\n            infix: \'1.11M\',\n            suffix: \'for 2016, including <span style="color:gold">693K</span> for 1 or 2 persons;<br><span style="color:gold">~53%</span> owned; <span style="color:gold">~47%</span> rented\',\n            contrast: true\n        }, {\n            prefix: \'Married\',\n            infix: \'1.18M\',\n            suffix: \'for 2016, or living common law\',\n            contrast: true\n        }, {\n            prefix: \'Family units\',\n            infix: \'719K\',\n            suffix: \'for 2016; two or more related people in a household\',\n            contrast: true\n        }, {\n            prefix: \'Non-official language speakers\',\n            infix: \'702K\',\n            suffix: \'residents speaking non-official languages<br>at home\',\n            contrast: true\n        }, {\n            prefix: \'Income\',\n            infix: \'$30K\',\n            suffix: \'for 2015, individual, median, for <span style="color:gold">2.19M</span><br>earners (work<br>or not)\',\n            contrast: true\n        }, {\n            prefix: \'Low income people\',\n            infix: \'543K\',\n            suffix: \'for 2015; living in low-income households (poverty)\',\n            contrast: true\n        }, {\n            prefix: \'Immigrants\',\n            infix: \'1.27M\',\n            suffix: \'including <span style="color:gold">354K</span> since 2006\',\n            contrast: true\n        }, {\n            prefix: \'Visible minorities\',\n            infix: \'1.39M\',\n            suffix: \'residents. Just over half<br>the population\',\n            contrast: true,\n            style: {\n                border: \'3px solid orange\'\n            }\n        }, {\n            prefix: \'Post secondary\',\n            infix: \'1.07M\',\n            suffix: \'residents with post-secondary certificate, diploma or degree\',\n            contrast: true\n        }, {\n            prefix: \'Full time workers\',\n            infix: \'751K\',\n            suffix: \'plus <span style="color:gold">752K</span> worked part year or part time\',\n            contrast: true\n        }]\n    }\n};\nlet torontofinances = {\n    controller: \'list\',\n    index: \'torontofinances\',\n    description: \'basic stats about toronto audited statements\',\n    type: \'nuggetlist\',\n    properties: {\n        title: \'**About Toronto Finances**\',\n        subtitle: \'(source: [audited statements](https://drive.google.com/open?id=0B208oCU9D8OuZW9OVU5sUVZtVDg){style="color:white"})\',\n        image: \'/public/images/cityscape-night.jpg\',\n        nuggets: [{\n            prefix: \'Revenue\',\n            infix: \'$12.2B\',\n            suffix: \'for 2016, <span style="color:gold">$109M</span> under budget\',\n            contrast: true\n        }, {\n            prefix: \'Expenses\',\n            infix: \'$10.95B\',\n            suffix: \'for 2016, <span style="color:gold">$950M</span> under budget\',\n            contrast: true\n        }, {\n            prefix: \'Surplus\',\n            infix: \'<span style=color:lightgreen>$1.25B</span>\',\n            suffix: \'for 2016, <span style="color:gold">$840M</span> over budget\',\n            contrast: true\n        }, {\n            prefix: \'Financial Assets\',\n            infix: \'$9.3B\',\n            suffix: \'at 2016, <span style="color:gold">~$3,400</span> per resident\',\n            contrast: true\n        }, {\n            prefix: \'Liabilities\',\n            infix: \'$15.8B\',\n            suffix: \'at 2016, <span style="color:gold">~$5,850</span> per resident\',\n            contrast: true\n        }, {\n            prefix: \'Net debt\',\n            infix: \'<span style=color:red>$6.5B</span>\',\n            suffix: \'at 2016, (financial assets less liabilities)<span style="color:gold">~$2,380</span> per resident\',\n            contrast: true\n        }, {\n            prefix: \'Tangible assets\',\n            infix: \'$29B\',\n            suffix: \'(including inventories and prepaids) at 2016, <span style="color:gold">~$10,600</span> per resident\',\n            contrast: true\n        }, {\n            prefix: \'Net worth\',\n            infix: \'<span style=color:lightgreen>$22.5B</span>\',\n            suffix: \'Accumulated Surplus at 2016, <span style="color:gold">~$8,220</span> per<br>resident\',\n            contrast: true,\n            style: {\n                border: \'3px solid orange\'\n            }\n        }, {\n            prefix: \'Cash provided by operating activities\',\n            infix: \'$2.53B\',\n            suffix: \'for 2016\',\n            contrast: true\n        }, {\n            prefix: \'Cash applied to<br>capital activities\',\n            infix: \'<span style=color:red>$2.57B</span>\',\n            suffix: \'for 2016\',\n            contrast: true\n        }, {\n            prefix: \'Cash provided by investing activities\',\n            infix: \'$1.02B\',\n            suffix: \'for 2016\',\n            contrast: true\n        }, {\n            prefix: \'Cash provided by financing activities\',\n            infix: \'$271K\',\n            suffix: \'for 2016\',\n            contrast: true\n        }, {\n            prefix: \'Net increase in cash during the year\',\n            infix: \'<span style=color:lightgreen>$1.24B</span>\',\n            suffix: \'for 2016\',\n            contrast: true\n        }]\n    }\n};\n// let financechangeslist = [\nlet torontotrends = {\n    controller: \'list\',\n    index: \'torontotrends\',\n    description: \'basic stats about toronto audited statement changes\',\n    type: \'nuggetlist\',\n    properties: {\n        title: \'**Toronto Finance Trends**\',\n        subtitle: \'(source: audited statements on [Budgetpedia](/explorer){style=color:white}) <span style=font-size:smaller;white-space:nowrap>*adjusted for inflation to 2017$*</span>\',\n        image: \'/public/images/ttc-faded.jpg\',\n        nuggets: [{\n            prefix: \'2010:2016<br>Population (for comparison)\',\n            infix: \'<span style=color:lightgreen>6.2%<span class=material-icons style=font-size:1.1em;vertical-align:top>arrow_upward</span></span>\',\n            suffix: \'Up by <span style=color:gold>166K</span> to <span style=color:gold>2.84M</span><span style=color:gold>\',\n            contrast: true\n        }, {\n            prefix: \'2010:2016<br>Overall revenues\',\n            infix: \'<span style=color:red>1.9%<span class=material-icons style=font-size:1.1em;vertical-align:top>arrow_downward</span></span>\',\n            suffix: \'Down by <span style=color:gold>$237M</span> to <span style=color:gold>$12.5B</span><span style=color:gold>\',\n            contrast: true\n        }, {\n            prefix: \'2010:2016<br>Government transfers\',\n            infix: \'<span style=color:red>23.3%<span class=material-icons style=font-size:1.1em;vertical-align:top>arrow_downward</span></span>\',\n            suffix: \'Down by <span style=color:gold>$847M</span> to <span style=color:gold>$2.9B</span>\',\n            contrast: true\n        }, {\n            prefix: \'2010:2016<br>User fees\',\n            infix: \'<span style=color:lightgreen>8.4%<span class=material-icons style=font-size:1.1em;vertical-align:top>arrow_upward</span></span>\',\n            suffix: \'Up by <span style=color:gold>$245M</span> to <span style=color:gold>$3.1B</span>\',\n            contrast: true\n        }, {\n            prefix: \'2010:2016<br>General revenues\',\n            infix: \'<span style=color:lightgreen>8.0%<span class=material-icons style=font-size:1.1em;vertical-align:top>arrow_upward</span></span>\',\n            suffix: \'Up by <span style=color:gold>$127M</span> to <span style=color:gold>$1.7B</span><br>(like development charges)\',\n            contrast: true\n        }, {\n            prefix: \'2010:2016<br>Property taxes\',\n            infix: \'<span style=color:red>9.2%<span class=material-icons style=font-size:1.1em;vertical-align:top>arrow_downward</span></span>\',\n            suffix: \'Down by <span style=color:gold>$410M</span> to <span style=color:gold>$4B</span>\',\n            contrast: true\n        }, {\n            prefix: \'2010:2016<br>Overall costs\',\n            infix: \'<span style=color:red>7.6%<span class=material-icons style=font-size:1.1em;vertical-align:top>arrow_downward</span></span>\',\n            suffix: \'Down by <span style=color:gold>$919M</span> to <span style=color:gold>$11.2B</span>\',\n            contrast: true\n        }, {\n            prefix: \'2010:2016<br>Staffing costs\',\n            infix: \'<span style=color:lightgreen>3.5%<span class=material-icons style=font-size:1.1em;vertical-align:top>arrow_upward</span></span>\',\n            suffix: \'Up by <span style=color:gold>$194M</span> to <span style=color:gold>$5.7B</span>\',\n            contrast: true\n        }, {\n            prefix: \'2010:2016<br>Transfer payments to persons\',\n            infix: \'<span style=color:red>34.7%<span class=material-icons style=font-size:1.1em;vertical-align:top>arrow_downward</span></span>\',\n            suffix: \'Down by <span style=color:gold>$651M</span> to <span style=color:gold>$1.3B</span>\',\n            contrast: true\n        }, {\n            prefix: \'2010:2016<br>All other costs\',\n            infix: \'<span style=color:red>9.9%<span class=material-icons style=font-size:1.1em;vertical-align:top>arrow_downward</span></span>\',\n            suffix: \'Down by <span style=color:gold>$546M</span> to <span style=color:gold>$4.2B</span>\',\n            contrast: true\n        }, {\n            prefix: \'2010:2016<br>Changes in net worth\',\n            infix: \'<span style=color:lightgreen>29.2%<span class=material-icons style=font-size:1.1em;vertical-align:top>arrow_upward</span></span>\',\n            suffix: \'Up by <span style=color:gold>$5.2B</span> to <span style=color:gold>$23B</span>\',\n            contrast: true,\n            style: {\n                border: \'3px solid orange\'\n            }\n        }, {\n            prefix: \'2010:2016<br>Changes in net debt\',\n            infix: \'<span style=color:red>31.8%<span class=material-icons style=font-size:1.1em;vertical-align:top>arrow_upward</span></span>\',\n            suffix: \'Up by <span style=color:gold>$1.6B</span> to <span style=color:gold>$6.6B</span>\',\n            contrast: true\n        }, {\n            prefix: \'2010:2016<br>Changes in tangible assets\',\n            infix: \'<span style=color:lightgreen>29.7%<span class=material-icons style=font-size:1.1em;vertical-align:top>arrow_upward</span></span>\',\n            suffix: \'Up by <span style=color:gold>$6.7B</span> to <span style=color:gold>$29.5B</span>\',\n            contrast: true\n        }]\n    }\n};\nlet nuggetlists = {\n    abouttoronto,\n    torontofinances,\n    torontotrends\n};\n/* harmony default export */ var nuggetlists_index = (nuggetlists);\n// CONCATENATED MODULE: ./ts/model/tilelists.index.tsx\n// tilelists.index.tsx\nlet mainpages = {\n    controller: \'list\',\n    index: \'mainpages\',\n    type: \'tilelist\',\n    lookups: {\n        style: {\n            repo: \'styles\',\n            index: \'tileliststyle\'\n        }\n    },\n    propReferences: {\n        onSelect: \'push\'\n    },\n    properties: {\n        onSelect: \'something\',\n        title: \'Main website pages\',\n        tiles: [{\n            id: 7,\n            content: {\n                title: `Budget Roadmap`,\n                subtitle: `About budget decisions`,\n                image: \'../../public/icons/ic_map_48px.svg\',\n                category: \'tools\'\n            },\n            index: 1,\n            tier: \'primary\',\n            route: \'/roadmap/\',\n            tag: \'roadmap\',\n            parent: \'home\'\n        }, {\n            id: 8,\n            content: {\n                title: `Budgets`,\n                subtitle: `About specific budgets`,\n                image: \'../../public/icons/ic_attach_money_48px.svg\',\n                category: \'tools\'\n            },\n            index: 1,\n            tier: \'primary\',\n            route: \'/budgets\',\n            tag: \'budgets\',\n            parent: \'home\'\n        }, {\n            id: 9,\n            content: {\n                title: `Budget Explorer`,\n                subtitle: `Interactive tools`,\n                image: \'../../public/icons/ic_explore_48px.svg\',\n                category: \'tools\'\n            },\n            index: 0,\n            tier: \'primary\',\n            route: \'/explorer\',\n            tag: \'explorer\',\n            parent: \'home\'\n        }, {\n            id: 15,\n            content: {\n                title: `Resources`,\n                subtitle: `External websites`,\n                image: \'../../public/icons/ic_library_books_48px.svg\',\n                category: \'support\'\n            },\n            index: 2,\n            tier: \'primary\',\n            route: \'/resources\',\n            tag: \'resources\',\n            parent: \'home\'\n        }, {\n            id: 17,\n            content: {\n                title: `Overview`,\n                subtitle: `Some quick context`,\n                image: \'../../public/icons/ic_wb_sunny_black_48px.svg\',\n                category: \'support\'\n            },\n            index: 3,\n            tier: \'primary\',\n            route: \'/overview\',\n            tag: \'overview\',\n            parent: \'home\'\n        }, {\n            id: 14,\n            content: {\n                title: `Activist Pathways`,\n                subtitle: `How to make change`,\n                image: \'../../public/icons/ic_directions_walk_48px.svg\',\n                category: \'support\'\n            },\n            index: 4,\n            tier: \'primary\',\n            route: \'/pathways\',\n            tag: \'pathways\',\n            parent: \'home\'\n        }, {\n            id: 6,\n            content: {\n                title: `About Budgetpedia`,\n                subtitle: `History, people, resources`,\n                image: \'../../public/icons/ic_info_48px.svg\',\n                category: \'information\'\n            },\n            index: 5,\n            tier: \'secondary\',\n            route: \'about\',\n            tag: \'about\',\n            parent: \'home\'\n        }, {\n            id: 16,\n            content: {\n                title: `Announcements`,\n                subtitle: `Budgetpedia Plans and News`,\n                image: \'../../public/icons/ic_announcement_black_48px.svg\',\n                category: \'information\'\n            },\n            index: 6,\n            tier: \'secondary\',\n            route: \'/announcements\',\n            tag: \'announcements\',\n            parent: \'home\'\n        }, {\n            id: 10,\n            content: {\n                title: `Our Teams`,\n                subtitle: `Join us!`,\n                image: \'../../public/icons/ic_group_48px.svg\',\n                category: \'get involved\'\n            },\n            index: 7,\n            tier: \'secondary\',\n            route: \'/teams\',\n            tag: \'teams\',\n            parent: \'home\'\n        }]\n    }\n};\nlet tilelists = {\n    mainpages\n};\n/* harmony default export */ var tilelists_index = (tilelists);\n// CONCATENATED MODULE: ./ts/model/media.index.tsx\n// media.index.tsx\nlet budgetpediatwitter = {\n    controller: \'media\',\n    index: \'budgetpediatwitter\',\n    description: \'budgetpedia twitter feed\',\n    type: \'timeline\',\n    properties: {\n        dataSource: {\n            sourceType: \'url\',\n            url: \'https://twitter.com/budgetpedia\'\n        },\n        options: {\n            username: \'Budgetpedia\',\n            height: \'400\'\n        }\n    },\n    wrapper: {\n        type: \'div\',\n        properties: {\n            style: {\n                maxWidth: \'600px\',\n                margin: \'0 auto\'\n            }\n        },\n        wrapper: {\n            type: \'div\',\n            properties: {\n                style: {\n                    padding: \'32px\',\n                    backgroundColor: \'silver\'\n                }\n            }\n        }\n    }\n};\nlet media = {\n    budgetpediatwitter\n};\n/* harmony default export */ var media_index = (media);\n// CONCATENATED MODULE: ./ts/model/sheets.index.tsx\n// sheets.index.tsx\nlet elsewhere = {\n    controller: \'paper\',\n    index: \'elsewhere\',\n    description: \'describe budget process elsewhere\',\n    lookups: {\n        draftdata: {\n            repo: \'draft\',\n            index: \'elsewhere\'\n        }\n    },\n    type: \'sheet\',\n    properties: {}\n};\nlet civilsociety = {\n    controller: \'paper\',\n    index: \'civilsociety\',\n    description: \'describe civil society involvement in the budget process\',\n    lookups: {\n        draftdata: {\n            repo: \'draft\',\n            index: \'civilsociety\'\n        }\n    },\n    type: \'sheet\',\n    properties: {}\n};\nlet councilservices = {\n    controller: \'paper\',\n    index: \'councilservices\',\n    description: \'describe council approach to budget process\',\n    lookups: {\n        draftdata: {\n            repo: \'draft\',\n            index: \'councilservices\'\n        }\n    },\n    type: \'sheet\',\n    properties: {}\n};\nlet citybasics = {\n    controller: \'paper\',\n    index: \'citybasics\',\n    description: \'describe the basics of what the city does\',\n    lookups: {\n        draftdata: {\n            repo: \'draft\',\n            index: \'citybasics\'\n        }\n    },\n    type: \'sheet\',\n    properties: {}\n};\nlet cityprocess = {\n    controller: \'paper\',\n    index: \'cityprocess\',\n    description: \'describe the process of basic budgeting\',\n    lookups: {\n        draftdata: {\n            repo: \'draft\',\n            index: \'cityprocess\'\n        }\n    },\n    type: \'sheet\',\n    properties: {}\n};\nlet concerns = {\n    controller: \'paper\',\n    index: \'concerns\',\n    description: \'the concerns of budgetpedia relating to the City of Toronto budget\',\n    lookups: {\n        draftdata: {\n            repo: \'draft\',\n            index: \'concerns\'\n        }\n    },\n    type: \'sheet\',\n    properties: {}\n};\nlet opportunities = {\n    controller: \'paper\',\n    index: \'opportunities\',\n    description: \'the opportunities for improvements in the budget process\',\n    lookups: {\n        draftdata: {\n            repo: \'draft\',\n            index: \'opportunities\'\n        }\n    },\n    type: \'sheet\',\n    properties: {}\n};\nlet stories = {\n    controller: \'paper\',\n    index: \'stories\',\n    description: \'the focus of the budgetpedia website\',\n    lookups: {\n        draftdata: {\n            repo: \'draft\',\n            index: \'stories\'\n        }\n    },\n    type: \'sheet\',\n    properties: {}\n};\nlet sheets = {\n    civilsociety,\n    elsewhere,\n    councilservices,\n    citybasics,\n    cityprocess,\n    concerns,\n    opportunities,\n    stories\n};\n/* harmony default export */ var sheets_index = (sheets);\n// CONCATENATED MODULE: ./ts/model/data/html.index.tsx\n// html.index.tsx\nlet headerimages = __webpack_require__(888);\nlet html_index_html = {\n    headerimages\n};\n/* harmony default export */ var html_index = (html_index_html);\n// CONCATENATED MODULE: ./ts/model/data/draft.index.tsx\n// draft.index.tsx\nlet draft_index_citybasics = __webpack_require__(887);\nlet draft_index_cityprocess = __webpack_require__(886);\nlet draft_index_concerns = __webpack_require__(885);\nlet draft_index_opportunities = __webpack_require__(884);\nlet draft_index_stories = __webpack_require__(883);\nlet draft_index_councilservices = __webpack_require__(882);\nlet draft_index_elsewhere = __webpack_require__(881);\nlet draft_index_civilsociety = __webpack_require__(880);\nlet draft = {\n    councilservices: draft_index_councilservices,\n    citybasics: draft_index_citybasics,\n    cityprocess: draft_index_cityprocess,\n    concerns: draft_index_concerns,\n    opportunities: draft_index_opportunities,\n    stories: draft_index_stories,\n    elsewhere: draft_index_elsewhere,\n    civilsociety: draft_index_civilsociety\n};\n/* harmony default export */ var draft_index = (draft);\n// CONCATENATED MODULE: ./ts/model/papers.index.tsx\n// papers.index.tsx\nlet budgetpediapremise = {\n    controller: \'paper\',\n    index: \'torontobudget\',\n    description: \'toronto budget restatement\',\n    type: \'paper\',\n    children: [{\n        controller: \'paper\',\n        type: \'markupblock\',\n        index: \'torontobudget\',\n        description: \'toronto budget restatement\',\n        properties: {\n            markup: `\n## Budgetpedia - Our Premise\n\n<div style = "columns:260px 2; column-rule:1px solid silver; column-gap:24px">\n\n<img style="width:100%" src = "/public/images/virtuouscircle.png" />\n\nIt\'s a simple idea. Continuous improvement in budgets should support improvements in related\nareas. Our intention is to \n- channel good ideas for budgeting into creation of more useful budgets \n- disseminate budget information in the most usable forms possible\n- elaborate on topics that are of current concern\n\n</div>\n`\n        }\n    }]\n};\nlet budgetpediaoverview = {\n    controller: \'paper\',\n    index: \'torontobudget\',\n    description: \'toronto budget restatement\',\n    type: \'paper\',\n    children: [{\n        controller: \'paper\',\n        type: \'markupblock\',\n        index: \'torontobudget\',\n        description: \'toronto budget restatement\',\n        properties: {\n            markup: `\n\n## Budgetpedia - Our Project\'s State of Play\n\n<div style = "columns:260px 2; column-rule:1px solid silver; column-gap:24px">\nOur aims are:\n\n1. to make the Toronto budget more **accessible** to the people of Toronto, in order to \nsupport informed debate about the budget\n2. to advocate for **improvements** to the Toronto budget, and the budget process\n\nOn the first point, we\'ve\n\n1. created a simplified [classification scheme](https://medium.com/budgetpedia/the-toronto-operating-budget-simplified-1138019ad430) (taxonomy) of the services Toronto provides\n2. created a prototype of ancillary a [Toronto operating _accrual_ budget design](https://drive.google.com/open?id=1sG25QhvePazO96Pcgkeetk6b-nSRqMFa)\n3. started to understand Toronto\'s [capital investment strategy](https://drive.google.com/open?id=1f6nI7xsY_i0LcNMc_8vh_8VPpzJ9VN0I)\n\nOn the second point \n\n4. we\'ve created an [advocacy platform](https://docs.google.com/document/d/1_JylWmhOGt7ghlh9BK8dau5_sxP40VixSaVb3oJ7ko4), and a \n[draft proposal](https://drive.google.com/open?id=1kbCk5sA61eq_ttXgk8zLSwMxR5yMuujR) for an ancillary operating _accrual_ budget design \n([slide deck](https://drive.google.com/open?id=1kbCk5sA61eq_ttXgk8zLSwMxR5yMuujR))for the Toronto budget committee.\nWe\'re also starting to collect notes on concern (red flags showing up) about [Toronto\'s Financial Controls](https://drive.google.com/open?id=16V1SkA8VEZ4i76kfhy6ijeAGrxbUzZ--xzJrtSZhhJ0).\n\nFor both \n\n5. we have an ongoing [research program](https://drive.google.com/open?id=1j4ylfNXSd3Ewqjt6eDSFVVNkBETE-AtN8TJDfGz-G-o).\n\nAlso, we\'re working on \n\n6. making this website more useful (give us another year on that one -- hopefully summer 2019). Meanwhile\nthere\'s quite a bit here already. See the <a href="#this-is-budgetpedia">contents</a> below.\n\nIn short, we\'re at a good plateau. Now we\'re taking some time to regroup for the next phase of development.\n\n- Spring, 2018\n\n</div>\n\n<div style = "display:flex;justify-content:center;margin-top:24px;text-align:center">\n\n<img style = "max-width:600px; width:90%;align-self:flex-start;" src = "/public/images/bpworkshop.jpg" /><br />\n<span style = "font-size:x-small;font-style:italic">A Budgetpedia workshop</span>\n\n</div>\n`\n        }\n    }]\n};\nlet electionopinion = {\n    controller: \'paper\',\n    index: \'torontobudget\',\n    description: \'toronto budget restatement\',\n    type: \'paper\',\n    children: [{\n        controller: \'paper\',\n        type: \'markupblock\',\n        index: \'torontobudget\',\n        description: \'toronto budget restatement\',\n        properties: {\n            markup: `\n## Opinion: Current Issues \n_by Henrik Bechmann April 1, 2018_ {style="color:gray;margin-top:-16px"}\n\nHere are some budget-related issues that I think could use some attention.\n\n<div style = "display:flex;flex-flow:row wrap;justify-content:flex-start;align-items:flex-start">\n\n<div style = "display:flex;min-width:260px;flex:300px;">\n\n1. __City staff are trying to codify the closed budget development process__. \n[see agenda item](https://www.toronto.ca/legdocs/mmis/2018/ex/bgrd/backgroundfile-113004.pdf) \n(section 3b, page 9). Single public budget guidance meeting in May, then only \nstaff-driven budget development, followed by fully formed budget review in the fall. \nToo late for meaningful public input.\n\n</div>\n\n<div style = "display:flex;min-width:260px;flex:300px;text-align:center;align-items:flex-start">\n\n<img style="width:90%" src="/public/images/budgetdefault.jpg" /><br />\n<span style = "font-size:x-small;font-style:italic">Toronto Budget Committee allows 5 minute deputations</span>\n\n</div>\n\n<div style = "display:flex;min-width:260px;flex:300px;">\n\n2. __Narrative from the City is one of financial distress, which is not really true__. \nThis narrative is given space by a cash-based operating budget. But City balance sheet is in great \nshape. Reserves, financial assets, tangible assets, net worth are all way up. Indeed \nit seems that the City has prioritized capital over services. So capital assets are improving;\nservices not so much. See \n[my article](https://drive.google.com/open?id=1f6nI7xsY_i0LcNMc_8vh_8VPpzJ9VN0I) for a summary.\n\n</div>\n\n<div style = "display:flex;min-width:260px;flex:300px;text-align:center;align-items:flex-start">\n\n<img style="width:90%" src="/public/images/berczy.jpg" /><br />\n<span style = "font-size:x-small;font-style:italic">Berczy Park, $7.2M, high end investment</span>\n\n</div>\n\n<div style = "display:flex;min-width:260px;flex:300px;">\n\n3. __An ancillary, accrual-based (clearer, more transparent) budget is \nachievable__. \nSee [discussion paper](https://drive.google.com/open?id=1sG25QhvePazO96Pcgkeetk6b-nSRqMFa) for details.\n\n</div>\n\n<div style = "display:flex;min-width:260px;flex:300px;text-align:center;align-items:flex-start">\n\n<img style="width:90%" src="/public/images/accrualbudget.png" /><br />\n<span style = "font-size:x-small;font-style:italic">Accrual-based budgeting - alternative</span>\n\n</div>\n\n<div style = "display:flex;min-width:260px;flex:300px;">\n\n4. __A great deal of money has been left on the table in recent years__. Behind the scenes \nconsensus seems to be that if City raised property taxes, Province would contribute more. \nIf Property taxes went up by 10% (about parity with area), that could be $400M x 2 = $800M/yr more.\n\n</div>\n\n<div style = "display:flex;min-width:260px;flex:300px;text-align:center;align-items:flex-start">\n\n<img style="width:90%" src="/public/images/queenspark.jpg" /><br />\n<span style = "font-size:x-small;font-style:italic">Queen\'s Park (Ontario government) said to be willing to spend more</span>\n\n</div>\n\n<div style = "display:flex;min-width:260px;flex:300px;">\n\n5. __Cultural and digital transformation of the City civil service is still not being \ntaken seriously enough__. These could lead to better planning, better community buy-in. City has \nChief Transformation Officer, but I\'m not seeing progressive agenda here; likely \noutsourcing focus.\n\n</div>\n\n<div style = "display:flex;min-width:260px;flex:300px;text-align:center;align-items:flex-start">\n\n<img style="width:90%" src="/public/images/seeclickfix.png" /><br />\n<span style = "font-size:x-small;font-style:italic">[SeeClickFix](https://en.seeclickfix.com/) - an example of practical civic engagement</span>\n\n</div>\n\n</div>\n`\n        }\n    }]\n};\nlet torontobudget = {\n    controller: \'paper\',\n    index: \'torontobudget\',\n    description: \'toronto budget restatement\',\n    type: \'paper\',\n    children: [{\n        controller: \'paper\',\n        type: \'markupblock\',\n        index: \'torontobudget\',\n        description: \'toronto budget restatement\',\n        properties: {\n            markup: `## The 2018 Toronto Budget: Our _Accrual_ Based Prototype\n\n<div style = "columns:260px 2; column-rule:1px solid silver; column-gap:24px">\n\nThe current Toronto budget is cash based, which can be confusing in certain contexts,\nso we create an ancillary _accrual_ based budget.\n\nFor our latest thinking on this see the [discussion paper](https://drive.google.com/file/d/1sG25QhvePazO96Pcgkeetk6b-nSRqMFa/view). {style=margin-top:0}\n\nWe restate the 2018 budget, using an _accrual_ based model. \nWe think this can be a more conventional, clearer, presentation than\nthe cash based model in certain contexts. This is our prototype.\n\nBelow is the expense budget. Its main feature is the _core operating budget_ -- about $8.5B --\nwhich is the cost of staff, plus the rent, services, materials, supplies, etc required to support their work.\n\n</div>\n\n<figure style="width:100%;max-width:600px;margin:0 auto 32px auto">\n    <img style="width:100%" src="/public/images/2018expensebudget.png" />\n    <figcaption style="font-size:x-small;color:#999;text-align:center">\nSource: <a target = "_blank" href="https://docs.google.com/spreadsheets/d/1M9vF4S7gb72Na8vd0RdR6kUdwI46DPhEnJbn7GpSIT0/view#gid=1191626711" >Henrik Bechmann</a>\n    </figcaption>\n</figure>\n\n<div style = "columns:260px 2; column-rule:1px solid silver; column-gap:24px">\n\nThe _financial assistance to persons_ in the above chart is isolated because it\'s not a normal expense -- it represents\nmoney that is simply passed through to the recipients of the subsidies. It includes housing, income, and child subsidies. {style=margin-top:0}\n\nNotice that the budgeted revenue below is higher than the expenses above. The City\'s budget\ndeliberately includes an operating surplus to provide money for capital investments and other requirements.\n\n</div>\n\n<figure style="width:100%;max-width:600px;margin:0 auto 32px auto">\n    <img style="width:100%" src="/public/images/2018revenuebudget.png" />\n    <figcaption style="font-size:x-small;color:#999;text-align:center">\nSource: <a target = "_blank" href="https://docs.google.com/spreadsheets/d/1M9vF4S7gb72Na8vd0RdR6kUdwI46DPhEnJbn7GpSIT0/view#gid=1191626711" >Henrik Bechmann</a>\n    </figcaption>\n</figure>\n\n<div style = "columns:260px 2; column-rule:1px solid silver; column-gap:24px">\n\nThe _Property tax_ above is set by Toronto Council to bring the revenues up to an amount equal to the expenses plus the \namounts required for additional capital investments and requirements. That property tax amount is then used\nto determine the property tax rate for payers. {style=margin-top:0}\n\nFinally, below is a chart showing how the budgeted revenue is distributed. The _cash for investment and reserves_ is what\nmost of the fighting is about -- where to get it; how to spend it.\n\n</div>\n\n<figure style="width:100%;max-width:600px;margin:0 auto 32px auto">\n    <img style="width:100%" src="/public/images/2018distributionbudget.png" />\n    <figcaption style="font-size:x-small;color:#999;text-align:center">\nSource: <a target = "_blank" href="https://docs.google.com/spreadsheets/d/1M9vF4S7gb72Na8vd0RdR6kUdwI46DPhEnJbn7GpSIT0/view#gid=1191626711" >Henrik Bechmann</a>\n    </figcaption>\n</figure>\n\n<div style = "columns:260px 2; column-rule:1px solid silver; column-gap:24px">\n\nNote that we are striving for conceptual clarity here. Many of the numbers are rough estimates, because\nwe don\'t (yet!) have the exact data from the City that we would need for greater numerical accuracy. {style=margin-top:0}\n\nFor a systematic discussion paper about imporved budget design see \n[Modernized Toronto Budget Prototype V. 1](https://drive.google.com/open?id=1sG25QhvePazO96Pcgkeetk6b-nSRqMFa)\n\n</div>\n`\n        }\n    }]\n};\nlet aboutbudgetpedia = {\n    controller: \'paper\',\n    index: \'aboutbudgetpedia\',\n    description: \'about budgetpedia\',\n    type: \'paper\',\n    children: [{\n        controller: \'paper\',\n        type: \'markupblock\',\n        index: \'aboutbudgetpedia\',\n        description: \'about budgetpedia\',\n        properties: {\n            markup: `## Our Mission\n\n<div style = "columns:260px 2; column-rule:1px solid silver; column-gap:24px">\n\nOur mission is in two parts: {style=margin-top:0}\n1. help make the budget more accessible to Torontonians, to support informed debate about the budget\n2. advocate to the City for better access to budget data (and related results, staffing, and performance data)\n and improvements in the budget reports, timeliness, and accuracy.\n\n We need the second to achieve the first.\n\n Here is a list of the initiatives that we think would provide benefits to everyone involved:\n - improvements in the design of budget reports\n - accurate, timely, automated, on-demand reports\n - on-demand cost-centre reports, including financial data (budgets and actuals), plus staffing\n   and performance data.\n - a well-organized repository on Toronto\'s [open data portal](http://toronto.ca/open), to provide ready access to the data\n   listed above, plus source documents of related City reports.\n\nToronto has about 13,000 cost centres (like community centres, parks, libraries, etc.).\n\n</div>\n\n<div style = "display:flex;justify-content:center;margin-top:24px">\n\n<img style = "max-width:600px; width:90%;align-self:flex-start;" src = "/public/images/dufferinwadingpool_a.jpg" />\n\n</div>\n\n<p style = "text-align:center; font-size:x-small; font-style:italic">Public service: Dufferin Grove Park wading pool</p>\n`\n        }\n    }]\n};\nlet staffing = {\n    controller: \'paper\',\n    index: \'staffing\',\n    description: \'staffing\',\n    type: \'paper\',\n    children: [{\n        controller: \'paper\',\n        type: \'markupblock\',\n        index: \'staffing\',\n        description: \'staffing\',\n        properties: {\n            markup: `## Staffing\n`\n        }\n    }]\n};\nlet currentconventions = {\n    controller: \'paper\',\n    index: \'currentconventions\',\n    description: \'current conventions\',\n    type: \'paper\',\n    children: [{\n        controller: \'paper\',\n        type: \'markupblock\',\n        index: \'currentconventions\',\n        description: \'current conventions\',\n        properties: {\n            markup: `## Current Unconventional Practices\n`\n        }\n    }]\n};\nlet betterconventions = {\n    controller: \'paper\',\n    index: \'betterconventions\',\n    description: \'better conventions\',\n    type: \'paper\',\n    children: [{\n        controller: \'paper\',\n        type: \'markupblock\',\n        index: \'betterconventions\',\n        description: \'better conventions\',\n        properties: {\n            markup: `## Suggested Conventions\n`\n        }\n    }]\n};\nlet budgetvsaudit = {\n    controller: \'paper\',\n    index: \'budgetvsaudit\',\n    description: \'budget vs audit\',\n    type: \'paper\',\n    children: [{\n        controller: \'paper\',\n        type: \'markupblock\',\n        index: \'budgetvsaudit\',\n        description: \'budget vs audit\',\n        properties: {\n            markup: `## From _Budgets_ to _Variance Reports_ to _Audited Statements_\n`\n        }\n    }]\n};\nlet hierarchies = {\n    controller: \'paper\',\n    index: \'hierarchies\',\n    description: \'hierarchies\',\n    type: \'paper\',\n    children: [{\n        controller: \'paper\',\n        type: \'markupblock\',\n        index: \'hierarchies\',\n        description: \'hierarchies\',\n        properties: {\n            markup: `## Classification Hierarchies\n`\n        }\n    }]\n};\nlet budgetsastheatre = {\n    controller: \'paper\',\n    index: \'budgetsastheatre\',\n    description: \'budgets as theatre\',\n    type: \'paper\',\n    children: [{\n        controller: \'paper\',\n        type: \'markupblock\',\n        index: \'budgetsastheatre\',\n        description: \'budgets as theatre\',\n        properties: {\n            markup: `## Budgets as Theatre\n`\n        }\n    }]\n};\nlet cityvision = {\n    controller: \'paper\',\n    index: \'cityvision\',\n    description: \'city vision\',\n    type: \'paper\',\n    children: [{\n        controller: \'paper\',\n        type: \'markupblock\',\n        index: \'cityvision\',\n        description: \'city vision\',\n        properties: {\n            markup: `## Financial Planning Division\'s Vision\n`\n        }\n    }]\n};\nlet fpars = {\n    controller: \'paper\',\n    index: \'fpars\',\n    description: \'fpars\',\n    type: \'paper\',\n    children: [{\n        controller: \'paper\',\n        type: \'markupblock\',\n        index: \'fpars\',\n        description: \'fpars\',\n        properties: {\n            markup: `## FPARS\n`\n        }\n    }]\n};\nlet variancereports = {\n    controller: \'paper\',\n    index: \'variancereports\',\n    description: \'variance reports\',\n    type: \'paper\',\n    children: [{\n        controller: \'paper\',\n        type: \'markupblock\',\n        index: \'variance reports\',\n        description: \'variance reports\',\n        properties: {\n            markup: `## Variance Reports\n`\n        }\n    }]\n};\nlet auditedstatements = {\n    controller: \'paper\',\n    index: \'auditedstatements\',\n    description: \'audited statements\',\n    type: \'paper\',\n    children: [{\n        controller: \'paper\',\n        type: \'markupblock\',\n        index: \'auditedstatments\',\n        description: \'audited statements\',\n        properties: {\n            markup: `## Audited Statements\n\n... including outside auditor\'s [year-end report](http://app.toronto.ca/tmmis/viewAgendaItemHistory.do?item=2017.AU9.1) submitted to audit committee.\n`\n        }\n    }]\n};\nlet sourcedocuments = {\n    controller: \'paper\',\n    index: \'sourcedocuments\',\n    description: \'budget source documents\',\n    type: \'paper\',\n    children: [{\n        controller: \'paper\',\n        type: \'markupblock\',\n        index: \'sourcedocuments\',\n        description: \'budget source documents\',\n        properties: {\n            markup: `## Budget Source Document Types\n\nThese are the main types of documents made available by the City of Toronto about the budget\n\nThe following items are available as attachments to Committee or council agendas. They tend to be\nclustered in the order listed here. For example see the \n[agenda for the 2018 final wrapup](http://app.toronto.ca/tmmis/viewAgendaItemHistory.do?item=2018.BU41.1) at the \nbudget committee for 2018 here.\n\n- __budget presentations__: Budget presentations are prepared overviews typically prepared for the \n   budget committee. See for example the City Manager\'s \n   [overview of the 2018 budget](https://www.toronto.ca/legdocs/mmis/2018/bu/bgrd/backgroundfile-111266.pdf).\n- __analyst notes__: the main vehicle the City uses to describe its programs. The exact number can\n    vary, but for the 2018 budget there were 49 operating budget analyst notes and 27 capital budget analyst notes.\n    The City divisions and agencies listed in the annual budget summaries get their own operating \n    budget analyst notes (not all programs have capital budgets). Some analyst notes, such as the \n    notes for the City Manager or Chief Financial officer, are used to combine some of the smaller\n    programs. See for example the \n    [Parks, Forestry and Recreation Operating Budget Notes](https://www.toronto.ca/legdocs/mmis/2018/bu/bgrd/backgroundfile-111146.pdf).\n\n    For an example of an entire set see the budget \n    [committee agenda](http://app.toronto.ca/tmmis/viewAgendaItemHistory.do?item=2018.BU41.1) for \n    the 2018 budget and search for "operating budget notes".\n- __briefing notes and reports__: These are topical reports that are typically requested by councillors.\n  They are numbered sequentially. See for example Briefing Note #4 "Changes  to Existing User Fees and New User Fees in the\n2018 Preliminary Operating Budget" [here](https://www.toronto.ca/legdocs/mmis/2018/bu/bgrd/backgroundfile-111270.pdf).\n- __wrap-up notes__: These appear to be checklists of final items to be resolved before finalizing the years\n   budgets. One each for Capital and Operating budgets. For example \n   [here](https://www.toronto.ca/legdocs/mmis/2018/bu/bgrd/backgroundfile-111307.pdf) (operating) and \n   [here](https://www.toronto.ca/legdocs/mmis/2018/bu/bgrd/backgroundfile-111283.pdf) (capital).\n\nThe following item is a summarized alternate (accrual based) view of the currently presented budget:\n\n- __estimate of accrual budget__ _("Additional City of Toronto Act Reporting Requirements as a Result of \n   Recording of Tangible Capital Assets")_: These are [mandated by the province](https://www.ontario.ca/laws/regulation/090286) and are typically presented\n   to the Budget Committee each year at the final budget wrap-up meeting. They are required to restate the current\n   budget on a full accrual (summary) basis. They may form the basis for clearer budget formats in the future.\n   See for example the agenda item [here](http://app.toronto.ca/tmmis/viewAgendaItemHistory.do?item=2018.BU41.2), \n   and the report [here](https://www.toronto.ca/legdocs/mmis/2018/bu/bgrd/backgroundfile-111547.pdf) (see table page 6).\n\nThe following items are post-budget summaries\n\n- __public book__: A public book is a compendium of analyst notes with some introductions, for a budget year.\n  See for example the [public book for 2017](https://www1.toronto.ca/City%20Of%20Toronto/Strategic%20Communications/City%20Budget/2017/PDFs/2017%20Public%20Book.pdf).\n  This follows guidelines from the [gfoa.org](http://gfoa.org) (Government Finance Officers Association)\n- __summaries__: operating, capital, staffing. These summary listings contain the highest level one-line summary\n   for every program grouping that is presented at the hightest level. See an example \n   [here](https://www1.toronto.ca/City%20Of%20Toronto/Strategic%20Communications/City%20Budget/2017/PDFs/2017%20CN%20Approved%20Budget%20(Op%20%20Cap)%20%20Position%20Summary%20(%20final%20June%2013).pdf).\n\n   A note about staffing reports. Staffing reports, particularly historical records are hard to find. Moreover finding\n   listings that break out capital and operating staffing complement is hard or impossible. In recent years\n   Toronto has stopped providing capital and operating breakouts in the summary reports altogether. This makes it \n   impossible to assess the relative staffing requirements for these basic areas of the budget.\n\nThe following sources provide additional supporting documentation, or alternate sources for some of the above documentation.\n\n- __website__: The main budget portal of the City of Toronto website is [here](https://www.toronto.ca/city-government/budget-finances/city-budget/).\n   It is updated annually, and leads to some historical budget summaries.\n- __open data portal__: As of this writing there are 3 budget datasets on the Toronto Open Data portal:\n   - Budget - Capital Budget & Plan By Ward ([10 Year Recommended](https://www.toronto.ca/city-government/data-research-maps/open-data/open-data-catalogue/#463113ed-6ad1-c05f-9ed5-f8965f40f7d3))\n   - Budget - Capital Budget & Plan By Ward ([10 yr Approved](https://www.toronto.ca/city-government/data-research-maps/open-data/open-data-catalogue/#40640a85-9b8a-6075-ca00-7824907d8856))\n   - Budget - [Operating Budget Program Summary](https://www.toronto.ca/city-government/data-research-maps/open-data/open-data-catalogue/#ddb0c9b9-2ea8-c633-8c2e-c15d6f1289aa) by Expenditure Category (which has some recommended, and approved)\n   There are multiple issues of format and timeliness with these datasets.\n- __toolkit for councillors__: The most recent example of this we would find is for [2017](https://www1.toronto.ca/wps/portal/contentonly?vgnextoid=a4acd9dc1151a510VgnVCM10000071d60f89RCRD&vgnextchannel=bf2cf02ab1208510VgnVCM10000071d60f89RCRD).\n\nFor general reference:\n\n- __organizational chart__: the [org chart](https://www1.toronto.ca/divisions/pdf/org_chart.pdf) \n   helps to understand the relationship of divisions, and occasionally\n   helps locate division data in division analyst notes. It doesn\'t cover agencies though. \n   For lists of agencies and corporations see \n   [here](https://www.toronto.ca/city-government/accountability-operations-customer-service/city-administration/city-managers-office/agencies-corporations/).\n- __corporate reports__: Find a list of corporations owned or partially ownded by Toronto \n  [here](https://www.toronto.ca/city-government/accountability-operations-customer-service/city-administration/city-managers-office/agencies-corporations/)\n  under "Corporations". \n  Individual corporation budgets and \n  financial statements have to be tracked down. See for example the 2016 TCHC \n  [audited statements](https://www.torontohousing.ca/about/annual-reports/Documents/2016_Consolidated_Financial_Statement.pdf). \n  Shareholder\'s results are included in Toronto\n  financial statements.\n\nNote that there is no City central well-organized repository for all of this documentation. At budgetpedia\nwe have some of this on our Google Drive, and we hope to surface what we can to an open data portal one day.\n\n`\n        }\n    }]\n};\nlet terminology = {\n    controller: \'paper\',\n    index: \'terminology\',\n    description: \'terminology\',\n    type: \'paper\',\n    children: [{\n        controller: \'paper\',\n        type: \'markupblock\',\n        index: \'terminology\',\n        description: \'terminology\',\n        properties: {\n            markup: `## Terminology\n`\n        }\n    }]\n};\nlet budget2018 = {\n    controller: \'paper\',\n    index: \'budget2018\',\n    description: \'2018 budget details\',\n    type: \'paper\',\n    children: [{\n        controller: \'paper\',\n        type: \'markupblock\',\n        index: \'budget2018\',\n        description: \'2018 budget details\',\n        properties: {\n            markup: `## 2018 Budget\n\n<figure style = \'float:right;width:50%;max-width:300px\'>\n<div style = \'float:right;width:100%\'>\n    <iframe style = \'float:right;width:100%;border:none\' \n        src="https://www.youtube.com/embed/mnUMDeQOUwA?start=18281" \n        allow="autoplay; encrypted-media" \n        allowfullscreen>\n    </iframe>\n</div>\n<figcaption style=\'text-align:center;padding:3px;clear:both;font-size:x-small\'>City Manager Peter Wallace: value for money</figcaption>\n</figure>\n\n### Spring Launch\n\nThe 2018 budget cycle began May 11, 2017.\n\nThe [budget committee](http://app.toronto.ca/tmmis/decisionBodyProfile.do?function=doPrepare&meetingId=12190) \nconsidered the [2018 budget directions and schedule](http://app.toronto.ca/tmmis/viewAgendaItemHistory.do?item=2017.BU32.7) \non May 11, 2017. ([video](https://youtu.be/mnUMDeQOUwA?t=5473))\n\nHighlights:\n\n- Toronto City Manager lays out rationale for 2018 budget direction -- "Status Quo": \n  [video](https://youtu.be/mnUMDeQOUwA?t=15992)\n- Toronto City Manager explains to Councillor DiCiano how \'Value for money\' can happen - contracting \n  out, investment in digital and management, reduce \'core businesses\', take discretion away from staff: \n  [video](https://youtu.be/mnUMDeQOUwA?t=18281)\n- Toronto City Manager says value for money means reduction of \'core businesses\' and reduction of \n  staff discretion: [video](https://youtu.be/mnUMDeQOUwA?t=18470)\n- Toronto City Manager talks about shrinking Municipal Government and Services: [video](https://youtu.be/mnUMDeQOUwA?t=18742)\n- Toronto City Manager answers Councillor Davis on public Service Plan Review and \n   Priority-Setting process: [video](https://youtu.be/mnUMDeQOUwA?t=19360)\n- Toronto City Manager offers explanation to Councillors for failure of maintaining state of good repair: \n  [video](https://youtu.be/mnUMDeQOUwA?t=19845)\n\nThe [executive committee](http://app.toronto.ca/tmmis/decisionBodyProfile.do?function=doPrepare&meetingId=11825) \nconsidered the [2018 budget directions and schedule](http://app.toronto.ca/tmmis/viewAgendaItemHistory.do?item=2017.EX25.18) on May 16, 2017.\n\nHighlights:\n\n- 2018 budget direction: [video](https://www.youtube.com/watch?v=hR3gYykKJOw&feature=youtu.be&t=28381)\n- New Real Estate Division: [video](https://www.youtube.com/watch?v=hR3gYykKJOw&feature=youtu.be&t=22628)\n\nThe [City Council](http://app.toronto.ca/tmmis/decisionBodyProfile.do?function=doPrepare&meetingId=11859) \nconsidered the [2018 budget directions and schedule](http://app.toronto.ca/tmmis/viewAgendaItemHistory.do?item=2017.EX25.18) \non May 24, 2017. [video May 25, 2017, Part 1](https://www.youtube.com/watch?v=qxzMIKnH4OE), \n[video May 25, 2017, Part 2, after closed session](https://youtu.be/nv--55vbcb0?t=3341), \n[video May 26, 2017](https://www.youtube.com/watch?v=-xbjpFsPRNI)\n\nHighlights:\n\n- 2018 budget direction: [agenda](http://app.toronto.ca/tmmis/viewAgendaItemHistory.do?item=2017.EX25.18), \n  [video](https://youtu.be/qxzMIKnH4OE?t=1235)\n- New Real Estate Division: [agenda](http://app.toronto.ca/tmmis/viewAgendaItemHistory.do?item=2017.EX25.9)\n\n_No further public consultations took place on the 2018 budget (as directed by Council) before \nNovember 2017. Therefore most decisions were be made by staff behind closed doors._\n\n### Fall and Winter Public Deliberations\n\nRate supported budgets (waste, water, and parking) entirely supported by user fees (some, but not\nall, of the videos have links to specific agenda items under "SHOW MORE" in the comments under the \nvideos -- sorry we haven\'t had time to isolate the segments):\n\n- Budget Committee\n    - launch [November 3, 2017](http://app.toronto.ca/tmmis/decisionBodyProfile.do?function=doPrepare&meetingId=12849): \n        [agenda](http://app.toronto.ca/tmmis/viewAgendaItemHistory.do?item=2017.BU35.1), \n        [video](https://www.youtube.com/watch?v=kHQ-wY8fZDE&t=30s)\n    - [budget briefings](http://app.toronto.ca/tmmis/decisionBodyProfile.do?function=doPrepare&meetingId=12194) \n        and public presentations November 10, 2017: \n        agenda [water](http://app.toronto.ca/tmmis/viewAgendaItemHistory.do?item=2017.BU36.1),\n        [waste](http://app.toronto.ca/tmmis/viewAgendaItemHistory.do?item=2017.BU36.2),\n        [parking](http://app.toronto.ca/tmmis/viewAgendaItemHistory.do?item=2017.BU36.3); \n        [video](https://www.youtube.com/watch?v=1NwAJLyrUQI)\n    - [final wrap-up meeting](http://app.toronto.ca/tmmis/decisionBodyProfile.do?function=doPrepare&meetingId=12850) as scheduled November 27, 2017: \n        agenda shceduled, but no directly related items on agenda \n- [Executive Committee](http://app.toronto.ca/tmmis/decisionBodyProfile.do?function=doPrepare&meetingId=11834) \n    presentations November 28, 2017: \n    agenda [water](http://app.toronto.ca/tmmis/viewAgendaItemHistory.do?item=2017.EX29.18),\n    [waste](http://app.toronto.ca/tmmis/viewAgendaItemHistory.do?item=2017.EX29.19),\n    [parking](http://app.toronto.ca/tmmis/viewAgendaItemHistory.do?item=2017.EX29.20);\n    [video part 1](https://www.youtube.com/watch?v=p3Wv6MTNLm0),\n    [video part 2](https://www.youtube.com/watch?v=5SkfsAzdKec)\n- [City Council](http://app.toronto.ca/tmmis/decisionBodyProfile.do?function=doPrepare&meetingId=11868) presentation December 6, 7 & 8, 2017: \n    agenda: [water](http://app.toronto.ca/tmmis/viewAgendaItemHistory.do?item=2017.EX29.18),\n     [waste](http://app.toronto.ca/tmmis/viewAgendaItemHistory.do?item=2017.EX29.19), \n     [parking](http://app.toronto.ca/tmmis/viewAgendaItemHistory.do?item=2017.EX29.20),\n     [video Dec 6 part 1](https://www.youtube.com/watch?v=rCyd1uMV58c),\n     [video Dec 6 part 2](https://www.youtube.com/watch?v=shTV_c4R8Aw),\n     [video Dec 7 part 1](https://www.youtube.com/watch?v=s9bRsZql7hM),\n     [video Dec 7 part 2](https://www.youtube.com/watch?v=DuBEh0b-kPA),\n     [video Dec 8 part 1](https://www.youtube.com/watch?v=ioOutUYhz7A),\n     [video Dec 8 part 2](https://www.youtube.com/watch?v=OUSO-HfRngc)\n\nTax supported budgets (all the rest) supported to some extent by property taxes:\n\n- Budget Committee\n    - [launch](http://app.toronto.ca/tmmis/decisionBodyProfile.do?function=doPrepare&meetingId=12851) November 30, 2017: \n        [agenda](http://app.toronto.ca/tmmis/viewAgendaItemHistory.do?item=2017.BU38.1), \n        [video](https://www.youtube.com/watch?v=-Ij9VQK9UCU)\n    - [program reviews](http://app.toronto.ca/tmmis/decisionBodyProfile.do?function=doPrepare&meetingId=12852),\n        [agenda](http://app.toronto.ca/tmmis/viewAgendaItemHistory.do?item=2017.BU39.1) \n        - December 12, 2017: [video](https://www.youtube.com/watch?v=skCtecX6Udk)\n        - December 14, 2017: [video part 1](https://www.youtube.com/watch?v=fqC7dHGobIY&t=2s),\n            [video part 2](https://www.youtube.com/watch?v=ysWn7H7pDVA)\n        - December 15, 2017: [video](https://www.youtube.com/watch?v=LOoZbNxG2SE)\n        - December 18, 2017: [video part 1](https://www.youtube.com/watch?v=yXE-STh3o2A),\n            [video part 2](https://www.youtube.com/watch?v=GtLnQyZ5T38)\n- Budget Sub-Committee public presentations\n    - Etobicoke Civic Center January 8, 2018: [video afternoon](https://www.youtube.com/watch?v=47ZSp7MaF4s),\n        [video evening](https://www.youtube.com/watch?v=ZSUnkyKxkIw)\n    - Scarborough Civic Center January 8, 2018: [video afternoon](https://www.youtube.com/watch?v=68eZHc3CaBY),\n        [video evening](https://www.youtube.com/watch?v=4G_celYbT-U)\n    - North York Civic Center January 9, 2018: [video afternoon](https://www.youtube.com/watch?v=2hA5zQMCjco),\n        [video evening](https://www.youtube.com/watch?v=X8ogyZ8tZ5Q)\n    - York Civic Center January 9, 2018: [video afternoon](https://www.youtube.com/watch?v=6roz5ub9zNw),\n        [video evening](https://www.youtube.com/watch?v=_O_EEWTc8pw)\n    - East York Civic Center January 10, 2018: [video evening](https://www.youtube.com/watch?v=9C07Fr_pDYw),\n        [video afternoon](https://www.youtube.com/watch?v=lA7e0aQYLIs)\n    - City Hall January 10, 2018: [video day, part 1](https://www.youtube.com/watch?v=lKejPuuw8Sg),\n        [video day, part 2](https://www.youtube.com/watch?v=MNLgu27jptg),\n        [video evening](https://www.youtube.com/watch?v=ihM1enTJkBo&t=1681s)\n- Budget Committee\n    - [wrap-up](http://app.toronto.ca/tmmis/decisionBodyProfile.do?function=doPrepare&meetingId=13026) January 12, 2018: \n        [agenda](http://app.toronto.ca/tmmis/viewAgendaItemHistory.do?item=2018.BU40.1), \n        [video part 1](https://www.youtube.com/watch?v=uSvpzzgTFhU),\n        [video part 2](https://www.youtube.com/watch?v=iGq3R_XlS8s)\n    - [Final wrap-up](http://app.toronto.ca/tmmis/decisionBodyProfile.do?function=doPrepare&meetingId=13027), January 23, 2018: [agenda](http://app.toronto.ca/tmmis/viewAgendaItemHistory.do?item=2018.BU41.1), video _[pending]_ \n        - here\'s the [report that discloses the $1.37B surplus](https://www.toronto.ca/legdocs/mmis/2018/bu/bgrd/backgroundfile-111547.pdf) (see table p. 6) of the 2018 budget "for accounting purposes"\n- Executive Committee presentation February 6, 2018: _[pending]_ agenda, video\n- City Council presentation February 12 & 13, 2018: _[pending]_ agenda, video\n\n_See the City of Toronto\'s videos of committee meetings [here](https://www.youtube.com/channel/UCfe2rzOnQzgEDvNzRRPUJsA/videos)._\n\n`\n        }\n    }]\n};\nlet budget2017 = {\n    controller: \'paper\',\n    index: \'budget2017\',\n    description: \'2017 budget details\',\n    type: \'paper\',\n    children: [{\n        controller: \'paper\',\n        type: \'markupblock\',\n        index: \'budget2017\',\n        description: \'2017 budget details\',\n        properties: {\n            markup: `## 2017 Budget\n\nToronto\'s 2017 public budget process schedule is published [here](http://bit.ly/2eKcrfK).\n\nFollow events in these committees using the City\'s [TMMIS](http://app.toronto.ca/tmmis/index.do) \n(Toronto Meeting Management Information System). \nLive streams can be seen [here](https://www.youtube.com/channel/UCfe2rzOnQzgEDvNzRRPUJsA). Each committee\'s agendas, minutes, background documents, and meeting \nvideos can be found through these links:\n\nRate supported budgets (waste, water, parking)\n- [Budget Committee](http://app.toronto.ca/tmmis/decisionBodyProfile.do?function=doPrepare&decisionBodyId=1022): \n  [November 4](http://app.toronto.ca/tmmis/decisionBodyProfile.do?function=doPrepare&meetingId=11968) \n  ([video](http://app.toronto.ca/tmmis/video.do?id=11968)) , \n  [November 18](http://app.toronto.ca/tmmis/decisionBodyProfile.do?function=doPrepare&meetingId=11065) \n  ([video](http://app.toronto.ca/tmmis/video.do?id=11065))\n- [Executive Committee](http://app.toronto.ca/tmmis/decisionBodyProfile.do?function=doPrepare&decisionBodyId=966): \n  [December 1](http://app.toronto.ca/tmmis/decisionBodyProfile.do?function=doPrepare&meetingId=10995) \n  ([video](http://app.toronto.ca/tmmis/video.do?id=10995))\n- [City Council](http://app.toronto.ca/tmmis/decisionBodyProfile.do?function=doPrepare&decisionBodyId=961): \n  [December 13, 14, 15](http://app.toronto.ca/tmmis/decisionBodyProfile.do?function=doPrepare&meetingId=10878) \n  ([video](http://app.toronto.ca/tmmis/video.do?id=10878))\n\nTax supported budgets (eveything else)\n- [Budget Committee](http://app.toronto.ca/tmmis/decisionBodyProfile.do?function=doPrepare&decisionBodyId=1022): \n  [December 6](http://app.toronto.ca/tmmis/decisionBodyProfile.do?function=doPrepare&meetingId=11948) \n  ([video](http://app.toronto.ca/tmmis/video.do?id=11948)) , \n  [December 16, 19 & 20](http://app.toronto.ca/tmmis/decisionBodyProfile.do?function=doPrepare&meetingId=11969) \n  ([video](http://app.toronto.ca/tmmis/video.do?id=11969)) , \n  [January 5, 9 & 10](http://bit.ly/2eKcrfK) \n  (deputation videos: Etobicoke Civic Center [afternoon](http://app.toronto.ca/tmmis/video.do?id=12330), \n  [evening](http://app.toronto.ca/tmmis/video.do?id=12344); \n  Scarborough Civic Center [afternoon](http://app.toronto.ca/tmmis/video.do?id=12324), \n  [evening](http://app.toronto.ca/tmmis/video.do?id=12333); \n  North York Civic Center [afternoon](http://app.toronto.ca/tmmis/video.do?id=12331), \n  [evening](http://app.toronto.ca/tmmis/video.do?id=12345); \n  East York Civic Center [afternoon](http://app.toronto.ca/tmmis/video.do?id=12326), \n  [evening](http://app.toronto.ca/tmmis/video.do?id=12327); \n  York Civic Center [afternoon](http://app.toronto.ca/tmmis/video.do?id=12332), \n  [evening](http://app.toronto.ca/tmmis/video.do?id=12346); \n  City Hall [morning](http://app.toronto.ca/tmmis/video.do?id=12328), [evening](http://app.toronto.ca/tmmis/video.do?id=12329)) , \n  [January 12](http://app.toronto.ca/tmmis/decisionBodyProfile.do?function=doPrepare&meetingId=11816) \n  ([video](http://app.toronto.ca/tmmis/video.do?id=11816)) , \n  [January 24](http://app.toronto.ca/tmmis/decisionBodyProfile.do?function=doPrepare&meetingId=11817) \n  ([video](http://app.toronto.ca/tmmis/video.do?id=11817))\n- [Executive Committee](http://app.toronto.ca/tmmis/decisionBodyProfile.do?function=doPrepare&decisionBodyId=966): \n  [February 7](http://app.toronto.ca/tmmis/decisionBodyProfile.do?function=doPrepare&meetingId=11819) \n  ([video](http://app.toronto.ca/tmmis/video.do?id=11819))\n- [City Council](http://app.toronto.ca/tmmis/decisionBodyProfile.do?function=doPrepare&decisionBodyId=961): \n  [February 15](http://app.toronto.ca/tmmis/decisionBodyProfile.do?function=doPrepare&meetingId=11852) \n  ([video](http://app.toronto.ca/tmmis/video.do?id=11852))\n\n`\n        }\n    }]\n};\nlet participatory = {\n    controller: \'paper\',\n    index: \'participatory\',\n    description: \'participatory budget details\',\n    type: \'paper\',\n    children: [{\n        controller: \'paper\',\n        type: \'markupblock\',\n        index: \'participatory\',\n        description: \'participatory budget details\',\n        properties: {\n            markup: `\n<figure style = \'float:right;width:50%;max-width:300px\'>\n<div style = \'float:right;width:100%\'>\n    <iframe style = \'float:right;width:100%;border:none\' \n        src="https://www.youtube.com/embed/hKQmx1KQrDs" \n        allow="autoplay; encrypted-media" \n        allowfullscreen>\n    </iframe>\n</div>\n<figcaption style=\'text-align:center;padding:3px;clear:both;font-size:x-small\'>Participatory Budgeting in Canada</figcaption>\n</figure>\n\n## Participatory Budgeting\n\nThe City of Toronto has had a Participatory Budget pilot projects for a few years. \nUsing mostly facilitated workshopping techniques, local citizens collaborate, consult,\nand finally vote on local projects they would like to implement using the budget they\nhave been allocated. [Most recently](https://www1.toronto.ca/wps/portal/contentonly?vgnextoid=ac53968ac42bc510VgnVCM10000071d60f89RCRD)\nseveral locales in Toronto have selected 11 projects to implement in 3 Toronto neighbourhoods.\n\n\nFor more information, see the following:\n- Toronto Community Housing Corporation has had a [participatory budgeting process](https://www.torontohousing.ca/pb) for some 15 years.\n- Torontoist: [How the Participatory Budgeting Process Works](https://torontoist.com/2016/10/participatory-budgeting-explainer/)\n- An article in Spacing magazine from 2015 for background: \n    [Toronto flirts with participatory budgeting](http://spacing.ca/toronto/2015/09/28/toronto-flirts-participatory-budgeting/)\n\n`\n        }\n    }]\n};\nlet investinginto = {\n    controller: \'paper\',\n    index: \'investinginto\',\n    description: \'investingin budget details\',\n    type: \'paper\',\n    children: [{\n        controller: \'paper\',\n        type: \'markupblock\',\n        index: \'investinginto\',\n        description: \'investingin budget details\',\n        properties: {\n            markup: `\n<figure style = \'float:right;width:50%;max-width:300px\'>\n<div style = \'float:right;width:100%\'>\n    <iframe style = \'float:right;width:100%;border:none\' \n        src="https://www.youtube.com/embed/xlvL_1GGCjI?start=1812" \n        allow="autoplay; encrypted-media" \n        allowfullscreen>\n    </iframe>\n</div>\n<figcaption style=\'text-align:center;padding:3px;clear:both;font-size:x-small\'>Financial Planning ED Josie LaVita: system vision</figcaption>\n</figure>\n\n## Investing in Toronto\n\nToronto undertook a planning process to find additional sources of funding from November 2016 to\nMay of 2017. The website for this initiative is here: [www.investinginto.ca](http://www.investinginto.ca/).\n\nSee the first phase report [here](https://drive.google.com/open?id=0B208oCU9D8OuV0ZNcUpqYWpzdUE).\n\nSee the second phase consultation videos for Governance and Financial Oversight here (April 22, 2017):\n\n- [Financial and Other Decision-Making Information with Public Discussion](https://www.youtube.com/watch?v=xlvL_1GGCjI). \n  Josie La Vita\'s plans for Financial Data Manaagement: scraped [slide deck](https://drive.google.com/open?id=1jmDAeN2rsG2XQwlAmycqxTmhunfONc1z9zlLZHmEctk); \n  [video portion](https://youtu.be/xlvL_1GGCjI?t=1812).\n- [Balancing City Priorities and the Books: Public Debates](https://www.youtube.com/watch?v=3JuxEPlT4AM)\n- [Public Engagement for Long-Term Goals, Issues and Multi-Year Decision-Making](https://www.youtube.com/watch?v=WRPEKSRtdjc)\n\nSee the web page summarizing the consultations [here](https://www.toronto.ca/city-government/budget-finances/city-finance/long-term-financial-plan/long-term-financial-plan-consultations/).\n\nSee the final report [here](https://drive.google.com/open?id=18DQIMs7LHWiQLQuuknx9cwlUNrL8Z2l_).\n\nAmong the findings in the final report, from page 5:\n\n>To be able to provide better input, most participants want more information, and for that information\nto be presented in a way they can more easily understand. Participants acknowledge a tension between\nproviding all the data available, which is inherently complex, and providing more accessible data, which\noften requires reducing the level of detail. Participants suggested potential solutions to this challenge\ninclude:\n>-  Providing more detail of spending at the community level\n>-  Presenting alternative spending options, and cost and benefit analysis\n>-  Expanding the open data program to include more topics and sources\n>-  Using narrative or storytelling to present information\n>-  Developing charts and visualizations which can be easily shared through social media\n>-  Tracking the progress of programs and strategies\n>-  Creating more dialogue and opportunities for the public to ask questions\n\nThat\'s what we at Budgetpedia are trying to do!\n\n`\n        }\n    }]\n};\nlet councilprocess = {\n    controller: \'paper\',\n    index: \'insiderview\',\n    description: \'describe insider details of budget process\',\n    type: \'paper\',\n    children: [{\n        controller: \'paper\',\n        type: \'markupblock\',\n        index: \'collabortion\',\n        description: \'review of council collaborative initiatives\',\n        properties: {\n            markup: `## Wanted: Teamwork on Council\n\n<figure style = \'float:right;font-size:x-small;font-style:italic;margin:0 0 8px 8px\'>\n<img src=\'/public/images/90c4-scarroll.jpg\' style = \'width:80px\' />\n<figcaption>Councillor Carroll</figcaption>\n</figure>\n\nAt a recent SPPG (School of Public Policy and Governance) \n[event about Toronto\'s budget process](http://publicpolicy.utoronto.ca/better-budget-process-toronto/), \nCouncillor Carroll explained that the last time Councillors participated in a facilitated discussion \nabout common budget goals was 2004 (under Mayor Miller). She said it worked quite well.\n\nWe have observed, with many others, that things haven\'t worked particularly well since then. Debate often seems to\ndegrade into one side demanding _more_ money and the other demanding _less_. More or less an uninspired stalemate \n(or what council recently termed a "status quo" budget).\n\nSPPG also convened a [_City Hall Task Force_](http://publicpolicy.utoronto.ca/events/cityhalltaskforce-2/) recently \nwith highly qualified members. They came up with a number of recommendations,\ncentered around the notion that the Mayor\'s office lead with an annual vision of what the budget should accomplish.\nWe concur that these ideas could help.\n\nHere is a diagram from that Task Force report \n(_[A Practical Blueprint for Change](http://individual.utoronto.ca/eidelman/docs/City%20Hall%20Task%20Force%20Final%20Report.pdf)_), \nwhich identifies some general goals that all councillors could consider embracing, as a group.\n\n<div style=\'text-align:center;font-size:smaller;font-style:italic\'>\n\n![SPPG Task Force recommendations](/public/images/SPPG_TaskForce_Recommendations.png){style=max-width:75%}\n\n</div>\n\n`\n        }\n    }]\n};\nlet insiderview = {\n    controller: \'paper\',\n    index: \'insiderview\',\n    description: \'describe insider details of budget process\',\n    type: \'paper\',\n    children: [{\n        controller: \'paper\',\n        type: \'markupblock\',\n        index: \'introduction\',\n        description: \'introduction of insider data\',\n        properties: {\n            markup: `## Detailed listing of budget creation events\n\nFor this detailed listing, one of our volunteers assembled detailed notes in 2016, \nfrom publicly available information and direct interviews of City Hall staff.\n\nThis provides rare deeper insight into the budget creation process. For ease of comprehension, \nwe\'ve divided the process into five phases: _internal preparation_, _internal reviews_, \n_budget committee assessments_, _public commentary_, and _council adoption_.\n\nPrior to these phases would be _internal strategizing_ among senior staff, the mayor, and some councillors.\n\nAs well as the items listed here, the Budget committee had a [meeting in May of 2015](http://app.toronto.ca/tmmis/viewAgendaItemHistory.do?item=2015.BU7.3) to discuss\nrecommendations for the budget process.\n\nSince 2017 the Budget Committee has taken to having a public meeting giving budget direction for \nthe following year\'s budget.\n\n<div style=\'background-color:#d3f8d3;border:1px solid silver;border-radius:8px;padding:0 8px\'>\n\n**Financial Planning Division** [has informed us](https://drive.google.com/open?id=1y2l7HVCYWcVgl11umu60cAx9RlQtZTXa)\nvia a Freedom of Information request that\nbudget entries are made at the cost center level. There are 13,000 or so cost centres in the City of Toronto.\nWe haven\'t seen any other details of this process, so we can\'t say how this happens, or how involved the front-line managers are.\n\n</div>\n`\n        }\n    }, {\n        controller: \'list\',\n        type: \'markuplist\',\n        index: \'insiderlist1\',\n        description: \'first\',\n        properties: {\n            fieldproperties: {\n                horizontal: true,\n                commonstructure: true\n            },\n            compacted: true,\n            fieldmeta: {\n                date: {\n                    type: \'date\',\n                    layout: \'YYYY-MM-DD\',\n                    format: \'LL\',\n                    name: \'Date\'\n                },\n                budget_type: {\n                    name: \'Budget Type\'\n                },\n                budget_event: {\n                    name: \'Event\'\n                },\n                public: {\n                    name: \'Public\'\n                }\n            },\n            headermarkup: `\n### Phase One: Internal Preparation\n\n**Analyst meetings and preliminary budget creation at the program level**\n\nThe first phase of budget production begins with analyst meetings, and continues with creation of preliminary budgets.\n`,\n            items: [{\n                fields: {\n                    date: "2015-5-19",\n                    budget_type: "Capital",\n                    budget_event: "**Financial Planning Division Analyst** Meetings with **Program personnel** to identify and resolve issues",\n                    public: "No"\n                }\n            }, {\n                fields: {\n                    date: "2015-5-19",\n                    budget_type: "Operating",\n                    budget_event: "**Financial Planning Division Analyst** Meetings with **Program personnel** to identify and resolve issues",\n                    public: "No"\n                }\n            }, {\n                fields: {\n                    date: "2015-5-29",\n                    budget_type: "Rate",\n                    budget_event: "**Financial Planning Division Analyst** Meetings with **Program personnel** to identify and resolve issues",\n                    public: "No"\n                }\n            }, {\n                fields: {\n                    date: "2015-6-5",\n                    budget_type: "Rate",\n                    budget_event: "Operating Budget (Pre-Submission Shared Stage)",\n                    public: "No"\n                }\n            }, {\n                fields: {\n                    date: "2015-6-5",\n                    budget_type: "Operating",\n                    budget_event: "Operating Budget (Pre-Submission Shared Stage)",\n                    public: "No"\n                }\n            }, {\n                fields: {\n                    date: "2015-6-15",\n                    budget_type: "All",\n                    budget_event: "Preliminary Budget Submission Deadline",\n                    public: "No"\n                }\n            }]\n        }\n    }, {\n        controller: \'list\',\n        type: \'markuplist\',\n        index: \'insiderlist2\',\n        description: \'second\',\n        properties: {\n            fieldproperties: {\n                horizontal: true,\n                commonstructure: true\n            },\n            compacted: true,\n            fieldmeta: {\n                date: {\n                    type: \'date\',\n                    layout: \'YYYY-MM-DD\',\n                    format: \'LL\',\n                    name: \'Date\'\n                },\n                budget_type: {\n                    name: \'Budget Type\'\n                },\n                budget_event: {\n                    name: \'Event\'\n                },\n                public: {\n                    name: \'Public\'\n                }\n            },\n            headermarkup: `\n### Phase Two: Internal Reviews\n\n**Internal round of reviews**\n\nThis is also done behind closed doors. Note that standing committee reviews have not occured since then.\n`,\n            items: [{\n                fields: {\n                    date: "2015-6-15",\n                    budget_type: "Rate",\n                    budget_event: "**Standing Committee** Review of Service Levels",\n                    public: "No"\n                }\n            }, {\n                fields: {\n                    date: "2015-6-15",\n                    budget_type: "Operating",\n                    budget_event: "**Standing Committee** Review of Service Levels",\n                    public: "No"\n                }\n            }, {\n                fields: {\n                    date: "2015-7-2",\n                    budget_type: "All",\n                    budget_event: "**Executive Director, Financial Planning Division** Review with **Program and Agency management** (Round 1)",\n                    public: "No"\n                }\n            }, {\n                fields: {\n                    date: "2015-8-28",\n                    budget_type: "All",\n                    budget_event: "Final Budget Submission Deadline",\n                    public: "No"\n                }\n            }, {\n                fields: {\n                    date: "2015-9-9",\n                    budget_type: "All",\n                    budget_event: "**Executive Director, Financial Planning Division** Review with **Program and Agency management** (Round 2)",\n                    public: "No"\n                }\n            }, {\n                fields: {\n                    date: "2015-9-15",\n                    budget_type: "All",\n                    budget_event: "**Budget Committee members** Informal Review",\n                    public: "No"\n                }\n            }, {\n                fields: {\n                    date: "2015-9-16",\n                    budget_type: "Rate",\n                    budget_event: "**City Manager**/**Chief Financial Officer** Meeting with **Program management**",\n                    public: "No"\n                }\n            }, {\n                fields: {\n                    date: "2015-9-17",\n                    budget_type: "Operating",\n                    budget_event: "**City Manager**/**Chief Financial Officer** Meeting with **Program management**",\n                    public: "No"\n                }\n            }, {\n                fields: {\n                    date: "2015-9-17",\n                    budget_type: "Capital",\n                    budget_event: "**City Manager**/**Chief Financial Officer** Meeting with **Program management**",\n                    public: "No"\n                }\n            }, {\n                fields: {\n                    date: "2015-10-6",\n                    budget_type: "Rate",\n                    budget_event: "**City Manager**/**Chief Financial Officer**/**Deputy City Manager** Final Meetings",\n                    public: "No"\n                }\n            }, {\n                fields: {\n                    date: "2015-10-26",\n                    budget_type: "Operating",\n                    budget_event: "**City Manager**/**Chief Financial Officer**/**Deputy City Manager** Final Meetings",\n                    public: "No"\n                }\n            }, {\n                fields: {\n                    date: "2015-10-26",\n                    budget_type: "Capital",\n                    budget_event: "**City Manager**/**Chief Financial Officer**/**Deputy City Manager** Final Meetings",\n                    public: "No"\n                }\n            }]\n        }\n    }, {\n        controller: \'list\',\n        type: \'markuplist\',\n        index: \'insiderlist3\',\n        description: \'third\',\n        properties: {\n            fieldproperties: {\n                horizontal: true,\n                commonstructure: true\n            },\n            compacted: true,\n            fieldmeta: {\n                date: {\n                    type: \'date\',\n                    layout: \'YYYY-MM-DD\',\n                    format: \'LL\',\n                    name: \'Date\'\n                },\n                budget_type: {\n                    name: \'Budget Type\'\n                },\n                budget_event: {\n                    name: \'Event\'\n                },\n                public: {\n                    name: \'Public\'\n                }\n            },\n            headermarkup: `\n### Phase Three: Budget Committee Assessments\n\n**Initial Assessments**\n\nNote that the bulk of the budget development has been completed by this time.\n`,\n            items: [{\n                fields: {\n                    date: "2015-11-6",\n                    budget_type: "Rate",\n                    budget_event: "**Budget Committee** Budget Launch",\n                    public: "Yes"\n                }\n            }, {\n                fields: {\n                    date: "2015-11-13",\n                    budget_type: "Rate",\n                    budget_event: "Budget Briefings (**Budget Committee**)",\n                    public: "No"\n                }\n            }, {\n                fields: {\n                    date: "2015-12-15",\n                    budget_type: "Operating",\n                    budget_event: "**Budget Committee** Budget Launch",\n                    public: "Yes"\n                }\n            }, {\n                fields: {\n                    date: "2015-12-15",\n                    budget_type: "Capital",\n                    budget_event: "**Budget Committee** Budget Launch",\n                    public: "Yes"\n                }\n            }, {\n                fields: {\n                    date: "2016-1-5",\n                    budget_type: "Operating",\n                    budget_event: "Budget Briefings (**Budget Committee**)",\n                    public: "No"\n                }\n            }, {\n                fields: {\n                    date: "2016-1-5",\n                    budget_type: "Capital",\n                    budget_event: "Budget Briefings (**Budget Committee**)",\n                    public: "No"\n                }\n            }]\n        }\n    }, {\n        controller: \'list\',\n        type: \'markuplist\',\n        index: \'insiderlist4\',\n        description: \'fourth\',\n        properties: {\n            fieldproperties: {\n                horizontal: true,\n                commonstructure: true\n            },\n            compacted: true,\n            fieldmeta: {\n                date: {\n                    type: \'date\',\n                    layout: \'YYYY-MM-DD\',\n                    format: \'LL\',\n                    name: \'Date\'\n                },\n                budget_type: {\n                    name: \'Budget Type\'\n                },\n                budget_event: {\n                    name: \'Event\'\n                },\n                location: {\n                    name: \'Location\'\n                },\n                time: {\n                    name: \'Times\'\n                },\n                public: {\n                    name: \'Public\'\n                },\n                notes: {\n                    name: \'Notes\'\n                }\n            },\n            headermarkup: `\n### Phase Four: Public Commentary\n\nPublic commentary is limited to five minute deputations. The reason for the number \nof listings below is the scheduling of meetings in various parts of the City.\n\n`,\n            items: [{\n                fields: {\n                    date: "2015-11-13",\n                    budget_type: "Rate",\n                    budget_event: "Public Presentations (**Budget Committee**)",\n                    location: "Committee Room 1, City Hall, 100 Queen Street West",\n                    public: "Yes"\n                }\n            }, {\n                fields: {\n                    date: "2016-1-11",\n                    budget_type: "Rate",\n                    budget_event: "User Fee **Town Hall** Meeting",\n                    time: "6:00 PM",\n                    location: "Committee Room 2, City Hall, 100 Queen Street West",\n                    public: "Yes",\n                    notes: "Information session on the user fee policy and any proposed fee increases above inflation. No deputations."\n                }\n            }, {\n                fields: {\n                    date: "2016-1-12",\n                    budget_type: "Operating",\n                    budget_event: "Public Presentations (**Budget Committee**)",\n                    location: "Committee Room 1, City Hall, 100 Queen Street West",\n                    public: "Yes"\n                }\n            }, {\n                fields: {\n                    date: "2016-1-13",\n                    budget_type: "Operating",\n                    budget_event: "Public Presentations (**Budget Committee**)",\n                    time: "3pm and 6pm",\n                    location: "Scarborough Civic Centre, Council Chamber 150 Borough Dr",\n                    public: "Yes"\n                }\n            }, {\n                fields: {\n                    date: "2016-1-14",\n                    budget_type: "Operating",\n                    budget_event: "Public Presentations (**Budget Committee**)",\n                    time: "3pm and 6pm",\n                    location: "East York Civic Centre, Council Chamber, 850 Coxwell Ave",\n                    public: "Yes"\n                }\n            }, {\n                fields: {\n                    date: "2016-1-12",\n                    budget_type: "Operating",\n                    budget_event: "Public Presentations (**Budget Committee**)",\n                    time: "3pm and 6pm",\n                    location: "Etobicoke Civic Centre, Council Chamber, 399 The West Mall",\n                    public: "Yes"\n                }\n            }, {\n                fields: {\n                    date: "2016-1-13",\n                    budget_type: "Operating",\n                    budget_event: "Public Presentations (**Budget Committee**)",\n                    time: "3pm and 6pm",\n                    location: "North York Civic Centre, Council Chamber, 5100 Yonge Str",\n                    public: "Yes"\n                }\n            }, {\n                fields: {\n                    date: "2016-1-14",\n                    budget_type: "Operating",\n                    budget_event: "Public Presentations (**Budget Committee**)",\n                    time: "3pm and 6pm",\n                    location: "York Civic Centre, Council Chamber, 2700 Eglinton Ave W",\n                    public: "Yes"\n                }\n            }, {\n                fields: {\n                    date: "2016-1-12",\n                    budget_type: "Capital",\n                    budget_event: "Public Presentations (**Budget Committee**)",\n                    time: "9:30am and 6pm",\n                    location: "Committee Room 1, City Hall, 100 Queen Street West",\n                    public: "Yes"\n                }\n            }, {\n                fields: {\n                    date: "2016-1-13",\n                    budget_type: "Capital",\n                    budget_event: "Public Presentations (**Budget Committee**)",\n                    time: "3pm and 6pm",\n                    location: "Scarborough Civic Centre, Council Chamber, 150 Borough Dr",\n                    public: "Yes"\n                }\n            }, {\n                fields: {\n                    date: "2016-1-14",\n                    budget_type: "Capital",\n                    budget_event: "Public Presentations (**Budget Committee**)",\n                    time: "3pm and 6pm",\n                    location: "East York Civic Centre, Council Chamber, 850 Coxwell Ave",\n                    public: "Yes"\n                }\n            }, {\n                fields: {\n                    date: "2016-1-12",\n                    budget_type: "Capital",\n                    budget_event: "Public Presentations (**Budget Committee**)",\n                    time: "3pm and 6pm",\n                    location: "Etobicoke Civic Centre, Council Chamber, 399 The West Mall",\n                    public: "Yes"\n                }\n            }, {\n                fields: {\n                    date: "2016-1-13",\n                    budget_type: "Capital",\n                    budget_event: "Public Presentations (**Budget Committee**)",\n                    time: "3pm and 6pm",\n                    location: "North York Civic Centre, Council Chamber, 5100 Yonge Str",\n                    public: "Yes"\n                }\n            }, {\n                fields: {\n                    date: "2016-1-14",\n                    budget_type: "Capital",\n                    budget_event: "Public Presentations (**Budget Committee**)",\n                    time: "3pm and 6pm",\n                    location: "York Civic Centre, Council Chamber, 2700 Eglinton Ave W",\n                    public: "Yes"\n                }\n            }, {\n                fields: {\n                    date: "2016-1-18",\n                    budget_type: "Operating",\n                    budget_event: "**Budget Committee** Wrap-up",\n                    public: "Yes"\n                }\n            }, {\n                fields: {\n                    date: "2016-1-18",\n                    budget_type: "Capital",\n                    budget_event: "**Budget Committee** Wrap-up",\n                    public: "Yes"\n                }\n            }]\n        }\n    }, {\n        controller: \'list\',\n        type: \'markuplist\',\n        index: \'insiderlist5\',\n        description: \'fifth\',\n        properties: {\n            fieldproperties: {\n                horizontal: true,\n                commonstructure: true\n            },\n            compacted: true,\n            fieldmeta: {\n                date: {\n                    type: \'date\',\n                    layout: \'YYYY-MM-DD\',\n                    format: \'LL\',\n                    name: \'Date\'\n                },\n                budget_type: {\n                    name: \'Budget Type\'\n                },\n                budget_event: {\n                    name: \'Event\'\n                },\n                public: {\n                    name: \'Public\'\n                }\n            },\n            headermarkup: `\n### Phase Five: Council Adoption of Budgets\n\nThese are the final meetings which result in adopted budgets. Note that the _rate supported_ budgets\nare adopted in the previous year.\n`,\n            items: [{\n                fields: {\n                    date: "2015-12-1",\n                    budget_type: "Rate",\n                    budget_event: "Special **Executive Committee**",\n                    public: "Yes"\n                }\n            }, {\n                fields: {\n                    date: "2015-12-9",\n                    budget_type: "Rate",\n                    budget_event: "Special **City Council**",\n                    public: "Yes"\n                }\n            }, {\n                fields: {\n                    date: "2016-1-26",\n                    budget_type: "Operating",\n                    budget_event: "**Budget Committee** Final Wrap-up",\n                    public: "Yes"\n                }\n            }, {\n                fields: {\n                    date: "2016-1-26",\n                    budget_type: "Capital",\n                    budget_event: "**Budget Committee** Final Wrap-up",\n                    public: "Yes"\n                }\n            }, {\n                fields: {\n                    date: "2016-2-9",\n                    budget_type: "Operating",\n                    budget_event: "**Special Executive** Committee",\n                    public: "Yes"\n                }\n            }, {\n                fields: {\n                    date: "2016-2-9",\n                    budget_type: "Capital",\n                    budget_event: "**Special Executive** Committee",\n                    public: "Yes"\n                }\n            }, {\n                fields: {\n                    date: "2016-2-17",\n                    budget_type: "Operating",\n                    budget_event: "Special **City Council**",\n                    public: "Yes"\n                }\n            }, {\n                fields: {\n                    date: "2016-2-17",\n                    budget_type: "Capital",\n                    budget_event: "Special **City Council**",\n                    public: "Yes"\n                }\n            }]\n        }\n    }, {\n        controller: \'paper\',\n        type: \'markupblock\',\n        index: \'finalword\',\n        description: \'note about budget types\',\n        properties: {\n            markup: `Note: _rate suported_ budgets include waste, water, and parking, because these programs are completely\nsupported by user fees. All other programs are called _tax supported_ (or above "_operating_") budgets\nbecause they are supported to some degree by property taxes. Council has decided to process these\ntwo groups separately, taking more interest (presumably for political reasons) in the tax supported budgets.\n`\n        }\n    }]\n};\nlet papers = {\n    budgetpediapremise,\n    budgetpediaoverview,\n    electionopinion,\n    aboutbudgetpedia,\n    torontobudget,\n    staffing,\n    currentconventions,\n    betterconventions,\n    budgetvsaudit,\n    hierarchies,\n    budgetsastheatre,\n    cityvision,\n    fpars,\n    variancereports,\n    auditedstatements,\n    sourcedocuments,\n    terminology,\n    budget2018,\n    budget2017,\n    participatory,\n    investinginto,\n    insiderview,\n    councilprocess\n};\n/* harmony default export */ var papers_index = (papers);\n// CONCATENATED MODULE: ./ts/model/sections.index.tsx\n// sections.index.tsx\nlet sections_index_torontobudget = {\n    controller: \'section\',\n    index: \'torontobudget\',\n    anchor: \'torontobudget\',\n    description: \'header for overview page\',\n    type: \'section\',\n    tag: \'An Ancillary Budget\',\n    properties: {\n        title: "An Ancillary Toronto Operating _Accrual_ Budget",\n        description: `\nHere is what we think is a more accessbile view of the Toronto budget.\n`\n    },\n    children: [{\n        repo: \'papers\',\n        index: \'torontobudget\'\n    }]\n};\nlet sections_index_aboutbudgetpedia = {\n    controller: \'section\',\n    index: \'aboutbudgetpedia\',\n    anchor: \'aboutbudgetpedia\',\n    description: \'about budgetpedia\',\n    type: \'section\',\n    tag: \'About Budgetpedia\',\n    properties: {\n        title: "About Budgetpedia",\n        description: `\nWe want to help make the Toronto budget, and budget debate, better.\n`\n    },\n    children: [{\n        repo: \'papers\',\n        index: \'aboutbudgetpedia\'\n    }]\n};\nlet overview = {\n    controller: \'section\',\n    index: \'overview\',\n    anchor: \'overview\',\n    description: \'header for overview page\',\n    type: \'section\',\n    tag: \'Top:Overview\',\n    properties: {\n        title: "Our Toronto Budgeting Overview",\n        description: `\nThis page gives a general overview of Toronto, and its budget design and process.\n`\n    },\n    children: [{\n        controller: \'section\',\n        type: \'toc\',\n        index: \'tableofcontents\',\n        description: \'page table of contents\'\n    }]\n};\nlet budgets = {\n    header: {\n        controller: \'section\',\n        index: \'budgets.header\',\n        anchor: \'header\',\n        description: \'header for budgets page\',\n        type: \'section\',\n        tag: \'Top:Budgets\',\n        properties: {\n            title: "Toronto Budgets",\n            description: `\n<div style = "padding:16px;background-color:orange;text-align:center;border:3px ridge silver;border-radius:8px">\nThis page is under active construction.\n</div>\n\nThis page is about how the Toronto budget is structured, and _could_ be structured, every year.\n`\n        },\n        followup: {\n            \'card:budgetssummary\': `This page is about the structure of Toronto budgets. For information about the budget process,\nsee our [roadmap](/roadmap) page.`\n        },\n        children: [{\n            repo: \'cards\',\n            index: \'budgetssummary\'\n        }, {\n            controller: \'section\',\n            type: \'toc\',\n            index: \'tableofcontents\',\n            description: \'page table of contents\'\n        }]\n    },\n    instances: {\n        controller: \'section\',\n        index: \'budgets.instances\',\n        anchor: \'instances\',\n        description: \'instances for budgets page\',\n        type: \'section\',\n        tag: \'Instances\',\n        properties: {\n            title: "Budget Instances",\n            description: `Read about specific budgets and variants here.\n\n`\n        },\n        children: [{\n            repo: \'papers\',\n            index: \'budget2018\'\n        }, {\n            repo: \'papers\',\n            index: \'budget2017\'\n        }, {\n            repo: \'papers\',\n            index: \'participatory\'\n        }, {\n            repo: \'papers\',\n            index: \'investinginto\'\n        }]\n    },\n    resources: {\n        controller: \'section\',\n        index: \'budgets.resources\',\n        anchor: \'resources\',\n        description: \'resources for budgets page\',\n        type: \'section\',\n        tag: \'Resources\',\n        properties: {\n            title: "Resources",\n            description: `This section lists the main documents made available by Toronto about the annual budgets.\n`\n        },\n        children: [{\n            repo: \'papers\',\n            index: \'sourcedocuments\'\n        }, {\n            repo: \'papers\',\n            index: \'terminology\'\n        }]\n    },\n    systems: {\n        controller: \'section\',\n        index: \'budgets.systems\',\n        anchor: \'systems\',\n        description: \'systems for budgets page\',\n        type: \'section\',\n        tag: \'Systems\',\n        properties: {\n            title: "Systems",\n            description: `This is a look at some of the systems related to the budget system.\n`\n        },\n        children: [{\n            repo: \'papers\',\n            index: \'fpars\'\n        }, {\n            repo: \'papers\',\n            index: \'variancereports\'\n        }, {\n            repo: \'papers\',\n            index: \'auditedstatements\'\n        }, {\n            repo: \'papers\',\n            index: \'cityvision\'\n        }]\n    },\n    perspectives: {\n        controller: \'section\',\n        index: \'budgets.perspectives\',\n        anchor: \'perspectives\',\n        description: \'perspectives for budgets page\',\n        type: \'section\',\n        tag: \'Perspectives\',\n        properties: {\n            title: "Perspectives",\n            description: `Here are some perspectives taken from our experience with the budget systems.\n`\n        },\n        children: [{\n            repo: \'sheets\',\n            index: \'citybasics\'\n        }, {\n            repo: \'papers\',\n            index: \'staffing\'\n        }, {\n            repo: \'papers\',\n            index: \'currentconventions\'\n        }, {\n            repo: \'papers\',\n            index: \'betterconventions\'\n        }, {\n            repo: \'papers\',\n            index: \'budgetvsaudit\'\n        }, {\n            repo: \'papers\',\n            index: \'hierarchies\'\n        }, {\n            repo: \'papers\',\n            index: \'budgetsastheatre\'\n        }]\n    }\n};\nlet home = {\n    header: {\n        controller: \'section\',\n        index: \'home.header\',\n        anchor: \'header\',\n        description: \'header for main page of website\',\n        type: \'section\',\n        tag: \'Top:Home\',\n        properties: {\n            title: "Welcome",\n            description: `\n<div style = "float:right;width:200px;padding:3px;line-height:1;text-align:center;margin-top:-60px;max-width:40%">\n<img style="width:100%" src="/public/images/Makerspace-4.jpg" />\n<span style="font-size:x-small;font-style:italic;">Innovative public service: a Toronto Library Makerspace program</span>\n</div>\nWe\'re an independent, non-profit, volunteer organization based in Toronto, Canada.`\n        },\n        children: [{\n            repo: \'papers\',\n            index: \'budgetpediapremise\'\n        }, {\n            repo: \'papers\',\n            index: \'budgetpediaoverview\'\n        }, {\n            repo: \'cards\',\n            index: \'mainpageheader\'\n        }, {\n            repo: \'papers\',\n            index: \'electionopinion\'\n        }, {\n            controller: \'section\',\n            type: \'toc\',\n            index: \'tableofcontents\',\n            description: \'page table of contents\'\n        }]\n    },\n    nuggets: {\n        controller: \'section\',\n        index: \'home.nuggets\',\n        anchor: \'statistics\',\n        description: \'sets of introductory nugget lists\',\n        type: \'section\',\n        tag: \'Quick Statistics\',\n        narrative: {\n            "list:abouttoronto": `Check out the third item from the right, "Visible minorities" (you have to scroll to the right). \nIf you think about it, this means that for most of Toronto,\nthese so-called minorities are actually collectively in the majority. \nWe\'re cosmopolitan.`,\n            "list:torontofinances": `We\'ve found that audited financial statements are more reliable than budgets as the\nbasis for a narrative about Toronto. Scroll to the right and you\'ll see that cash is \nflowing into capital.`,\n            "list:torontotrends": `For a highlight, scroll right to the "Changes in net worth". Toronto has had a large increase in \nnet worth (assets less liabilities) over the past few years. The short story: \nmoney is flowing into tangible asset improvements and purchases.`\n        },\n        properties: {\n            title: \'Quick Statistics\',\n            description: "Here are some quick statistics about Toronto and its finances. We\'ve highlighted a few. Each row scrolls left and right."\n        },\n        children: [{\n            repo: \'nuggetlists\',\n            index: \'abouttoronto\'\n        }, {\n            repo: \'nuggetlists\',\n            index: \'torontofinances\'\n        }, {\n            repo: \'nuggetlists\',\n            index: \'torontotrends\'\n        }]\n    },\n    basics: {\n        controller: \'section\',\n        index: \'home.basics\',\n        anchor: \'basics\',\n        description: \'basic help text and links\',\n        type: \'section\',\n        tag: \'The Basics\',\n        narrative: {\n            \'paper:citybasics\': `At a general level it\'s not that complicated. Outside City Hall, front line staff\ntake care of city-wide daily services (general services), and help many of us \ndirectly (resident support services).`,\n            \'paper:cityprocess\': `Although budgeting is a lengthy process, very little of it is public.`\n        },\n        followup: {\n            \'paper:citybasics\': `For detailed budget information, see our budget [explorer](/explorer).`,\n            \'paper:cityprocess\': `For more information on the City of Toronto Budget Process, see the City of Toronto \n[website](https://www.toronto.ca/city-government/budget-finances/city-budget/), \nand our [Budget Roadmap](/roadmap) page.`\n        },\n        properties: {\n            title: \'The Basics\',\n            description: \'What the City of Toronto does, and how the budget process works.\'\n        },\n        children: [{\n            repo: \'sheets\',\n            index: \'citybasics\'\n        }, {\n            repo: \'sheets\',\n            index: \'cityprocess\'\n        }]\n    },\n    concerns: {\n        controller: \'section\',\n        index: \'home.concerns\',\n        anchor: \'challenges\',\n        description: \'links to issues\',\n        type: \'section\',\n        tag: \'Challenges\',\n        narrative: {\n            \'paper:opportunities\': `There really are huge opportunities for improvement! Changes by design,\nto make everyone\'s life better.`,\n            \'paper:concerns\': `We know many City staff don\'t like to hear this, and we\'re sorry. But we\nthink these are issues that need to be discussed. They\'ve been going on for decades,\nand it\'s time to resolve them. Any feedback on how best to go about this is very welcome.`\n        },\n        properties: {\n            title: \'Challenges to Work On\',\n            description: \'Some basic opportunites and issues we think should be addressed.\',\n            style: {\n                marginBottom: \'12px\',\n                backgroundColor: \'#d9d9d9\'\n            }\n        },\n        children: [{\n            repo: \'sheets\',\n            index: \'opportunities\'\n        }, {\n            repo: \'sheets\',\n            index: \'concerns\'\n        }]\n    },\n    stories: {\n        controller: \'section\',\n        index: \'home.stories\',\n        anchor: \'stories\',\n        description: \'introduction to stories\',\n        type: \'section\',\n        tag: \'Stories\',\n        narrative: {\n            \'paper:stories\': `The challenge is to tell all these stories, and be useful about it!\nIf you have suggestions for stories, or if you want to help, let us know.`\n        },\n        properties: {\n            title: \'Stories to Create\',\n            description: "We\'re organizing around data stories."\n        },\n        children: [{\n            repo: \'sheets\',\n            index: \'stories\'\n        }]\n    },\n    twitterfeed: {\n        controller: \'section\',\n        index: \'home.twitterfeed\',\n        anchor: \'twitter\',\n        description: \'twitter feed for budgetpedia\',\n        type: \'section\',\n        tag: \'Twitter Feed\',\n        properties: {\n            title: \'Our Twitter Feed\',\n            description: \'Jump into the conversation [here](http://twitter.com/budgetpedia).\',\n            style: {\n                marginBottom: \'12px\'\n            }\n        },\n        children: [{\n            repo: \'media\',\n            index: \'budgetpediatwitter\'\n        }]\n    },\n    tiles: {\n        controller: \'section\',\n        index: \'home.tiles\',\n        anchor: \'website\',\n        description: \'navigation tiles to the site main pages\',\n        type: \'section\',\n        tag: \'Our Website\',\n        properties: {\n            title: \'Our Website\',\n            description: \'The main pages of our website. The tiles scroll left and right.\',\n            style: {\n                marginBottom: \'12px\'\n            }\n        },\n        children: [{\n            index: \'mainpages\',\n            repo: \'tilelists\'\n        }, {\n            repo: \'cards\',\n            index: \'mainpagefooter\'\n        }]\n    }\n};\nlet roadmap = {\n    header: {\n        controller: \'section\',\n        index: \'roadmap.header\',\n        anchor: \'header\',\n        description: \'header for roadmap page\',\n        type: \'section\',\n        tag: \'Top:Roadmap\',\n        narrative: {\n            \'paper:cityprocess\': `Here is a rough outline of how the process is currently set up.`\n        },\n        followup: {\n            "paper:cityprocess": `For information on specific City budgets, see our [Budgets](/budgets) page.\n`,\n            \'card:roadmapsummary\': `This page is about the creation process of Toronto budgets. For information about the budget structure,\nsee our [budgets](/budgets) page.`\n        },\n        properties: {\n            title: "Budget Roadmap",\n            description: `This page is about how the Toronto budget is created, and _could_ be created, every year.\n`\n        },\n        children: [{\n            repo: \'cards\',\n            index: \'roadmapsummary\'\n        }, {\n            controller: \'section\',\n            type: \'toc\',\n            index: \'tableofcontents\',\n            description: \'page table of contents\'\n        }]\n    },\n    notes: {\n        controller: \'section\',\n        index: \'roadmap.notes\',\n        anchor: \'notes\',\n        description: \'description of notes\',\n        type: \'section\',\n        tag: \'The Process\',\n        narrative: {\n            "paper:insiderview": `This list of events is worth scanning, in spite of its length, to get a sense of the players involved, and the nature\nof the process.\n\nWe see very little collaboration in this process, beyond the professional elite and senior managers listed here.\nHowever we are told that budget entries are made for the 13,000 or so City cost centers. We hope this means at \nleast some collaboration with front-line staff, or at least front-line managers.\n`\n        },\n        followup: {\n            "paper:insiderview": `For the City of Toronto\'s information about the budget, see the City\'s [budget website](https://www.toronto.ca/city-government/budget-finances/city-budget/                \n).\n`\n        },\n        properties: {\n            title: "The Process",\n            description: `The entire process, from strategizing to getting audited results, covers about 27 months. \n            The budget creation process itself is about 8 months`\n        },\n        children: [{\n            repo: \'sheets\',\n            index: \'cityprocess\'\n        }, {\n            repo: \'papers\',\n            index: \'insiderview\'\n        }]\n    },\n    council: {\n        controller: \'section\',\n        index: \'roadmap.council\',\n        anchor: \'councils\',\n        description: \'description of council musings\',\n        type: \'section\',\n        tag: \'Council\',\n        properties: {\n            title: "Council\'s Role",\n            description: "Councillors seemed to be going in a different, better, direction at one time."\n        },\n        children: [{\n            repo: \'papers\',\n            index: \'councilprocess\'\n        }, {\n            repo: \'sheets\',\n            index: \'councilservices\'\n        }]\n    },\n    civilsociety: {\n        controller: \'section\',\n        index: \'roadmap.civilsociety\',\n        anchor: \'civilsociety\',\n        description: \'Civil society involvement\',\n        type: \'section\',\n        tag: \'Civil Society\',\n        properties: {\n            title: "Civil Society",\n            description: "Civil society tries to do its part, to fill the vacuum."\n        },\n        children: [{\n            repo: \'sheets\',\n            index: \'civilsociety\'\n        }]\n    },\n    elsewhere: {\n        controller: \'section\',\n        index: \'roadmap.elsewhere\',\n        anchor: \'elsewhere\',\n        description: \'New York does things differently\',\n        type: \'section\',\n        tag: \'Elsewhere\',\n        properties: {\n            title: "Elsewhere",\n            description: "New York as an example does things differently, with spiralling consultations taking almost a year."\n        },\n        children: [{\n            repo: \'sheets\',\n            index: \'elsewhere\'\n        }]\n    },\n    possibilities: {\n        controller: \'section\',\n        index: \'roadmap.possibilities\',\n        anchor: \'possibilities\',\n        description: \'The way things could be\',\n        type: \'section\',\n        tag: \'Possibilities\',\n        properties: {\n            title: "Possibilities",\n            description: "There are many possible ways to conduct budget cycles. Here are some ways we think would make improvements."\n        },\n        children: [{\n            repo: \'sheets\',\n            index: \'opportunities\'\n        }]\n    }\n};\nlet sections_index_sections = {\n    aboutbudgetpedia: sections_index_aboutbudgetpedia,\n    torontobudget: sections_index_torontobudget,\n    overview,\n    budgets,\n    roadmap,\n    home\n};\n/* harmony default export */ var sections_index = (sections_index_sections);\n// CONCATENATED MODULE: ./ts/model/model.interface.tsx\n// repos.index.tsx\n\n\n\n\n\n\n\n\n\n\n\n\n\nlet repositories = {\n    cards: cards_index,\n    pages: pages_index,\n    routes: routes_index,\n    styles: styles_index,\n    linklists: linklists_index,\n    nuggetlists: nuggetlists_index,\n    tilelists: tilelists_index,\n    media: media_index,\n    sheets: sheets_index,\n    html: html_index,\n    draft: draft_index,\n    papers: papers_index,\n    sections: sections_index\n};\nconst getDocument = (repo, index) => {\n    let indexes = index.split(\'.\');\n    // console.log(\'requested document(repo, index)\',repo, index, indexes)\n    let node = repositories[repo];\n    if (!node) return {};\n    for (let n = 0; n < indexes.length; n++) {\n        node = node[indexes[n]];\n        if (!node) return {};\n    }\n    return node;\n};\nlet model_interface_model = {\n    getDocument\n};\n/* harmony default export */ var model_interface = (model_interface_model);\n// CONCATENATED MODULE: ./ts/gateway/master.model.tsx\n// master.model.tsx\n\n\nconst master_model_firestore = firebase_api.firestore();\nconst settings = { /* your settings... */timestampsInSnapshots: true };\nmaster_model_firestore.settings(settings);\n// console.log(\'firestore\',firestore)\nconst getPageIndex = path => {\n    return new Promise((resolve, reject) => {\n        master_model_firestore.collection(\'routes\').where(\'route\', \'==\', path).get().then(querySnapshot => {\n            if (querySnapshot.empty) {\n                resolve(null);\n                // reject(\'Route not found for \' + path)\n            } else {\n                let index = querySnapshot.docs[0].data()[\'index\'];\n                // console.log(\'getPageIndex\',querySnapshot.docs,index)\n                resolve(index);\n            }\n        }).catch(error => {\n            console.log(\'error getting routes\', error);\n            reject(\'error getting routes \' + error);\n        });\n    });\n    // return model.getDocument(\'routes\',path)\n};\nconst getPageModel = index => {\n    return model_interface.getDocument(\'pages\', index);\n};\nconst master_model_getDocument = (repo, index) => {\n    return model_interface.getDocument(repo, index);\n};\nconst getData = (repo, index) => {\n    return model_interface.getDocument(repo, index);\n};\nconst isPromise = object => {\n    return !!object.then;\n};\nlet master = {\n    isPromise,\n    getPageIndex,\n    getPageModel,\n    getDocument: master_model_getDocument,\n    getData\n};\n/* harmony default export */ var master_model = (master);\n// CONCATENATED MODULE: ./ts/core/control/core.controller.composer.tsx\n// core.controller.composer.tsx\n// copyright (c) 2017 Henrik Bechmann, Toronto, MIT Licence\n/*\n    TODO: update all code to async requirements\n    puzzle: route /, page home, and linklists x 3 are only data loaded on go back to page\n*/\n\n\n\n\n\n\nlet setStateModel = (self, model, callback) => {\n    if (master_model.isPromise(model)) {\n        model.then(model => {\n            model = updateModel(self, model);\n            model.children = updateChildren(self, model.children);\n            self.setState({\n                model\n            });\n        });\n    } else {\n        model = updateModel(self, model);\n        model.children = updateChildren(self, model.children);\n        self.setState({\n            model\n        }, callback);\n    }\n};\nlet updateChildren = (self, children) => {\n    if (!children || children.length == 0) return children;\n    let output = children.map((child, key) => {\n        if (child.disabled) return null;\n        return updateModel(self, child);\n    });\n    let result = output.filter(item => !!item); // filter screened items\n    return result;\n};\nlet updateModel = (self, model) => {\n    if (model.updated) return model;\n    // only needed for pages that require repo loading; chilren are loaded in getChildren\n    if (model.repo) {\n        model = master_model.getDocument(model.repo, model.index);\n    }\n    let props = updateProperties(self, model);\n    model.properties = props;\n    model.updated = true;\n    return model;\n};\n// TODO: implement import of propComponents\nlet updateProperties = (self, model) => {\n    let { properties, lookups, propComponents, propReferences } = model;\n    // let props = Object.assign({},properties) // work with copy\n    if (!properties) properties = {};\n    if (propReferences) {\n        for (let key in propReferences) {\n            properties[key] = self.props[propReferences[key]];\n        }\n    }\n    if (lookups) {\n        // console.log(\'lookups\',lookups)\n        for (let key in lookups) {\n            let { repo, index } = lookups[key];\n            properties[key] = master_model.getDocument(repo, index);\n        }\n    }\n    return properties;\n};\nlet getChildren = (self, children) => {\n    if (!children || children.length == 0) return children;\n    let output = children.map((model, key) => {\n        if (model.repo) {\n            model = master_model.getDocument(model.repo, model.index);\n        }\n        return self.emitComponent(model, key);\n    });\n    return output;\n};\nlet wrapComponent = (component, wrapper, key) => {\n    if (!wrapper) return component;\n    let testwrapper = wrapper;\n    let output = component;\n    while (testwrapper) {\n        let { type, properties } = testwrapper;\n        properties.key = key;\n        output = react["createElement"](type, properties, output);\n        testwrapper = testwrapper.wrapper;\n    }\n    return output;\n};\nlet toolkit = {\n    master: master_model,\n    setStateModel,\n    updateChildren,\n    updateModel,\n    updateProperties,\n    getChildren,\n    wrapComponent\n};\nlet coreControllerComposer = Controller => {\n    let ConnectedController = Object(react_redux_es["connect"])(state => ({ state }), {\n        push: react_router_redux_es["b" /* push */]\n    })(Controller);\n    class BaseController extends react["Component"] {\n        render() {\n            return react["createElement"](ConnectedController, Object.assign({ toolkit }, this.props));\n        }\n    }\n    return BaseController;\n};\n/* harmony default export */ var core_controller_composer = (coreControllerComposer);\n// CONCATENATED MODULE: ./ts/core/control/views/html.view.tsx\n// html.view.tsx\n\nlet HtmlView = ({ style, html }) => react["createElement"]("div", { style: style, dangerouslySetInnerHTML: { __html: html } });\n/* harmony default export */ var html_view = (HtmlView);\n// CONCATENATED MODULE: ./ts/core/control/views/markupblock.view.tsx\n// markupblock.view.tsx\n// copyright (c) 2016 Henrik Bechmann, Toronto, MIT Licence\n\n\n\n\nlet mdit = __webpack_require__(304);\nlet mda = __webpack_require__(295);\nlet mdt = __webpack_require__(294);\nlet mdf = __webpack_require__(823); // ??\nlet mdislugs = __webpack_require__(822);\nlet md = new mdit({ html: true,\n    modifyToken: function (token, env) {\n        // see API https://markdown-it.github.io/markdown-it/#Token\n        // token will also have an attrObj property added for convenience\n        // which allows easy get and set of attribute values.\n        // It is prepopulated with the current attr values.\n        // Values returned in token.attrObj will override existing attr values.\n        // env will contain any properties passed to markdown-it\'s render\n        // Token can be modified in place, no return is necessary\n        switch (token.type) {\n            case \'link_open\':\n                {\n                    if (token.attrObj.href.substr(0, 1) == "/") {\n                        token.attrObj.onclick = \'storybuilder_global.navigateViaRouter(event)\';\n                    } else {\n                        token.attrObj.target = \'_blank\'; // set all links to open in new window\n                    }\n                    break;\n                }\n        }\n    }\n});\nlet anchorcallback = (token, data) => {\n    console.log(\'token, data\', token, data);\n};\nmd.use(mda).use(mdt).use(mdf, { figcaption: true }).use(mdislugs, {\n    level: [1, 2, 3, 4],\n    permalink: true,\n    permalinkSymbol: \'&#128279;\',\n    useTargetlink: true,\n    permalinkBefore: true\n});\nconst MarkupBlock = ({ markup, style }) => react["createElement"](html_view, { style: Object.assign({}, style), html: md.render(markup) });\n/* harmony default export */ var markupblock_view = (MarkupBlock);\n// CONCATENATED MODULE: ./ts/core/control/views/narrationbubble.view.tsx\n// narrationbubble.view.tsx\n// copyright (c) 2017 Henrik Bechmann, Toronto, MIT Licence\n\n\n\n\nlet NarrationBubbleView = ({ markup }) => {\n    let bubbleStyle = {\n        maxWidth: \'600px\',\n        border: \'3px outset silver\',\n        backgroundColor: \'lightcyan\',\n        margin: \'8px 16px 16px 16px\',\n        borderRadius: \'8px\',\n        padding: \'0 16px\',\n        position: \'relative\',\n        boxShadow: \'rgba(0, 0, 0, 0.4) 0px 10px 30px, rgba(0, 0, 0, 0.4) 0px 6px 10px\'\n    };\n    let firstArrowStyle = {\n        borderStyle: \'solid\',\n        position: \'absolute\',\n        borderColor: \'slategray transparent transparent transparent\',\n        borderWidth: \'16px 16px 0px 16px\',\n        bottom: \'-16px\',\n        left: \'47px\'\n    };\n    let secondArrowStyle = {\n        borderStyle: \'solid\',\n        position: \'absolute\',\n        borderColor: \'lightcyan transparent transparent transparent\',\n        borderWidth: \'13px 13px 0px 13px\',\n        bottom: \'-13px\',\n        left: \'50px\'\n    };\n    return react["createElement"]("aside", { style: bubbleStyle }, react["createElement"](markupblock_view, { markup: markup }), react["createElement"]("div", { style: firstArrowStyle }), react["createElement"]("div", { style: secondArrowStyle }));\n};\n/* harmony default export */ var narrationbubble_view = (NarrationBubbleView);\n// CONCATENATED MODULE: ./ts/core/control/views/followupbubble.view.tsx\n// followupbubble.view.tsx\n// copyright (c) 2017 Henrik Bechmann, Toronto, MIT Licence\n\n\n\n\nclass followupbubble_view_FollowupBubbleView extends react["Component"] {\n    constructor() {\n        super(...arguments);\n        this.bubbleStyle = {\n            maxWidth: \'600px\',\n            border: \'3px outset silver\',\n            backgroundColor: \'cornsilk\',\n            margin: \'16px 16px 32px 16px\',\n            borderRadius: \'8px\',\n            padding: \'0 16px\',\n            position: \'relative\',\n            boxShadow: \'rgba(0, 0, 0, 0.4) 0px 10px 30px, rgba(0, 0, 0, 0.4) 0px 6px 10px\'\n        };\n        this.firstArrowStyle = {\n            borderStyle: \'solid\',\n            position: \'absolute\',\n            borderColor: \'transparent transparent slategray transparent\',\n            borderWidth: \'0px 16px 16px 16px\',\n            top: \'-16px\',\n            left: \'47px\'\n        };\n        this.secondArrowStyle = {\n            borderStyle: \'solid\',\n            position: \'absolute\',\n            borderColor: \'transparent transparent cornsilk transparent\',\n            borderWidth: \'0px 13px 13px 13px\',\n            top: \'-13px\',\n            left: \'50px\'\n        };\n    }\n    render() {\n        return react["createElement"]("aside", { style: this.bubbleStyle }, react["createElement"]("div", { style: this.firstArrowStyle }), react["createElement"]("div", { style: this.secondArrowStyle }), react["createElement"](markupblock_view, { markup: this.props.markup }));\n    }\n}\n/* harmony default export */ var followupbubble_view = (followupbubble_view_FollowupBubbleView);\n// EXTERNAL MODULE: ./node_modules/material-ui/Card/index.js\nvar Card = __webpack_require__(5);\n\n// CONCATENATED MODULE: ./ts/core/control/views/markupline.view.tsx\n// markupline.view.tsx\n// copyright (c) 2016 Henrik Bechmann, Toronto, MIT Licence\n\n\n\n\nlet markupline_view_mdit = __webpack_require__(304);\nlet markupline_view_mda = __webpack_require__(295);\nlet markupline_view_mdt = __webpack_require__(294);\nlet markupline_view_md = new markupline_view_mdit({ html: true,\n    modifyToken: function (token, env) {\n        // see API https://markdown-it.github.io/markdown-it/#Token\n        // token will also have an attrObj property added for convenience\n        // which allows easy get and set of attribute values.\n        // It is prepopulated with the current attr values.\n        // Values returned in token.attrObj will override existing attr values.\n        // env will contain any properties passed to markdown-it\'s render\n        // Token can be modified in place, no return is necessary\n        switch (token.type) {\n            case \'link_open\':\n                {\n                    if (token.attrObj.href.substr(0, 1) == "/") {\n                        token.attrObj.onclick = \'storybuilder_global.navigateViaRouter(event)\';\n                    } else {\n                        token.attrObj.target = \'_blank\'; // set all links to open in new window\n                    }\n                    break;\n                }\n        }\n    }\n});\nmarkupline_view_md.use(markupline_view_mda).use(markupline_view_mdt);\nconst MarkupLine = ({ markup, style }) => react["createElement"](html_view, { style: Object.assign({ display: \'inline\' }, style), html: markupline_view_md.renderInline(markup) });\n/* harmony default export */ var markupline_view = (MarkupLine);\n// CONCATENATED MODULE: ./ts/core/control/views/cardtitle.view.tsx\n// cardtitle.view.tsx\n// copyright (c) 2018 Henrik Bechmann, Toronto, MIT Licence\n// this is a wrapper for CardTitle to include anchors, and integrate markdown\n\n\n\n\n\nconst removeMd = __webpack_require__(190);\nvar stringUtils = __webpack_require__(111);\nlet CardTitleView = props => {\n    let localprops = Object.assign({}, props);\n    let { title, subtitle } = localprops;\n    let titletext = null;\n    let slug = null;\n    let tag = \'h2\'; // notional\n    if (title) {\n        titletext = removeMd(title);\n        title = react["createElement"](markupline_view, { markup: title });\n        localprops.title = title;\n        slug = stringUtils(titletext).slugify().s;\n    }\n    if (subtitle) {\n        subtitle = react["createElement"](markupline_view, { markup: subtitle });\n        localprops.subtitle = subtitle;\n    }\n    let cardtitle = react["createElement"](Card["CardTitle"], localprops);\n    return react["createElement"]("div", { className: \'content-header\', style: { position: \'relative\' } }, cardtitle, react["createElement"]("a", { className: "header-anchor cardtitle-anchor", href: "#" + slug, "aria-hidden": "true" }, "\\uD83D\\uDD17"), react["createElement"]("a", { className: "cardtitle-target-anchor hash-anchor", id: slug, "data-text": titletext, "data-level": tag, "aria-hidden": "true" }));\n};\n/* harmony default export */ var cardtitle_view = (CardTitleView);\n// CONCATENATED MODULE: ./ts/core/control/views/link.view.tsx\n// option.view.tsx\n// copyright (c) 2016 Henrik Bechmann, Toronto, MIT Licence\n\n\n\n\nlet LinkView = props => {\n    let defaultImageStyle = { height: \'18px\', verticalAlign: \'middle\' };\n    return react["createElement"]("li", null, props.prompt, "\\u00A0", react["createElement"]("span", { style: { whiteSpace: \'pre\' } }, react["createElement"]("img", { style: Object.assign({}, defaultImageStyle, props.imageStyle), src: props.icon }), "\\u00A0", props.external ? react["createElement"]("a", { href: props.target, target: "_blank" }, props.targetText) : react["createElement"](react_router_dom_es["a" /* Link */], { to: props.target }, props.targetText), \' \', props.suffix), props.description ? react["createElement"]("p", { style: { fontStyle: \'italic\', margin: \'0\' } }, props.description) : null);\n};\n/* harmony default export */ var link_view = (LinkView);\n// CONCATENATED MODULE: ./ts/core/control/views/linklist.view.tsx\n// optionslist.view.tsx\n// copyright (c) 2016 Henrik Bechmann, Toronto, MIT Licence\n\n\n\n\nlet LinkListView = ({ header, items, upperDivider, lowerDivider }) => {\n    let localitems = items.map((item, index) => {\n        return react["createElement"](link_view, { external: item.external, key: index, prompt: item.prompt, icon: item.icon, target: item.target, targetText: item.targetText, description: item.description ? item.description : null, suffix: item.suffix ? item.suffix : null, imageStyle: item.imageStyle });\n    });\n    let upperelements = [];\n    let lowerelements = [];\n    if (upperDivider) upperelements.push(react["createElement"]("hr", { key: "upper" }));\n    if (lowerDivider) lowerelements.push(react["createElement"]("hr", { key: "lower" }));\n    return react["createElement"]("div", null, [...upperelements, react["createElement"]("p", { key: "header", style: { margin: 0, padding: 0 } }, header), react["createElement"]("ul", { key: "list" }, localitems), ...lowerelements]);\n};\n/* harmony default export */ var linklist_view = (LinkListView);\n// CONCATENATED MODULE: ./ts/core/control/views/nugget.view.tsx\n// nugget.view.tsx\n// copyright (c) 2016 Henrik Bechmann, Toronto, MIT Licence\n\n\n\n\nlet Nugget = props => {\n    let { image, style, contrast, prefix, infix, suffix } = props;\n    let defaultstyle = {\n        display: \'inline-block\',\n        textAlign: \'center\',\n        borderRadius: \'50%\',\n        backgroundColor: \'rgba(77,77,77,0.6)\',\n        backgroundImage: image ? `url(${image})` : \'none\',\n        backgroundSize: image ? \'cover\' : \'auto\',\n        color: contrast ? \'white\' : null,\n        width: \'180px\',\n        height: \'180px\',\n        marginRight: \'16px\',\n        overflow: \'clip\',\n        position: \'relative\',\n        fontWeight: \'300\',\n        whiteSpace: \'normal\',\n        verticalAlign: \'top\'\n    };\n    let defaultinfixstyle = {\n        fontSize: \'2.5em\',\n        color: \'#f1c40f\'\n    };\n    return react["createElement"]("div", { style: Object.assign({}, defaultstyle, style) }, react["createElement"]("div", { style: { marginTop: \'30px\', minWidth: \'20px\' } }, react["createElement"](markupline_view, { markup: prefix })), react["createElement"]("div", { style: defaultinfixstyle }, react["createElement"](markupline_view, { markup: infix })), react["createElement"]("div", null, react["createElement"](markupline_view, { markup: suffix })));\n};\n/* harmony default export */ var nugget_view = (Nugget);\n// CONCATENATED MODULE: ./ts/core/control/views/scrollcontrols.view.tsx\n// scrollcontrols.view.tsx\n// copyright (c) 2017 Henrik Bechmann, Toronto, MIT Licence\n\n\n\nclass scrollcontrols_view_ScrollControlsView extends react["Component"] {\n    constructor() {\n        super(...arguments);\n        this.scroller = null;\n        this.scrollerData = {\n            height: null,\n            offsetLeft: null,\n            offsetRight: null\n        };\n        this.calcScrollRight = () => {\n            let { scrollLeft, scrollWidth, clientWidth } = this.scroller;\n            return scrollWidth - (scrollLeft + clientWidth);\n        };\n        this.onResize = () => {\n            this.onScroll();\n        };\n        this.onScroll = () => {\n            let { scroller, scrollerData } = this;\n            let { scrollLeft } = scroller;\n            scrollerData.offsetLeft = scrollLeft;\n            scrollerData.offsetRight = this.calcScrollRight();\n            this.updateControlVisibility();\n        };\n        this.updateControlVisibility = () => {\n            let { leftcontrol, rightcontrol } = this.refs;\n            if (!leftcontrol || !rightcontrol) return;\n            let leftOpacity = Number(leftcontrol[\'style\'].opacity);\n            let rightOpacity = Number(rightcontrol[\'style\'].opacity);\n            let { offsetLeft, offsetRight } = this.scrollerData;\n            if (!!offsetLeft && !leftOpacity) {\n                leftcontrol[\'style\'].opacity = 1;\n            } else if (!offsetLeft && !!leftOpacity) {\n                leftcontrol[\'style\'].opacity = 0;\n            }\n            if (!!offsetRight && !rightOpacity) {\n                rightcontrol[\'style\'].opacity = 1;\n            } else if (!offsetRight && !!rightOpacity) {\n                rightcontrol[\'style\'].opacity = 0;\n            }\n        };\n        this.scrollToLeft = () => {\n            let original = this.scroller.scrollLeft;\n            if (original == 0) return;\n            let scrollleft = original - this.scroller.clientWidth;\n            this.smoothScroll(scrollleft);\n        };\n        this.scrollToRight = () => {\n            let original = this.scroller.scrollLeft;\n            let clientWidth = this.scroller.clientWidth;\n            let scrollWidth = this.scroller.scrollWidth;\n            if (original == scrollWidth - clientWidth) return;\n            let scrollright = original + clientWidth;\n            this.smoothScroll(scrollright);\n        };\n        // TODO apply some kind of easing; simplify, use requestAnimationFrame\n        this.smoothScroll = incomingtarget => {\n            let scroller = this.scroller;\n            let original = scroller.scrollLeft;\n            let target = incomingtarget;\n            let ms = 500;\n            let fps = 60;\n            let frames = fps / (1000 / ms);\n            if (target < 0) target = 0;\n            let rightmax = scroller.scrollwidth - scroller.clientwidth;\n            if (target > rightmax) target = rightmax;\n            try {\n                let poschange = target - original;\n                let msperinterval = ms / frames; // desired time; frames per half second\n                let tickslimit = ms / msperinterval;\n                let pospertick = poschange / tickslimit;\n                let ticks = 0;\n                let timer = setInterval(() => {\n                    if (ticks * msperinterval > ms) {\n                        clearInterval(timer);\n                        return;\n                    }\n                    ticks++;\n                    let span = ticks * pospertick;\n                    let next = original + span;\n                    scroller.scrollLeft = next;\n                }, msperinterval);\n            } catch (e) {\n                // abandon\n            }\n        };\n        this.arrowStyle = {\n            position: \'absolute\',\n            width: \'20px\',\n            height: \'40px\',\n            border: \'1px solid gray\',\n            zIndex: 20,\n            fontSize: \'30px\',\n            color: \'darkslategray\',\n            overflow: \'hidden\',\n            backgroundColor: \'rgba(240,248,255,.7)\',\n            opacity: 0,\n            transition: \'opacity 1s\',\n            cursor: \'pointer\'\n        };\n        this.leftArrowStyle = Object.assign({}, this.arrowStyle, { left: 0, borderBottomRightRadius: \'20px\', borderTopRightRadius: \'20px\', borderLeft: 0 });\n        this.rightArrowStyle = Object.assign({}, this.arrowStyle, { right: 0, borderBottomLeftRadius: \'20px\', borderTopLeftRadius: \'20px\', borderRight: 0 });\n    }\n    componentWillReceiveProps(next) {\n        // received on second render\n        if (!this.scroller && next.scroller) {\n            let scroller = this.scroller = next.scroller;\n            let { scrollerData } = this;\n            scrollerData.height = scroller.clientHeight;\n            scrollerData.offsetLeft = scroller.scrollLeft;\n            scrollerData.offsetRight = this.calcScrollRight();\n            scroller.addEventListener(\'scroll\', this.onScroll);\n            window.addEventListener(\'resize\', this.onResize);\n        }\n    }\n    componentWillUnmount() {\n        this.scroller.removeEventListener(\'scroll\', this.onScroll);\n        window.removeEventListener(\'resize\', this.onResize);\n    }\n    render() {\n        let verticalpos = null;\n        if (this.scroller) {\n            verticalpos = this.scrollerData.height / 2 - 20;\n        }\n        let leftStyle = Object.assign({}, this.leftArrowStyle, { top: verticalpos + \'px\' });\n        let rightStyle = Object.assign({}, this.rightArrowStyle, { top: verticalpos + \'px\' });\n        this.updateControlVisibility();\n        return react["createElement"]("div", { style: { position: \'relative\' } }, react["createElement"]("div", { style: leftStyle, ref: "leftcontrol", onClick: this.scrollToLeft }, react["createElement"]("div", { style: {\n                marginLeft: \'-10px\',\n                marginTop: \'2px\'\n            } }, react["createElement"]("div", { style: {\n                fontSize: \'36px\'\n            }, className: \'material-icons\' }, "chevron_left"))), react["createElement"]("div", { style: rightStyle, ref: "rightcontrol", onClick: this.scrollToRight }, react["createElement"]("div", { style: {\n                marginLeft: \'-6px\',\n                marginTop: \'2px\'\n            } }, react["createElement"]("div", { style: {\n                fontSize: \'36px\'\n            }, className: \'material-icons\' }, "chevron_right"))), this.props.children);\n    }\n}\n/* harmony default export */ var scrollcontrols_view = (scrollcontrols_view_ScrollControlsView);\n// CONCATENATED MODULE: ./ts/core/control/views/hashanchorwrapper.view.tsx\n// hashanchorwrapper.view.tsx\n// copyright (c) 2018 Henrik Bechmann, Toronto, MIT Licence\n\n\n\n\nconst hashanchorwrapper_view_removeMd = __webpack_require__(190);\nvar hashanchorwrapper_view_stringUtils = __webpack_require__(111);\nlet HashAnchorWrapper = ({ tag, title, style }) => {\n    let wrapperstyle = {\n        position: \'relative\',\n        paddingLeft: \'16px\',\n        marginLeft: \'-16px\'\n    };\n    let titletext = hashanchorwrapper_view_removeMd(title);\n    let slug = hashanchorwrapper_view_stringUtils(titletext).slugify().s;\n    let titlenode = react["createElement"](markupline_view, { key: "title", markup: title });\n    let permalink = react["createElement"]("a", { key: "permalink", className: "header-anchor markup-anchor", href: "#" + slug, "aria-hidden": "true" }, "\\uD83D\\uDD17");\n    let hashtarget = react["createElement"]("a", { key: "hashtarget", className: "target-anchor hash-anchor", id: slug, "data-text": titletext, "data-level": tag, "aria-hidden": "true" });\n    return react["createElement"]("div", { className: \'content-header\', style: Object.assign({}, wrapperstyle, style) }, titlenode, permalink, hashtarget);\n};\n/* harmony default export */ var hashanchorwrapper_view = (HashAnchorWrapper);\n// CONCATENATED MODULE: ./ts/core/control/views/nuggetlist.view.tsx\n// nuggetlist.view.tsx\n// copyright (c) 2016 Henrik Bechmann, Toronto, MIT Licence\n\n\n\n\n\n\n\nclass nuggetlist_view_NuggetList extends react["Component"] {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            scroller: null\n        };\n        this.scroller = null;\n    }\n    componentDidMount() {\n        this.setState({\n            scroller: this.scroller\n        });\n    }\n    render() {\n        let { nuggets: nuggetdata, image, title, subtitle, style, contrast } = this.props;\n        let defaultstyle = {\n            position: \'relative\',\n            backgroundColor: image ? \'none\' : \'green\',\n            backgroundImage: image ? `url(${image})` : \'none\',\n            backgroundSize: image ? \'cover\' : \'auto\',\n            margin: \'0 16px 24px 16px\',\n            borderRadius: \'8px\',\n            boxShadow: \'rgba(0, 0, 0, 0.4) 0px 10px 30px, rgba(0, 0, 0, 0.4) 0px 6px 10px\'\n        };\n        let defaultScrollBlockstyle = {\n            padding: "16px",\n            display: \'block\',\n            overflowX: \'scroll\'\n        };\n        let nuggets = nuggetdata.map(function (data, index) {\n            return react["createElement"](nugget_view, { key: index, image: data.image, style: data.style, prefix: data.prefix, infix: data.infix, suffix: data.suffix, contrast: data.contrast });\n        });\n        return react["createElement"]("article", { style: Object.assign({}, defaultstyle, style) }, react["createElement"]("div", { style: {\n                position: \'absolute\',\n                left: \'0\',\n                top: \'0\',\n                padding: \'8px 16px\',\n                zIndex: 2\n            } }, react["createElement"](hashanchorwrapper_view, { tag: \'h2\', title: title, style: {\n                display: \'inline-block\',\n                color: \'white\',\n                verticalAlign: \'bottom\',\n                marginRight: \'8px\'\n            } }), react["createElement"]("div", { style: {\n                display: \'inline-block\',\n                color: \'white\',\n                verticalAlign: \'bottom\',\n                fontSize: \'smaller\'\n            } }, react["createElement"](markupline_view, { markup: subtitle }))), react["createElement"](scrollcontrols_view, { scroller: this.state.scroller }, react["createElement"]("div", { style: defaultScrollBlockstyle /*ts typing issue*/, ref: el => {\n                this.scroller = el;\n            } }, react["createElement"]("div", { style: {\n                display: \'block\',\n                whiteSpace: \'nowrap\',\n                position: \'relative\',\n                marginTop: \'20px\'\n            } }, nuggets))));\n    }\n}\n/* harmony default export */ var nuggetlist_view = (nuggetlist_view_NuggetList);\n// EXTERNAL MODULE: ./node_modules/material-ui/GridList/index.js\nvar GridList = __webpack_require__(504);\n\n// CONCATENATED MODULE: ./ts/core/control/views/tile.view.tsx\n// copyright (c) 2016 Henrik Bechmann, Toronto, MIT Licence\n// navtile.tsx\n\n// required by bundler\n\n\n\nlet TileView = props => {\n    let pushHistory = e => {\n        if (props.content.disabled) {\n            return;\n        }\n        e.stopPropagation();\n        props.onSelect(props.route);\n    };\n    let wrapperstyle = null;\n    if (props.content.disabled) {\n        wrapperstyle = {\n            position: \'relative\',\n            opacity: 0.3,\n            filter: "alpha(opacity = 30)",\n            backgroundColor: "#000",\n            display: \'inline-block\'\n        };\n    } else {\n        wrapperstyle = {\n            position: \'relative\',\n            pointerEvens: "none",\n            display: \'inline-block\'\n        };\n    }\n    return react["createElement"]("div", { style: wrapperstyle, onClick: pushHistory }, react["createElement"]("div", { style: { position: "absolute", top: 3, left: 3, color: "silver", fontStyle: "italic", fontSize: "smaller", zIndex: 5 } }, props.content.category), react["createElement"](GridList["GridTile"], { style: {\n            display: \'inline-block\',\n            textAlign: "center",\n            backgroundColor: \'white\',\n            border: \'2px solid silver\',\n            borderRadius: \'8px\',\n            cursor: \'pointer\',\n            width: \'180px\',\n            height: \'180px\',\n            marginRight: \'16px\'\n        }, title: props.content.title, subtitle: props.content.subtitle, cols: props.content.cols || 1 }, react["createElement"]("img", { src: props.content.image })));\n};\n/* harmony default export */ var tile_view = (TileView);\n// CONCATENATED MODULE: ./ts/core/control/views/tilelist.view.tsx\n// copyright (c) 2016 Henrik Bechmann, Toronto, MIT Licence\n// tilelist.controller.tsx\n\n\n\n\n\n\nclass tilelist_view_TileListController extends react["Component"] {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            scroller: null\n        };\n        this.scroller = null;\n    }\n    componentDidMount() {\n        this.setState({\n            scroller: this.scroller\n        });\n    }\n    render() {\n        let { tiles: tilelist, style, onSelect, title } = this.props;\n        let primarytiledata = [];\n        let secondarytiledata = [];\n        for (let tiledata of tilelist) {\n            if (tiledata.tier == \'primary\') {\n                primarytiledata.push(tiledata);\n            } else {\n                secondarytiledata.push(tiledata);\n            }\n        }\n        let tiledata = [...primarytiledata, ...secondarytiledata];\n        let tiles = tiledata.map(function (data) {\n            return react["createElement"](tile_view, { key: data.id, content: data.content, route: data.route, imageStyle: data.imageStyle, onSelect: onSelect });\n        });\n        // 152    102    103   #986667 \n        return react["createElement"]("article", { style: {\n                position: \'relative\',\n                margin: \'0 16px\',\n                borderRadius: \'8px\',\n                backgroundColor: "#749261",\n                boxShadow: \'rgba(0, 0, 0, 0.4) 0px 10px 30px, rgba(0, 0, 0, 0.4) 0px 6px 10px\'\n            } }, react["createElement"]("div", { style: {\n                position: \'absolute\',\n                left: \'0\',\n                top: \'0\',\n                padding: \'8px 16px\',\n                zIndex: 2\n            } }, react["createElement"](hashanchorwrapper_view, { tag: \'h2\', title: title, style: {\n                display: \'inline-block\',\n                color: \'white\',\n                verticalAlign: \'bottom\',\n                marginRight: \'8px\'\n            } })), react["createElement"](scrollcontrols_view, { scroller: this.state.scroller }, react["createElement"]("div", { style: style, ref: el => {\n                this.scroller = el;\n            } }, react["createElement"]("div", { style: {\n                display: \'block\',\n                whiteSpace: \'nowrap\',\n                position: \'relative\'\n            } }, tiles))));\n    }\n}\n/* harmony default export */ var tilelist_view = (tilelist_view_TileListController);\n// CONCATENATED MODULE: ./ts/core/control/views/markuplist.view.tsx\n// markuplist.view.tsx\n/*\n    TODO\n        - allow for sublists = isSublist property in item\n        - allow for horizontal presentation of fields\n        - offset close list with window scroll\n*/\n\n\n\n\nlet moment = __webpack_require__(2);\nlet Fields = ({ fields, fieldproperties, fieldmeta }) => {\n    let fieldlist = [];\n    for (let index in fields) {\n        let field = fields[index];\n        let name;\n        let content;\n        // console.log(\'index, fields\',index, fields)\n        if (!fieldproperties.commonstructure) {\n            name = field.name;\n            content = field.content;\n        } else {\n            name = fieldmeta[index].name;\n            content = field;\n        }\n        if (fieldmeta[index].type == \'date\') {\n            content = moment(content, fieldmeta[index].layout).format(fieldmeta[index].format);\n        }\n        let rowstyle = null;\n        if (fieldproperties.horizontal) {\n            rowstyle = {\n                display: \'inline\',\n                borderRight: \'1px solid silver\',\n                paddingRight: \'8px\',\n                marginRight: \'8px\'\n            };\n        }\n        fieldlist.push(react["createElement"]("div", { key: index, style: rowstyle }, react["createElement"]("div", { style: { fontStyle: \'italic\', display: \'inline\' } }, name, ": "), react["createElement"](markupline_view, { markup: content, style: { display: \'inline\' } })));\n    }\n    if (!fieldlist.length) return null;\n    return react["createElement"]("div", { style: { marginBottom: \'8px\' } }, fieldlist);\n};\nclass markuplist_view_MarkupListView extends react["Component"] {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            compacted: this.props.compacted,\n            expanded: !!this.props.expanded,\n            outerheight: \'auto\',\n            opaque: this.props.compacted && !this.props.expanded\n        };\n        // allow sublist\n        // content, fields, suffix, isSublist\n        this.itemcontent = (items, fieldproperties, fieldmeta) => {\n            let itemlist = items.map((item, index) => {\n                return react["createElement"]("li", { key: index }, item.content ? react["createElement"](markupblock_view, { markup: item.content }) : null, item.fields ? react["createElement"](Fields, { fields: item.fields, fieldproperties: fieldproperties, fieldmeta: fieldmeta }) : null, item.suffix ? react["createElement"](markupblock_view, { markup: item.suffix }) : null);\n            });\n            return react["createElement"]("ul", null, itemlist);\n        };\n        this.headercontent = headermarkup => {\n            return react["createElement"](markupblock_view, { markup: headermarkup });\n        };\n        this.outernode = null;\n        this.innernode = null;\n        this.onExpand = () => {\n            this.setState({\n                outerheight: this.outernode.clientHeight + \'px\',\n                expanded: true,\n                opaque: false\n            }, () => {\n                this.setState({\n                    outerheight: this.innernode.offsetHeight + \'px\'\n                }, () => {\n                    setTimeout(() => {\n                        this.setState({\n                            outerheight: \'auto\'\n                        });\n                    }, 600);\n                });\n            });\n        };\n        this.onContract = () => {\n            this.setState({\n                outerheight: this.outernode.offsetHeight + \'px\',\n                opaque: true\n            }, () => {\n                setTimeout(() => {\n                    this.setState({\n                        outerheight: \'150px\'\n                    }, () => {\n                        setTimeout(() => {\n                            this.setState({\n                                expanded: false,\n                                outerheight: \'auto\'\n                            });\n                        }, 600);\n                    });\n                });\n            });\n        };\n    }\n    render() {\n        let { fieldproperties, fieldmeta, headermarkup, items } = this.props;\n        let maxHeight = this.state.compacted && !this.state.expanded ? \'150px\' : \'none\';\n        let chipstyle = {\n            float: \'right\',\n            margin: \'3px\',\n            backgroundColor: \'rgba(192,192,192,.2)\',\n            fontSize: \'x-small\',\n            fontStyle: \'italic\'\n        };\n        let opacity = this.state.compacted && !this.state.opaque ? 0 : 1;\n        let outerstyle = {\n            position: \'relative\',\n            height: this.state.outerheight,\n            maxHeight: maxHeight,\n            overflow: \'hidden\',\n            transition: \'height .5s\'\n        };\n        return react["createElement"]("div", null, this.headercontent(headermarkup), react["createElement"]("div", { ref: node => {\n                this.outernode = node;\n            }, style: outerstyle }, react["createElement"]("div", { style: { border: \'1px solid white\' }, ref: node => {\n                this.innernode = node;\n            } }, this.state.compacted ? !this.state.expanded ? react["createElement"](Chip_default.a, { onClick: this.onExpand, style: chipstyle }, react["createElement"]("span", { className: "material-icons", style: { verticalAlign: \'middle\' } }, "keyboard_arrow_down"), " Show more") : react["createElement"](Chip_default.a, { onClick: this.onContract, style: chipstyle }, react["createElement"]("span", { className: "material-icons", style: { verticalAlign: \'middle\' } }, "keyboard_arrow_up"), " Show less") : null, this.itemcontent(items, fieldproperties, fieldmeta)), this.state.compacted ? react["createElement"]("div", { style: {\n                opacity: opacity,\n                transition: \'opacity .5s\',\n                position: \'absolute\',\n                bottom: 0,\n                height: \'4.5em\',\n                width: \'100%\',\n                background: \'linear-gradient(to bottom, rgba(255,255,255,0), rgba(255,255,255,1))\'\n            } }) : null));\n    }\n}\n/* harmony default export */ var markuplist_view = (markuplist_view_MarkupListView);\n// CONCATENATED MODULE: ./ts/core/control/list.controller.tsx\n// list.controller.tsx\n// copyright (c) 2017 Henrik Bechmann, Toronto, MIT Licence\n\n\n\n\n\n\n\n\nclass list_controller_ListControllerClass extends react["Component"] {\n    constructor(props) {\n        super(props);\n        this.state = {\n            model: null\n        };\n        this.toolkit = null;\n        this.emitLocalComponent = (component, key) => {\n            let { controller, index, wrapper, type, properties, children } = component;\n            let childcomponents = this.toolkit.getChildren(this, children);\n            let componentType = null;\n            switch (type) {\n                case \'linklist\':\n                    {\n                        componentType = linklist_view;\n                        break;\n                    }\n                case \'nuggetlist\':\n                    {\n                        componentType = nuggetlist_view;\n                        break;\n                    }\n                case \'tilelist\':\n                    {\n                        componentType = tilelist_view;\n                        break;\n                    }\n                case \'markuplist\':\n                    {\n                        componentType = markuplist_view;\n                        break;\n                    }\n                default:\n                    {\n                        return react["createElement"]("div", { key: key }, "Component type ", type, " not found in ", controller, " controller");\n                    }\n            }\n            properties.key = key;\n            let output = react["createElement"](componentType, properties, childcomponents);\n            output = this.toolkit.wrapComponent(output, wrapper, key);\n            return output;\n        };\n        this.emitComponent = (model, key) => {\n            let { controller } = model;\n            switch (controller) {\n                case \'list\':\n                    {\n                        return this.emitLocalComponent(model, key);\n                    }\n                default:\n                    {\n                        let { description } = model;\n                        return react["createElement"]("div", { key: \'default\' + key }, `${controller} (${description}) not found in List processor`);\n                    }\n            }\n        };\n        this.toolkit = props.toolkit;\n    }\n    componentDidMount() {\n        let { model } = this.props;\n        this.toolkit.setStateModel(this, model);\n    }\n    render() {\n        let { model } = this.state;\n        if (!model) return react["createElement"]("div", null);\n        let { index } = model;\n        let component = this.emitComponent(model, index);\n        return component;\n    }\n}\nlet ListController = core_controller_composer(list_controller_ListControllerClass);\n/* harmony default export */ var list_controller = (ListController);\n// CONCATENATED MODULE: ./ts/core/control/card.controller.tsx\n// cards.controller.tsx\n// copyright (c) 2017 Henrik Bechmann, Toronto, MIT Licence\n\n\n\n\n\n\n\n\n\nclass card_controller_CardControllerClass extends react["Component"] {\n    constructor(props) {\n        super(props);\n        this.state = {\n            model: null\n        };\n        this.toolkit = null;\n        this.emitLocalComponent = (component, key) => {\n            let { controller, index, wrapper, type, properties, children } = component;\n            let childcomponents = this.toolkit.getChildren(this, children);\n            if (childcomponents) {\n                childcomponents = [...childcomponents]; // work with copy; anticipate change below\n            }\n            let componentType = null;\n            switch (type) {\n                case \'card\':\n                    {\n                        componentType = Card["Card"];\n                        childcomponents = [...childcomponents, react["createElement"]("div", { key: \'clear\', style: { clear: "both" } })];\n                        break;\n                    }\n                case \'htmlview\':\n                    {\n                        // console.log(\'htmlview\',component,childcomponents)\n                        componentType = html_view;\n                        break;\n                    }\n                case \'cardtitle\':\n                    {\n                        componentType = cardtitle_view;\n                        break;\n                    }\n                case \'cardtext\':\n                    {\n                        componentType = Card["CardText"];\n                        break;\n                    }\n                case \'markupblock\':\n                    {\n                        componentType = markupblock_view;\n                        break;\n                    }\n                case \'cardactions\':\n                    {\n                        componentType = Card["CardActions"];\n                        break;\n                    }\n                case \'cardheader\':\n                    {\n                        componentType = Card["CardHeader"];\n                        break;\n                    }\n                case \'cardmedia\':\n                    {\n                        componentType = Card["CardMedia"];\n                        break;\n                    }\n                default:\n                    {\n                        return react["createElement"]("div", { key: key }, "Component type ", type, " not found in ", controller, " controller");\n                    }\n            }\n            properties.key = key;\n            let output = react["createElement"](componentType, properties, childcomponents);\n            output = this.toolkit.wrapComponent(output, wrapper, key);\n            return output;\n        };\n        this.emitComponent = (model, key) => {\n            let { controller } = model;\n            switch (controller) {\n                case \'card\':\n                    {\n                        return this.emitLocalComponent(model, key);\n                    }\n                case \'list\':\n                    {\n                        return react["createElement"](list_controller, { key: key, model: model });\n                    }\n                default:\n                    {\n                        let { description } = model;\n                        return react["createElement"]("div", { key: \'default\' + key }, `${controller} (${description}) not found`);\n                    }\n            }\n        };\n        this.toolkit = props.toolkit;\n    }\n    componentDidMount() {\n        let { model } = this.props;\n        this.toolkit.setStateModel(this, model);\n    }\n    render() {\n        let { model } = this.state;\n        if (!model) return react["createElement"]("div", null);\n        let component = this.emitComponent(model, model.index);\n        return component;\n    }\n}\nlet CardController = core_controller_composer(card_controller_CardControllerClass);\n/* harmony default export */ var card_controller = (CardController);\n// EXTERNAL MODULE: ./node_modules/material-ui/Paper/index.js\nvar Paper = __webpack_require__(38);\nvar Paper_default = /*#__PURE__*/__webpack_require__.n(Paper);\n\n// CONCATENATED MODULE: ./ts/core/control/views/paper.view.tsx\n// paper.view.tsx\n// copyright (c) 2018 Henrik Bechmann, Toronto, MIT Licence\n\n\n\n\nlet PaperView = ({ children }) => {\n    let styles = {\n        outderdiv: { backgroundColor: \'#d9d9d9\', margin: \'16px\' },\n        innerdiv: { padding: \'16px\', position: "relative" }\n    };\n    return react["createElement"]("article", { style: styles.outderdiv }, react["createElement"](Paper_default.a, { zDepth: 3, style: {\n            boxShadow: \'rgba(0, 0, 0, 0.4) 0px 10px 30px, rgba(0, 0, 0, 0.4) 0px 6px 10px\',\n            borderRadius: \'8px\'\n        } }, react["createElement"]("div", { style: styles.innerdiv }, children, react["createElement"]("div", { style: { clear: \'both\' } }))));\n};\n/* harmony default export */ var paper_view = (PaperView);\n// EXTERNAL MODULE: ./node_modules/material-ui/FloatingActionButton/index.js\nvar FloatingActionButton = __webpack_require__(225);\nvar FloatingActionButton_default = /*#__PURE__*/__webpack_require__.n(FloatingActionButton);\n\n// EXTERNAL MODULE: ./node_modules/material-ui/svg-icons/editor/mode-edit.js\nvar mode_edit = __webpack_require__(503);\nvar mode_edit_default = /*#__PURE__*/__webpack_require__.n(mode_edit);\n\n// EXTERNAL MODULE: ./node_modules/material-ui/svg-icons/file/file-download.js\nvar file_download = __webpack_require__(502);\nvar file_download_default = /*#__PURE__*/__webpack_require__.n(file_download);\n\n// EXTERNAL MODULE: ./node_modules/material-ui/svg-icons/action/done.js\nvar done = __webpack_require__(501);\nvar done_default = /*#__PURE__*/__webpack_require__.n(done);\n\n// CONCATENATED MODULE: ./ts/core/control/forked-components/renderedlink.view.tsx\n// renderedlink.view.tsx\n// copyright (c) 2017 Henrik Bechmann, Toronto, MIT Licence\n\n\n\n\n// RenderedLink taken after \n// https://github.com/draft-js-plugins/draft-js-plugins/blob/master/draft-js-anchor-plugin/src/components/Link/index.js\n// modified by adding conditional for when user enters \'local.link/somepath\' \n// that generates a router Link instead of an anchor link\nconst RenderedLink = ({ children, className, entityKey, getEditorState, target }) => {\n    const entity = getEditorState().getCurrentContent().getEntity(entityKey);\n    const entityData = entity ? entity.get(\'data\') : undefined;\n    const href = entityData && entityData.url || undefined;\n    // conditional added by HB\n    let test = \'local.link\';\n    let pos = href.indexOf(test);\n    if (pos != -1) {\n        let to = href.substring(pos + test.length);\n        if (!to) to = \'/\';\n        // TODO not sure about className -- needs testing\n        return react["createElement"](react_router_dom_es["a" /* Link */], { className: className, to: to }, children);\n    }\n    // end of conditional\n    return react["createElement"]("a", { className: className, title: href, href: href, target: \'_blank\', rel: "noopener noreferrer" }, children);\n};\n/* harmony default export */ var renderedlink_view = (RenderedLink);\n// EXTERNAL MODULE: ./node_modules/draft-js-buttons/lib/index.js\nvar draft_js_buttons_lib = __webpack_require__(31);\n\n// CONCATENATED MODULE: ./ts/core/control/forked-components/headlinespicker.view.tsx\n// headlinespicker.view.tsx\n\n\n\n\n// from draft-js-plugins\n// copy-paste below\nclass headlinespicker_view_HeadlinesPicker extends react["Component"] {\n    constructor() {\n        super(...arguments);\n        this.onWindowClick = () =>\n        // Call `onOverrideContent` again with `undefined`\n        // so the toolbar can show its regular content again.\n        this.props.onOverrideContent(undefined);\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            window.addEventListener(\'click\', this.onWindowClick);\n        });\n    }\n    componentWillUnmount() {\n        window.removeEventListener(\'click\', this.onWindowClick);\n    }\n    render() {\n        const buttons = [draft_js_buttons_lib["HeadlineOneButton"], draft_js_buttons_lib["HeadlineTwoButton"], draft_js_buttons_lib["HeadlineThreeButton"]];\n        return react["createElement"]("div", null, buttons.map((Button, i) => // eslint-disable-next-line\n        react["createElement"](Button, Object.assign({ key: i }, this.props))));\n    }\n}\n/* harmony default export */ var headlinespicker_view = (headlinespicker_view_HeadlinesPicker);\n// CONCATENATED MODULE: ./ts/core/control/forked-components/headlinesbutton.view.tsx\n// headlinesbutton.view.tsx\n\n\n\n\n// from draft-js-plugins\n// copy-paste below\n// copy-paste below (more or less)\nclass headlinesbutton_view_HeadlinesButton extends react["Component"] {\n    constructor() {\n        super(...arguments);\n        this.onClick = () =>\n        // A button can call `onOverrideContent` to replace the content\n        // of the toolbar. This can be useful for displaying sub\n        // menus or requesting additional information from the user.\n        this.props.onOverrideContent(headlinespicker_view);\n    }\n    render() {\n        return react["createElement"]("div", { className: "headlineButtonWrapper" }, react["createElement"]("button", { onClick: this.onClick, className: "headlineButton" }, "H"));\n    }\n}\n/* harmony default export */ var headlinesbutton_view = (headlinesbutton_view_HeadlinesButton);\n// EXTERNAL MODULE: ./node_modules/draft-js/lib/Draft.js\nvar Draft = __webpack_require__(24);\n\n// EXTERNAL MODULE: ./node_modules/draft-js-plugins-editor/lib/index.js\nvar draft_js_plugins_editor_lib = __webpack_require__(231);\nvar draft_js_plugins_editor_lib_default = /*#__PURE__*/__webpack_require__.n(draft_js_plugins_editor_lib);\n\n// EXTERNAL MODULE: ./node_modules/draft-js-static-toolbar-plugin/lib/index.js\nvar draft_js_static_toolbar_plugin_lib = __webpack_require__(230);\nvar draft_js_static_toolbar_plugin_lib_default = /*#__PURE__*/__webpack_require__.n(draft_js_static_toolbar_plugin_lib);\n\n// EXTERNAL MODULE: ./node_modules/draft-js-anchor-plugin/lib/index.js\nvar draft_js_anchor_plugin_lib = __webpack_require__(500);\nvar draft_js_anchor_plugin_lib_default = /*#__PURE__*/__webpack_require__.n(draft_js_anchor_plugin_lib);\n\n// EXTERNAL MODULE: ./node_modules/draft-js-image-plugin/lib/index.js\nvar draft_js_image_plugin_lib = __webpack_require__(499);\nvar draft_js_image_plugin_lib_default = /*#__PURE__*/__webpack_require__.n(draft_js_image_plugin_lib);\n\n// EXTERNAL MODULE: ./ts/core/control/forked-components/imageadd.styles.css\nvar imageadd_styles = __webpack_require__(675);\n\n// CONCATENATED MODULE: ./ts/core/control/forked-components/imageadd.view.tsx\n\n\nclass imageadd_view_ImageAdd extends react["Component"] {\n    constructor() {\n        super(...arguments);\n        // Start the popover closed\n        this.state = {\n            url: \'\',\n            open: false\n        };\n        // Note: make sure whenever a click happens within the popover it is not closed\n        this.onPopoverClick = () => {\n            this.preventNextClose = true;\n        };\n        this.openPopover = () => {\n            if (!this.state.open) {\n                this.preventNextClose = true;\n                this.setState({\n                    open: true\n                });\n            }\n        };\n        this.closePopover = () => {\n            if (!this.preventNextClose && this.state.open) {\n                this.setState({\n                    open: false\n                });\n            }\n            this.preventNextClose = false;\n        };\n        this.addImage = () => {\n            const { editorState, onChange } = this.props;\n            onChange(this.props.modifier(editorState, this.state.url));\n        };\n        this.changeUrl = evt => {\n            this.setState({ url: evt.target.value });\n        };\n    }\n    // When the popover is open and users click anywhere on the page,\n    // the popover should close\n    componentDidMount() {\n        document.addEventListener(\'click\', this.closePopover);\n    }\n    componentWillUnmount() {\n        document.removeEventListener(\'click\', this.closePopover);\n    }\n    render() {\n        const popoverClassName = this.state.open ? "addImagePopover" : "addImageClosedPopover";\n        const buttonClassName = this.state.open ? "addImagePressedButton" : "addImageButton";\n        return react["createElement"]("div", { className: "addImage" }, react["createElement"]("button", { className: buttonClassName, onMouseUp: this.openPopover, type: "button" }, "img"), react["createElement"]("div", { className: popoverClassName, onClick: this.onPopoverClick }, react["createElement"]("input", { type: "text", placeholder: "Paste the image url \\u2026", className: "addImageInput", onChange: this.changeUrl, value: this.state.url }), react["createElement"]("button", { className: "addImageConfirmButton", type: "button", onClick: this.addImage }, "Add")));\n    }\n}\n// EXTERNAL MODULE: ./node_modules/draft-js-alignment-plugin/lib/index.js\nvar draft_js_alignment_plugin_lib = __webpack_require__(498);\nvar draft_js_alignment_plugin_lib_default = /*#__PURE__*/__webpack_require__.n(draft_js_alignment_plugin_lib);\n\n// EXTERNAL MODULE: ./node_modules/draft-js-focus-plugin/lib/index.js\nvar draft_js_focus_plugin_lib = __webpack_require__(497);\nvar draft_js_focus_plugin_lib_default = /*#__PURE__*/__webpack_require__.n(draft_js_focus_plugin_lib);\n\n// EXTERNAL MODULE: ./node_modules/draft-js-resizeable-plugin/lib/index.js\nvar draft_js_resizeable_plugin_lib = __webpack_require__(496);\nvar draft_js_resizeable_plugin_lib_default = /*#__PURE__*/__webpack_require__.n(draft_js_resizeable_plugin_lib);\n\n// EXTERNAL MODULE: ./node_modules/immutable/dist/immutable.js\nvar immutable = __webpack_require__(495);\n\n// EXTERNAL MODULE: ./ts/core/control/forked-components/sheet.styles.css\nvar sheet_styles = __webpack_require__(661);\n\n// EXTERNAL MODULE: ./node_modules/draft-js/dist/Draft.css\nvar dist_Draft = __webpack_require__(659);\n\n// EXTERNAL MODULE: ./node_modules/draft-js-static-toolbar-plugin/lib/plugin.css\nvar lib_plugin = __webpack_require__(657);\n\n// EXTERNAL MODULE: ./node_modules/draft-js-anchor-plugin/lib/plugin.css\nvar draft_js_anchor_plugin_lib_plugin = __webpack_require__(655);\n\n// EXTERNAL MODULE: ./node_modules/draft-js-image-plugin/lib/plugin.css\nvar draft_js_image_plugin_lib_plugin = __webpack_require__(653);\n\n// EXTERNAL MODULE: ./node_modules/draft-js-alignment-plugin/lib/plugin.css\nvar draft_js_alignment_plugin_lib_plugin = __webpack_require__(651);\n\n// EXTERNAL MODULE: ./node_modules/draft-js-focus-plugin/lib/plugin.css\nvar draft_js_focus_plugin_lib_plugin = __webpack_require__(649);\n\n// CONCATENATED MODULE: ./ts/core/control/views/sheet.view.tsx\n// sheet.view.tsx\n// copyright (c) 2017 Henrik Bechmann, Toronto, MIT Licence\n\n\n\n\n\n\n\n\nvar fileDownload = __webpack_require__(804);\nvar sheet_view_stringUtils = __webpack_require__(111);\n\n\n\n\n\n\n\n\n\n\n\n\n// -----------------------------[ plugin compliance ]-------------------------------\n// from draft-js-plugins.com\n\n\n\n\n\n\n\n\n// --------------------------------[ end of plugins compliance ]---------------------------------\nlet map = {\n    \'header-one\': \'h1\',\n    \'header-two\': \'h2\',\n    \'header-three\': \'h3\',\n    \'header-four\': \'h4\'\n};\nlet HeaderWrapper = props => {\n    let { text, type } = props.children[0].props.children.props.block;\n    let slug = sheet_view_stringUtils(text).slugify().s;\n    let hprops = {\n        className: \'content-header\',\n        style: {\n            paddingLeft: \'16px\',\n            marginLeft: \'-16px\',\n            position: \'relative\'\n        }\n    };\n    let tag = map[type];\n    return react["createElement"](tag, hprops, [props.children, react["createElement"]("a", { key: "permalink", className: "header-anchor draft-anchor", href: "#" + slug, "aria-hidden": "true" }, "\\uD83D\\uDD17"), react["createElement"]("a", { key: "targetlink", className: "target-anchor hash-anchor", id: slug, "data-text": text, "data-level": tag, "aria-hidden": "true" })]);\n};\nclass sheet_view_SheetView extends react["Component"] {\n    constructor(props) {\n        super(props);\n        // declarations\n        this.state = null;\n        this.editor = null; // element ref\n        this.assemblePlugins = () => {\n            // core initialization\n            let linkPlugin = draft_js_anchor_plugin_lib_default()({\n                Link: renderedlink_view,\n                placeholder: \'local.link/path, or external url\'\n            });\n            let toolbarPlugin = draft_js_static_toolbar_plugin_lib_default()({\n                structure: [draft_js_buttons_lib["BoldButton"], draft_js_buttons_lib["ItalicButton"], draft_js_buttons_lib["UnderlineButton"], draft_js_buttons_lib["CodeButton"], linkPlugin.LinkButton, draft_js_static_toolbar_plugin_lib["Separator"], headlinesbutton_view, draft_js_buttons_lib["UnorderedListButton"], draft_js_buttons_lib["OrderedListButton"], draft_js_buttons_lib["BlockquoteButton"], draft_js_buttons_lib["CodeBlockButton"]]\n            });\n            let { Toolbar } = toolbarPlugin;\n            this.Toolbar = Toolbar;\n            let focusPlugin = draft_js_focus_plugin_lib_default()();\n            let alignmentPlugin = draft_js_alignment_plugin_lib_default()();\n            let { AlignmentTool } = alignmentPlugin;\n            this.AlignmentTool = AlignmentTool;\n            let resizeablePlugin = draft_js_resizeable_plugin_lib_default()();\n            let pluginOptions = {\n                toolbarPlugin,\n                linkPlugin,\n                alignmentPlugin,\n                focusPlugin,\n                resizeablePlugin,\n                imagePlugin: null\n            };\n            let imagePlugin = this.assembleImagePlugin(pluginOptions);\n            pluginOptions.imagePlugin = imagePlugin;\n            this.pluginOptions = pluginOptions;\n            this.plugins = [toolbarPlugin, linkPlugin, alignmentPlugin, focusPlugin, resizeablePlugin, imagePlugin];\n        };\n        this.assembleImagePlugin = options => {\n            let decorator;\n            decorator = Object(draft_js_plugins_editor_lib["composeDecorators"])(options.resizeablePlugin.decorator, options.alignmentPlugin.decorator, options.focusPlugin.decorator);\n            let imagePlugin = draft_js_image_plugin_lib_default()({\n                decorator\n            });\n            return imagePlugin;\n        };\n        this.focus = () => {\n            this.editor.focus();\n        };\n        this.onEditorChange = editorState => this.setState({ editorState });\n        // workaround until back end is set up. \n        // Downloads rawContent, which dev than has to save to model/data/draft/, and recompile :-(\n        this.onDownload = () => {\n            let { draftsource } = this.props;\n            if (!draftsource) return;\n            let { index } = draftsource;\n            if (!index) return;\n            let content = this.state.editorState.getCurrentContent();\n            let rawcontent = Object(Draft["convertToRaw"])(content);\n            let json = JSON.stringify(rawcontent);\n            fileDownload(json, index + \'.json\');\n        };\n        this.handleKeyCommand = (command, editorState) => {\n            const newState = Draft["RichUtils"].handleKeyCommand(editorState, command);\n            if (newState) {\n                this.onEditorChange(newState);\n                return \'handled\';\n            }\n            return \'not-handled\';\n        };\n        this.toggleEdit = () => {\n            if (!this.state.editorReadonly) {\n                // switch to READONLY\n                this.setState({\n                    editorReadonly: true\n                }, () => {\n                    setTimeout(() => {\n                        this.setState({\n                            renderPluginTools: false\n                        }, () => {\n                            setTimeout(() => {\n                                this.setState({\n                                    renderEditor: false\n                                }, () => {\n                                    this.setState({\n                                        renderEditor: true\n                                    });\n                                });\n                            }); // setTimeout\n                        });\n                    }); // setTimeout\n                });\n            } else {\n                // switch to EDIT\n                this.setState({\n                    editorReadonly: false\n                }, () => {\n                    setTimeout(() => {\n                        this.setState({\n                            renderEditor: false\n                        }, () => {\n                            this.setState({\n                                renderEditor: true,\n                                renderPluginTools: true\n                            });\n                        });\n                    });\n                }); // setTimeout\n            }\n        };\n        this.actionbuttons = () => this.state.editable ? react["createElement"]("div", { style: { position: \'absolute\', top: \'-20px\', right: 0, zIndex: 5 } }, react["createElement"](FloatingActionButton_default.a, { mini: true, style: { marginRight: \'20px\', zIndex: 2 }, onClick: this.toggleEdit }, this.state.editorReadonly ? react["createElement"](mode_edit_default.a, null) : react["createElement"](done_default.a, null)), react["createElement"](FloatingActionButton_default.a, { mini: true, style: { marginRight: \'20px\', zIndex: 2 }, onClick: this.onDownload }, react["createElement"](file_download_default.a, null))) : null;\n        this.editorcontrols = () => {\n            let AlignmentTool = this.AlignmentTool;\n            let Toolbar = this.Toolbar;\n            return [this.state.renderPluginTools ? react["createElement"](AlignmentTool, { key: "alignment" }) : null, react["createElement"]("div", { key: "clear", style: { clear: "both" } }), this.state.renderPluginTools ? react["createElement"](Toolbar, { key: "toolbar" }) : null];\n        };\n        this.imagecontrol = () => this.state.renderPluginTools ? react["createElement"](imageadd_view_ImageAdd, { editorState: this.state.editorState, onChange: this.onEditorChange, modifier: this.pluginOptions.imagePlugin.addImage }) : null;\n        let { draftdata } = this.props;\n        let startstate;\n        if (!draftdata || !Object.keys(draftdata).length) {\n            startstate = Draft["EditorState"].createEmpty();\n        } else {\n            startstate = Draft["EditorState"].createWithContent(Object(Draft["convertFromRaw"])(draftdata));\n        }\n        this.state = {\n            editable: window.location.hostname == \'budgetpedia\',\n            editorState: startstate,\n            editorReadonly: true,\n            renderPluginTools: false,\n            renderEditor: true\n        };\n        this.assemblePlugins();\n    }\n    render() {\n        const blockRenderMap = Draft["DefaultDraftBlockRenderMap"].merge(immutable["Map"]({\n            \'header-one\': {\n                element: \'div\',\n                wrapper: react["createElement"](HeaderWrapper, null)\n            },\n            \'header-two\': {\n                element: \'div\',\n                wrapper: react["createElement"](HeaderWrapper, null)\n            },\n            \'header-three\': {\n                element: \'div\',\n                wrapper: react["createElement"](HeaderWrapper, null)\n            },\n            \'header-four\': {\n                element: \'div\',\n                wrapper: react["createElement"](HeaderWrapper, null)\n            }\n        }));\n        let styles = {\n            outderdiv: { backgroundColor: \'#d9d9d9\', margin: \'16px\' },\n            innerdiv: { padding: \'16px\', position: "relative" }\n        };\n        return react["createElement"]("article", { style: styles.outderdiv }, react["createElement"](Paper_default.a, { zDepth: 3, style: {\n                boxShadow: \'rgba(0, 0, 0, 0.4) 0px 10px 30px, rgba(0, 0, 0, 0.4) 0px 6px 10px\',\n                borderRadius: \'8px\'\n            } }, react["createElement"]("div", { style: styles.innerdiv, onClick: this.focus }, this.actionbuttons(), this.state.renderEditor ? react["createElement"](draft_js_plugins_editor_lib_default.a, { editorState: this.state.editorState, onChange: this.onEditorChange, plugins: this.plugins, readOnly: this.state.editorReadonly, handleKeyCommand: this.handleKeyCommand, blockRenderMap: blockRenderMap, ref: element => {\n                this.editor = element;\n            } }) : null, this.editorcontrols()), this.imagecontrol()));\n    }\n}\n/* harmony default export */ var sheet_view = (sheet_view_SheetView);\n// CONCATENATED MODULE: ./ts/core/control/paper.controller.tsx\n// paper.controller.tsx\n// copyright (c) 2017 Henrik Bechmann, Toronto, MIT Licence\n\n\n\n\n\n\n\n\nclass paper_controller_PaperControllerClass extends react["Component"] {\n    constructor(props) {\n        super(props);\n        this.state = {\n            model: null\n        };\n        this.toolkit = null;\n        this.emitLocalComponent = (component, key) => {\n            let { controller, index, wrapper, type, properties, children } = component;\n            let childcomponents = this.toolkit.getChildren(this, children);\n            if (childcomponents) {\n                childcomponents = [...childcomponents]; // work with copy; anticipate change below\n            }\n            let componentType = null;\n            switch (type) {\n                case \'paper\':\n                    {\n                        componentType = paper_view;\n                        break;\n                    }\n                case \'markupblock\':\n                    {\n                        componentType = markupblock_view;\n                        break;\n                    }\n                case \'sheet\':\n                    {\n                        let { lookups } = component;\n                        if (lookups && lookups.draftdata) {\n                            properties.draftsource = lookups.draftdata;\n                        }\n                        componentType = sheet_view;\n                        break;\n                    }\n                default:\n                    {\n                        return react["createElement"]("div", { key: key }, "Component type ", type, " not found in ", controller, " controller");\n                    }\n            }\n            properties.key = key;\n            let output = react["createElement"](componentType, properties, childcomponents);\n            output = this.toolkit.wrapComponent(output, wrapper, key);\n            return output;\n        };\n        this.emitComponent = (model, key) => {\n            let { controller } = model;\n            switch (controller) {\n                case \'paper\':\n                    {\n                        return this.emitLocalComponent(model, key);\n                    }\n                case \'list\':\n                    {\n                        return react["createElement"](list_controller, { key: key, model: model });\n                    }\n                default:\n                    {\n                        let { description } = model;\n                        return react["createElement"]("div", { key: \'default\' + key }, `${controller} (${description}) not found`);\n                    }\n            }\n        };\n        this.toolkit = props.toolkit;\n    }\n    componentDidMount() {\n        let { model } = this.props;\n        this.toolkit.setStateModel(this, model);\n    }\n    render() {\n        let { model } = this.state;\n        if (!model) return react["createElement"]("div", null);\n        let component = this.emitComponent(model, model.index);\n        return component;\n    }\n}\nlet PaperController = core_controller_composer(paper_controller_PaperControllerClass);\n/* harmony default export */ var paper_controller = (PaperController);\n// EXTERNAL MODULE: ./node_modules/react-twitter-widgets/dist/index.js\nvar dist = __webpack_require__(494);\n\n// CONCATENATED MODULE: ./ts/core/control/media.controller.tsx\n// media.controller.tsx\n// copyright (c) 2017 Henrik Bechmann, Toronto, MIT Licence\n\n\n\n\n\nclass media_controller_MediaControllerClass extends react["Component"] {\n    constructor(props) {\n        super(props);\n        this.state = {\n            model: null\n        };\n        this.toolkit = null;\n        this.emitLocalComponent = (component, key) => {\n            let { controller, index, wrapper, type, properties, children } = component;\n            let childcomponents = this.toolkit.getChildren(this, children);\n            let componentType = null;\n            switch (type) {\n                case \'timeline\':\n                    {\n                        componentType = dist["Timeline"];\n                        break;\n                    }\n                default:\n                    {\n                        return react["createElement"]("div", { key: key }, "Component type ", type, " not found in ", controller, " controller");\n                    }\n            }\n            properties.key = key;\n            let output = react["createElement"](componentType, properties, childcomponents);\n            output = this.toolkit.wrapComponent(output, wrapper, key);\n            return output;\n        };\n        this.emitComponent = (model, key) => {\n            let { controller } = model;\n            switch (controller) {\n                case \'media\':\n                    {\n                        return this.emitLocalComponent(model, key);\n                    }\n                default:\n                    {\n                        let { description } = model;\n                        return react["createElement"]("div", { key: \'default\' + key }, `${controller} (${description}) not found in Media processor`);\n                    }\n            }\n        };\n        this.toolkit = props.toolkit;\n    }\n    componentDidMount() {\n        let { model } = this.props;\n        this.toolkit.setStateModel(this, model);\n    }\n    render() {\n        let { model } = this.state;\n        if (!model) return react["createElement"]("div", null);\n        let component = this.emitComponent(model, model.index);\n        return component;\n    }\n}\nlet MediaController = core_controller_composer(media_controller_MediaControllerClass);\n/* harmony default export */ var media_controller = (MediaController);\n// CONCATENATED MODULE: ./ts/core/control/custom.controller.tsx\n// custom.controller.tsx\n// copyright (c) 2017 Henrik Bechmann, Toronto, MIT Licence\n\n\n\nlet CustomController = props => react["createElement"]("div", null, "Custom");\n/* harmony default export */ var custom_controller = (CustomController);\n// CONCATENATED MODULE: ./ts/core/control/views/hashanchorheader.view.tsx\n// hashanchorheader.view.tsx\n// copyright (c) 2018 Henrik Bechmann, Toronto, MIT Licence\n\n\n\n\nconst hashanchorheader_view_removeMd = __webpack_require__(190);\nvar hashanchorheader_view_stringUtils = __webpack_require__(111);\nlet HashAnchorHeader = ({ tag, title }) => {\n    let props = {\n        className: \'content-header\',\n        style: {\n            position: \'relative\',\n            paddingLeft: \'16px\',\n            marginLeft: \'-16px\'\n        }\n    };\n    let titletext = hashanchorheader_view_removeMd(title);\n    let slug = hashanchorheader_view_stringUtils(titletext).slugify().s;\n    let titlenode = react["createElement"](markupline_view, { key: "title", markup: title });\n    let permalink = react["createElement"]("a", { key: "permalink", className: "header-anchor markup-anchor", href: "#" + slug, "aria-hidden": "true" }, "\\uD83D\\uDD17");\n    let hashtarget = react["createElement"]("a", { key: "hashtarget", className: "target-anchor hash-anchor", id: slug, "data-text": titletext, "data-level": tag, "aria-hidden": "true" });\n    let children = [titlenode, permalink, hashtarget];\n    return react["createElement"](tag, props, children);\n};\n/* harmony default export */ var hashanchorheader_view = (HashAnchorHeader);\n// CONCATENATED MODULE: ./ts/core/control/views/toc.view.tsx\n// paper.view.tsx\n// copyright (c) 2018 Henrik Bechmann, Toronto, MIT Licence\n\n\n\n// import { HashLink as Link } from \'react-router-hash-link\'\n\n\nlet paddingMap = {\n    h1: 3,\n    h2: 16,\n    h3: 32,\n    h4: 48\n};\nlet levelMap = {\n    h1: 1,\n    h2: 2,\n    h3: 3,\n    h4: 4\n};\n// <a href={window.location.pathname + \'#\' + item.slug}>\n//      {indexnumber + \' \' + item.text}\n//  </a>\nlet ToCView = ({ tocdata }) => {\n    let styles = {\n        outderdiv: { backgroundColor: \'#d9d9d9\', margin: \'16px\' },\n        innerdiv: { padding: \'16px\', position: "relative" }\n    };\n    let toc = [];\n    let numbering = [0];\n    if (tocdata) {\n        toc = tocdata.map((item, index) => {\n            let { tag } = item;\n            let level = levelMap[tag];\n            numbering.splice(level);\n            numbering[level - 1] = numbering[level - 1] ? numbering[level - 1] + 1 : 1;\n            let indexnumber = \'\';\n            for (let i = 0; i < level; i++) {\n                indexnumber += numbering[i] || 1;\n                indexnumber += \'.\';\n            }\n            let paddingLeft = paddingMap[tag] + \'px\';\n            let marginTop;\n            let backgroundColor;\n            if (level == 1) {\n                backgroundColor = \'#d9d9d9\';\n            } else {\n                backgroundColor = \'transparent\';\n            }\n            if (level == 1 && index > 0) {\n                marginTop = \'8px\';\n            } else {\n                marginTop = \'0px\';\n            }\n            return react["createElement"]("div", { key: index, style: {\n                    borderRadius: \'6px\',\n                    paddingLeft,\n                    marginTop,\n                    backgroundColor\n                } }, react["createElement"]("a", { href: \'#\' + item.slug }, indexnumber + \' \' + item.text));\n        });\n    }\n    return react["createElement"]("nav", { style: styles.outderdiv }, react["createElement"](Paper_default.a, { zDepth: 3, style: {\n            boxShadow: \'rgba(0, 0, 0, 0.4) 0px 10px 30px, rgba(0, 0, 0, 0.4) 0px 6px 10px\',\n            borderRadius: \'8px\'\n        } }, react["createElement"]("div", { style: styles.innerdiv }, react["createElement"](hashanchorheader_view, { title: \'Page Contents\', tag: \'h2\' }), react["createElement"]("div", { style: { columns: \'2 300px\' } }, toc), react["createElement"]("div", { style: { clear: \'both\' } }))));\n};\n/* harmony default export */ var toc_view = (ToCView);\n// CONCATENATED MODULE: ./ts/core/control/views/section.view.tsx\n// section.view.tsx\n// copyright (c) 2017 Henrik Bechmann, Toronto, MIT Licence\n/*\n    TODO: upgrade to component; use markdown for title/description\n*/\n\n\n\n\n\nlet SectionView = props => {\n    let { title, description, children, style, id } = props;\n    let defaultstyle = {\n        maxWidth: \'800px\',\n        paddingBottom: \'8px\',\n        margin: \'0 auto 12px auto\',\n        paddingBotton: \'1px\',\n        backgroundColor: \'#d9d9d9\'\n    };\n    return react["createElement"]("section", { id: id, style: Object.assign({}, defaultstyle, style) }, title ? react["createElement"]("header", { style: { backgroundColor: "#d9d9d9", padding: "0px 16px 1px", borderTop: "4px solid silver" } }, react["createElement"](hashanchorheader_view, { tag: \'h1\', title: title }), description ? react["createElement"](markupblock_view, { markup: description }) : null) : null, react["createElement"]("main", null, children));\n};\n/* harmony default export */ var section_view = (SectionView);\n// CONCATENATED MODULE: ./ts/core/control/section.controller.tsx\n// section.controller.tsx\n// copyright (c) 2017 Henrik Bechmann, Toronto, MIT Licence\n\n\n\n\n\n\n// legal components\n\n\n\n\n\n\n\nclass section_controller_SectionControllerClass extends react["Component"] {\n    constructor(props) {\n        super(props);\n        this.state = {\n            model: null\n        };\n        this.toolkit = null;\n        this.emitLocalComponent = (component, key) => {\n            let { controller, index, anchor, type, properties, children } = component;\n            let childcomponents = this.toolkit.getChildren(this, children);\n            let componentType = null;\n            switch (type) {\n                case \'toc\':\n                    {\n                        if (this.props.noToc) return null; //<div key = {index}></div>\n                        return react["createElement"](toc_view, { key: index, tocdata: this.props.getToC() });\n                    }\n                case \'section\':\n                    {\n                        properties.id = anchor;\n                        componentType = section_view;\n                        break;\n                    }\n                default:\n                    {\n                        return react["createElement"]("div", { key: key }, "Component type ", type, " not found in ", controller, " controller");\n                    }\n            }\n            properties.key = key;\n            let output = react["createElement"](componentType, properties, childcomponents);\n            return output;\n        };\n        this.assembleCommentary = commentary => {\n            let comments = {};\n            for (let index in commentary) {\n                let spec = index.split(\':\');\n                let controller = spec[0];\n                let narrative_index = spec[1];\n                if (!comments[controller]) {\n                    comments[controller] = {};\n                }\n                comments[controller][narrative_index] = commentary[index];\n            }\n            return comments;\n        };\n        this.narratives = null;\n        this.followups = null;\n        this.emitComponent = (model, key) => {\n            let { controller, index, narrative, followup } = model;\n            let controllerclass = null;\n            switch (controller) {\n                case \'section\':\n                    {\n                        let narratives = {};\n                        if (narrative) {\n                            narratives = this.assembleCommentary(narrative);\n                        }\n                        this.narratives = narratives;\n                        let followups = {};\n                        if (followup) {\n                            followups = this.assembleCommentary(followup);\n                        }\n                        this.followups = followups;\n                        let output = this.emitLocalComponent(model, key);\n                        return output;\n                    }\n                case \'card\':\n                    {\n                        controllerclass = react["createElement"](card_controller, { key: key, model: model });\n                        break;\n                    }\n                case \'list\':\n                    {\n                        controllerclass = react["createElement"](list_controller, { key: key, model: model });\n                        break;\n                    }\n                case \'media\':\n                    {\n                        controllerclass = react["createElement"](media_controller, { key: key, model: model });\n                        break;\n                    }\n                case \'paper\':\n                    {\n                        controllerclass = react["createElement"](paper_controller, { key: key, model: model });\n                        break;\n                    }\n                case \'custom\':\n                    {\n                        controllerclass = react["createElement"](custom_controller, { key: key, model: model });\n                        break;\n                    }\n                default:\n                    {\n                        let { description, index } = model;\n                        return react["createElement"]("div", { key: \'default\' + key }, `${controller} (${index}:${description}) not found in Section controller`);\n                    }\n            }\n            let output = null;\n            let narratives = this.narratives;\n            let followups = this.followups;\n            let isNarratives = narratives && narratives[controller] && narratives[controller][index];\n            let isFollowups = followups && followups[controller] && followups[controller][index];\n            if (isNarratives || isFollowups) {\n                output = react["createElement"]("div", { key: key }, isNarratives ? react["createElement"](narrationbubble_view, { markup: narratives[controller][index] }) : null, controllerclass, isFollowups ? react["createElement"](followupbubble_view, { markup: followups[controller][index] }) : null);\n            } else {\n                output = controllerclass;\n            }\n            return output;\n        };\n        this.toolkit = props.toolkit;\n    }\n    componentDidMount() {\n        let { model } = this.props;\n        this.toolkit.setStateModel(this, model);\n    }\n    render() {\n        let { model } = this.state;\n        if (!model) return react["createElement"](section_view, null);\n        let component = this.emitComponent(model, model.index);\n        return component;\n    }\n}\nlet SectionController = core_controller_composer(section_controller_SectionControllerClass);\n/* harmony default export */ var section_controller = (SectionController);\n// EXTERNAL MODULE: ./node_modules/react-helmet/lib/Helmet.js\nvar Helmet = __webpack_require__(493);\nvar Helmet_default = /*#__PURE__*/__webpack_require__.n(Helmet);\n\n// CONCATENATED MODULE: ./ts/core/control/views/page.view.tsx\n// page.view.tsx\n// copyright (c) 2017 Henrik Bechmann, Toronto, MIT Licence\n\n\n\n\nlet PageView = props => {\n    return react["createElement"]("div", null, props.title ? react["createElement"](Helmet_default.a, null, react["createElement"]("title", null, props.title), props.description ? react["createElement"]("meta", { name: "description", content: props.description }) : null) : null, props.children);\n};\n/* harmony default export */ var page_view = (PageView);\n// CONCATENATED MODULE: ./ts/core/control/views/pagemenu.view.tsx\n// pagemenu.controller.tsx\n// copyright (c) 2017 Henrik Bechmann, Toronto, MIT Licence\n\n\n\n\nclass pagemenu_view_PageMenuController extends react["Component"] {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            scroller: null\n        };\n        this.scroller = null;\n    }\n    componentDidMount() {\n        this.setState({\n            scroller: this.scroller\n        });\n    }\n    render() {\n        return react["createElement"]("nav", { style: {\n                position: "fixed",\n                height: "38px",\n                borderTop: \'3px ridge silver\',\n                backgroundColor: "#336797",\n                bottom: 0,\n                left: 0,\n                right: 0,\n                zIndex: 30\n            } }, react["createElement"](scrollcontrols_view, { scroller: this.state.scroller }, react["createElement"]("div", { style: {\n                display: \'flex\',\n                flexWrap: \'nowrap\',\n                overflow: "scroll"\n            }, ref: el => {\n                this.scroller = el;\n            } }, this.props.children)));\n    }\n}\n/* harmony default export */ var pagemenu_view = (pagemenu_view_PageMenuController);\n// CONCATENATED MODULE: ./ts/core/control/views/attribution.view.tsx\n// attribution.view.tsx\n// copyright (c) 2017 Henrik Bechmann, Toronto, MIT Licence\n\n\n\n\nlet attribution_view_moment = __webpack_require__(2);\nlet Attributions = ({ name, link }) => {\n    let content = null;\n    if (link) {\n        if (link.substr(0, 1) == \'/\') {\n            content = react["createElement"](react_router_dom_es["a" /* Link */], { to: link }, name);\n        } else {\n            content = react["createElement"]("a", { href: link, target: \'_blank\' }, name);\n        }\n    } else {\n        content = react["createElement"]("span", null, name);\n    }\n    return react["createElement"]("div", { style: { display: \'inline-block\' } }, content, ".\\u00A0");\n};\nlet AttributionView = ({ attribution }) => {\n    if (!attribution) return null;\n    let { custodian, authority, creator, updater, contact, dates } = attribution;\n    if (!(custodian || authority || creator || updater || contact || dates)) return null;\n    return react["createElement"]("div", { style: {\n            padding: \'8px\',\n            margin: \'8px\',\n            borderRadius: \'8px\',\n            border: \'3px solid silver\',\n            backgroundColor: \'gainsboro\',\n            fontSize: \'smaller\'\n        } }, react["createElement"]("span", null, "For this page: "), contact ? [react["createElement"]("span", { key: "prompt" }, "Please forward comments, questions, or corrections to "), react["createElement"](Attributions, { key: "attr", name: contact.name, link: contact.link })] : null, custodian ? [react["createElement"]("span", { key: "prompt" }, "Custodian: "), react["createElement"](Attributions, { key: "attr", name: custodian.name, link: custodian.link })] : null, authority ? [react["createElement"]("span", { key: "prompt" }, "Authority: "), react["createElement"](Attributions, { key: "attr", name: authority.name, link: authority.link })] : null, creator ? [react["createElement"]("span", { key: "prompt" }, "Authority: "), react["createElement"](Attributions, { key: "attr", name: creator.name, link: creator.link })] : null, updater ? [react["createElement"]("span", { key: "prompt" }, "Last updated by: "), react["createElement"](Attributions, { key: "attr", name: updater.name, link: updater.link })] : null, dates ? [dates.created ? react["createElement"]("span", { key: "prompt1" }, "Created: ", attribution_view_moment(dates.created, \'DD-MM-YYYY\').format(\'LL\'), ". ") : null, dates.updated ? react["createElement"]("span", { key: "prompt2" }, "Updated: ", attribution_view_moment(dates.updated, \'DD-MM-YYYY\').format(\'LL\'), ". ") : null] : null);\n};\n/* harmony default export */ var attribution_view = (AttributionView);\n// CONCATENATED MODULE: ./ts/core/control/page.controller.tsx\n// page.controller.tsx\n// copyright (c) 2017 Henrik Bechmann, Toronto, MIT Licence\n\n\n\n\n\nlet page_controller_moment = __webpack_require__(2);\nvar scrollToElement = __webpack_require__(909);\n\n\n\n\n\nclass page_controller_PageControllerClass extends react["Component"] {\n    constructor(props) {\n        super(props);\n        this.state = {\n            model: null,\n            tocdata: null\n        };\n        this.toolkit = null;\n        this.noToc = null;\n        this.anchorCallback = () => {\n            let self = this;\n            if (self.noToc) return;\n            let tocdata = [];\n            setTimeout(() => {\n                let anchors = document.querySelectorAll(\'a.hash-anchor\');\n                anchors.forEach(element => {\n                    let item = {\n                        tag: element.getAttribute(\'data-level\'),\n                        slug: element.getAttribute(\'id\'),\n                        text: element.getAttribute(\'data-text\')\n                    };\n                    tocdata.push(item);\n                });\n                self.setState({\n                    tocdata\n                });\n            });\n        };\n        this.onClickChip = index => {\n            scrollToElement(\'#\' + index, { offset: -64 }); // space for global toolbar\n        };\n        this.assembleChips = children => {\n            let chips = children.map((child, index) => {\n                if (child.tag) {\n                    return react["createElement"](Chip_default.a, { key: index, onClick: () => this.onClickChip(child.anchor), style: { margin: \'4px\' } }, child.tag);\n                } else {\n                    return null;\n                }\n            });\n            chips = chips.filter(chip => {\n                return !!chip;\n            });\n            return chips;\n        };\n        this.emitLocalComponent = (component, key) => {\n            let { controller, index, type, properties, children } = component;\n            let childcomponents = this.toolkit.getChildren(this, children);\n            let componentType = null;\n            switch (type) {\n                case \'page\':\n                    {\n                        let chips = this.assembleChips(children);\n                        let { attribution } = component;\n                        let attributionview = react["createElement"](attribution_view, { key: "attribution", attribution: attribution });\n                        if (chips.length || attributionview) {\n                            let chipsheader = null;\n                            let chipsfooter = null;\n                            if (chips.length) {\n                                chipsheader = react["createElement"](pagemenu_view, { key: "menu" }, chips);\n                                chipsfooter = react["createElement"]("div", { key: "filler", style: { height: \'38px\' } });\n                            }\n                            childcomponents = [chipsheader, ...childcomponents, attributionview, chipsfooter];\n                        }\n                        componentType = page_view;\n                        break;\n                    }\n                default:\n                    {\n                        return react["createElement"]("div", { key: key }, "Illegal component type ", type, " of ", controller, " controller");\n                    }\n            }\n            let output = react["createElement"](componentType, properties, childcomponents);\n            return output;\n        };\n        this.getToC = () => {\n            return this.state.tocdata;\n        };\n        this.emitComponent = (model, key) => {\n            let { controller, description } = model;\n            switch (controller) {\n                case \'page\':\n                    {\n                        return this.emitLocalComponent(model, key);\n                    }\n                case \'section\':\n                    {\n                        return react["createElement"](section_controller, { key: key, model: model, noToc: !!this.noToc, getToC: this.getToC, isToC: !!this.state.tocdata });\n                    }\n                default:\n                    {\n                        let { index, description } = model;\n                        return react["createElement"]("div", { key: \'default\' + key }, `illegal controller ${controller} (${index}:${description}) of PageController`);\n                    }\n            }\n        };\n        this.toolkit = props.toolkit;\n    }\n    componentDidMount() {\n        return tslib_es6["__awaiter"](this, void 0, void 0, function* () {\n            // console.log(\'page did mount props\',this.props)\n            try {\n                let { match: { path } } = this.props;\n                let { master } = this.toolkit;\n                let index = yield master.getPageIndex(path);\n                let model = master.getPageModel(index);\n                this.noToc = model.noToc;\n                this.toolkit.setStateModel(this, model, this.anchorCallback);\n                // setTimeout(() => {\n                //     console.log(\'model\',this.state.model)\n                // })\n            } catch (e) {\n                console.log(\'error getting model\', e);\n            }\n        });\n    }\n    render() {\n        let { model } = this.state;\n        if (!model) return react["createElement"](page_view, null);\n        let component = this.emitComponent(model, model.index);\n        return component;\n    }\n}\nlet PageController = core_controller_composer(page_controller_PageControllerClass);\n/* harmony default export */ var page_controller = (PageController);\n// CONCATENATED MODULE: ./ts/legacy/nomatch.tsx\n// tribes.tsx\n// required by bundler\n\nvar { Component } = react;\nclass nomatch_NoMatch extends Component {\n    render() {\n        return react["createElement"]("div", { style: { color: \'cornsilk\' } }, "Sorry... we don\'t have a page that matches that url");\n    }\n}\n/* harmony default export */ var nomatch = (nomatch_NoMatch);\n// CONCATENATED MODULE: ./ts/addons/pages/about.tsx\n// about.tsx\n\n\nvar { Component: about_Component } = react;\nclass about_About extends about_Component {\n    render() {\n        return react["createElement"]("div", null, react["createElement"](Card["Card"], { initiallyExpanded: true }, react["createElement"](Card["CardTitle"], { title: "About Us", actAsExpander: true, showExpandableButton: true }), react["createElement"](Card["CardText"], { expandable: true }, "For a list of our teams and some of the people involved, see ", react["createElement"]("a", { href: "./teams" }, "Our Teams"), "."), react["createElement"](Card["CardText"], null, "For some more background, see the ", react["createElement"]("a", { target: "_blank", href: "https://docs.google.com/presentation/d/1xZyJ6_wk4M6XP8DgrzyNi8oBvzvmzQyV6K23J0OwvZY" }, "slide deck"), " that was used for out launch Nov 29, 2016, or the ", react["createElement"]("a", { target: "_blank", href: "https://www.youtube.com/watch?v=Wd7-g9ox-90" }, "video"), " of that presentation.")), react["createElement"](Card["Card"], { initiallyExpanded: true }, react["createElement"](Card["CardTitle"], { title: "1. The Start", actAsExpander: true, showExpandableButton: true }), react["createElement"](Card["CardText"], { expandable: true }, react["createElement"]("p", null, "The founding mission of the budgetpedia.ca project is to make the Toronto budget more accessible to the people of Toronto, by supporting informed debate about the budget."), react["createElement"]("p", null, "The project was fostered by ", react["createElement"]("a", { target: "_blank", href: "http://civictech.ca/" }, "Civic Tech Toronto"), ", as part of its weekly ", react["createElement"]("a", { target: "_blank", href: "https://en.wikipedia.org/wiki/Civic_technology" }, "hacknights"), ", beginning in July of 2015. Several people from ", react["createElement"]("a", { target: "_blank", href: "http://www.betterbudget.ca/" }, "betterbudget.ca"), ", and others, were convened weekly by ", react["createElement"]("a", { target: "_blank", href: "https://www.linkedin.com/in/henrikbechmann" }, "Henrik Bechmann"), ", a software developer and occasional civic activist who had an interest in city budgets. After 16 of these meetings, much more volunteer input, and a formal workshop, a series of guiding principles for the project emerged. These included"), react["createElement"]("ul", null, react["createElement"]("li", null, "use of clear terminology (clarity)"), react["createElement"]("li", null, "availability of full context"), react["createElement"]("li", null, "support for collaboration"), react["createElement"]("li", null, "ability to influence budget process")))), react["createElement"](Card["Card"], null, react["createElement"](Card["CardTitle"], { title: "2. Development", actAsExpander: true, showExpandableButton: true }), react["createElement"](Card["CardText"], { expandable: true }, react["createElement"]("p", null, "Based on this, some plans were laid, and in December 2015 budgetpedia.ca became an open source software project. Henrik ended up doing almost all of the coding so far, but many people, over 60, contributed content, design, guidance, data assembly, research, and all kinds of support."), react["createElement"]("p", null, "Now Budgetpedia.ca as a project has a lot of assets, including"), react["createElement"]("ul", null, react["createElement"]("li", null, "extensive ", react["createElement"]("a", { target: "_blank", href: "https://drive.google.com/open?id=1wWpF1HU-YFKFJoZmqlvNx9xDnRHer12XoGS0QR6W198" }, "repositories"), " of notes and code"), react["createElement"]("li", null, "an ever growing set of datasets"), react["createElement"]("li", null, "this website"), react["createElement"]("li", null, "a collection of social media assets"), react["createElement"]("li", null, "a very cool network of friends")), react["createElement"]("p", null, "We learned some basic lessons:"), react["createElement"]("ul", null, react["createElement"]("li", null, "for the core data, we\'re in the world of ", react["createElement"]("a", { target: "_blank", href: "https://en.wikipedia.org/wiki/Analytics" }, "analytics")), react["createElement"]("li", null, "people want granular data details - geolocated City \'cost centre\' data"), react["createElement"]("li", null, "The data has to be there, but the narrative is more important than the data")), react["createElement"]("p", null, "Lots of people have an interest in city budgets, including"), react["createElement"]("ul", null, react["createElement"]("li", null, "Curious citizens"), react["createElement"]("li", null, "Civil society organizations"), react["createElement"]("li", null, "Concerned citizens"), react["createElement"]("li", null, "City councillors"), react["createElement"]("li", null, "Neighbourhood groups"), react["createElement"]("li", null, "Councillor staff"), react["createElement"]("li", null, react["createElement"]("strong", null, react["createElement"]("em", null, "Motivated activists"))), react["createElement"]("li", null, "City staff"), react["createElement"]("li", null, "Students"), react["createElement"]("li", null, "Businesses"), react["createElement"]("li", null, "Educators"), react["createElement"]("li", null, "Journalists")), react["createElement"]("p", null, "The ", react["createElement"]("em", null, "motivated activist"), " is our iconic target audience"), react["createElement"]("p", null, "We all share in these goals:"), react["createElement"]("ul", null, react["createElement"]("li", null, "Confidence in government"), react["createElement"]("li", null, "Trust in government"), react["createElement"]("li", null, react["createElement"]("strong", null, react["createElement"]("em", null, "Engagement"))), react["createElement"]("li", null, "Insight"), react["createElement"]("li", null, "Information"), react["createElement"]("li", null, "Prepare for impending disruptions"), react["createElement"]("li", null, "Democracy!"), react["createElement"]("li", null, "We want to avoid dogmatic distrust of government"), react["createElement"]("li", null, react["createElement"]("strong", null, react["createElement"]("em", null, "Better outcomes"))), react["createElement"]("li", null, "Open government"), react["createElement"]("li", null, "Open data")))), react["createElement"](Card["Card"], null, react["createElement"](Card["CardTitle"], { title: "3. Community", actAsExpander: true, showExpandableButton: true }), react["createElement"](Card["CardText"], { expandable: true }, react["createElement"]("p", null, "The first version of the website (v 0.1) was released November 29, 2016. This represents a new phase."), react["createElement"]("p", null, "Now, in a sense the project belongs to everyone who uses it, or who gets involved. It\'s still a classic ", react["createElement"]("a", { target: "_blank", href: "https://en.wikipedia.org/wiki/Open-source_software_development" }, "open source"), " project, but is heading toward a ", react["createElement"]("a", { target: "_blank", href: "https://en.wikipedia.org/wiki/Civil_society" }, "civil society"), " organization. We\'re in transition."), react["createElement"]("p", null, "We have a basic platform, some basic analytics, and a scaffold for adding services that users want. More collaboration, and easier access to more detailed, contextual information around specific issues is in our future. In short greater usability for activists is our goal, based on user research, user stories, use cases, and a focus on usefulness. We\'ll get better the more the project is used."), react["createElement"]("p", null, "There are several things we can do to make these improvements:"), react["createElement"]("ul", null, react["createElement"]("li", null, "attract volunteers: writers, researchers, developers, communicators, organizers"), react["createElement"]("li", null, "collaborate with governments (coproduction)"), react["createElement"]("li", null, "get staff (developers, researchers, communications, government relations, managers)"), react["createElement"]("li", null, "get money (grants or service, to pay for the staff)"), react["createElement"]("li", null, "get more data! at a highly granular level (local, geocoded, cost-centre level, staffing with classifications - union affiliations, work classifications, permanent/temp)"), react["createElement"]("li", null, "expand into providing information on capital budgets (!)"), react["createElement"]("li", null, "expand our scope (more governments)")), react["createElement"]("p", null, "We might even try to morph into something like the ", react["createElement"]("em", null, "Canadian Centre for Open Budgets"), ", with four teams and an advisory board:"), react["createElement"]("ul", null, react["createElement"]("li", null, "Research Team:", react["createElement"]("ul", null, react["createElement"]("li", null, "Research plan"), react["createElement"]("li", null, "Data acquisition and processing"), react["createElement"]("li", null, "Data QA"))), react["createElement"]("li", null, "Communications Team:", react["createElement"]("ul", null, react["createElement"]("li", null, "Communications plan"), react["createElement"]("li", null, "Budget literacy programs"), react["createElement"]("li", null, "Collaboration support"))), react["createElement"]("li", null, "Software Development Team:", react["createElement"]("ul", null, react["createElement"]("li", null, "Software development plan"), react["createElement"]("li", null, "Backend migration to database"), react["createElement"]("li", null, "Frontend enhancements"))), react["createElement"]("li", null, "Management Team:", react["createElement"]("ul", null, react["createElement"]("li", null, "Organizational development"), react["createElement"]("li", null, "Funding"), react["createElement"]("li", null, "Government relations"))), react["createElement"]("li", null, "Advisory Board", react["createElement"]("ul", null, react["createElement"]("li", null, "people who can offer guidance, and attract interest in the project")))), react["createElement"]("p", null, "As a final word, we\'re expanding our mandate to promote the practice of open data with governments."), react["createElement"]("p", null, "Share  your thoughts with us! ", react["createElement"]("a", { target: "_blank", href: "mailto:mail@budgetpedia.ca" }, "mail@budgetpedia.ca")))));\n    }\n}\n/* harmony default export */ var about = (about_About);\n// CONCATENATED MODULE: ./ts/addons/pages/deputations.tsx\n// tribes.tsx\n// required by bundler\n\nvar { Component: deputations_Component } = react;\nclass deputations_Deputations extends deputations_Component {\n    render() {\n        return react["createElement"]("div", null, "Deputations Page");\n    }\n}\n/* harmony default export */ var deputations = (deputations_Deputations);\n// EXTERNAL MODULE: ./node_modules/react-loadable/lib/index.js\nvar react_loadable_lib = __webpack_require__(237);\nvar react_loadable_lib_default = /*#__PURE__*/__webpack_require__.n(react_loadable_lib);\n\n// CONCATENATED MODULE: ./ts/addons/pages/communities.tsx\n// about.tsx\n// required by bundler\n\nvar { Component: communities_Component } = react;\nclass communities_Communities extends communities_Component {\n    render() {\n        return react["createElement"]("div", null, "Communities Page");\n    }\n}\n/* harmony default export */ var communities = (communities_Communities);\n// CONCATENATED MODULE: ./ts/addons/pages/socialmedia.tsx\n// tribes.tsx\n// required by bundler\n\nconst SocialMedia = () => react["createElement"]("div", null, react["createElement"]("h1", null, "Facebook"), react["createElement"]("iframe", { src: "https://www.facebook.com/plugins/page.php?href=https%3A%2F%2Fwww.facebook.com%2Fbudgetpedia%2F&tabs=timeline&width=500&height=700&small_header=false&adapt_container_width=true&hide_cover=false&show_facepile=true&appId", width: "500", height: "700", style: { border: "none", overflow: "hidden" }, scrolling: "no", allowTransparency: true }));\n/* harmony default export */ var socialmedia = (SocialMedia);\n// CONCATENATED MODULE: ./ts/addons/pages/newsletter.tsx\n// tribes.tsx\n// required by bundler\n\nvar { Component: newsletter_Component } = react;\nclass newsletter_Newsletter extends newsletter_Component {\n    render() {\n        return react["createElement"]("div", null, "Newsletter Page");\n    }\n}\n/* harmony default export */ var newsletter = (newsletter_Newsletter);\n// CONCATENATED MODULE: ./ts/addons/pages/resources.tsx\n// resources.tsx\n// required by bundler\n\nvar { Component: resources_Component } = react;\n\nlet resources_moment = __webpack_require__(2);\nlet validurl = __webpack_require__(551);\nclass resources_Resources extends resources_Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            resources: null\n        };\n        this.resourcesintro = react["createElement"]("div", null, react["createElement"](Card["Card"], null, react["createElement"](Card["CardTitle"], { title: "Budget Resources", subtitle: "A starter kit of external links" }), react["createElement"](Card["CardText"], null, "We\'ve assembled some web links to get you started. Click on a class of links below, to see details. If you find something that should be added to this list, let us know at ", react["createElement"]("a", { target: "_blank", href: "mailto:mail@budgetpedia.ca" }, "mail@budgetpedia.ca"), ".")));\n        this.lists = null;\n        this.prepareLists = () => {\n            if (!this.state.resources) return;\n            if (this.lists) return;\n            let resources = this.state.resources;\n            let sections = resources.Sections;\n            let rawlinks = resources.Data;\n            let rawlink;\n            for (rawlink of rawlinks) {\n                sections[rawlink.section].links.push(rawlink);\n            }\n            let sectionlist = [];\n            for (let sectionname in sections) {\n                sectionlist.push(sections[sectionname]);\n            }\n            sectionlist = sectionlist.sort((a, b) => {\n                return a.index - b.index;\n            });\n            this.lists = sectionlist;\n        };\n        this.getSectionContent = links => {\n            let linkslist = links.map((linkdata, index) => {\n                let { title, description, link } = linkdata;\n                let displaylink;\n                if (!validurl.isUri(link)) {\n                    displaylink = null;\n                    console.log(\'invalid resource link\', linkdata);\n                } else {\n                    displaylink = link;\n                }\n                return react["createElement"]("div", { key: index, style: {\n                        border: "1px dashed silver",\n                        margin: "0 3px 8px 3px",\n                        padding: "3px",\n                        borderRadius: "8px"\n                    } }, react["createElement"]("div", null, react["createElement"]("em", null, "Title:"), " ", title), description ? react["createElement"]("div", null, react["createElement"]("em", null, "Description:"), " ", description, " ") : null, react["createElement"]("div", null, displaylink ? react["createElement"]("span", null, react["createElement"]("em", null, "See"), " ", react["createElement"]("a", { target: "_blank", href: displaylink }, "web page")) : react["createElement"]("em", null, "Link not available")));\n            });\n            return linkslist;\n        };\n        this.getSections = () => {\n            let lists = this.lists;\n            let sections = lists.map((section, index) => {\n                let content = this.getSectionContent(section.links);\n                let intro = null;\n                if (section.link || section.note) {\n                    let link = null;\n                    let note = null;\n                    if (section.link) {\n                        let isvalidurl = validurl.isUri(section.link);\n                        if (!isvalidurl) {\n                            console.log(\'invalidurl for section\', section);\n                        }\n                        link = react["createElement"]("span", null, "See ", react["createElement"]("a", { target: "_blank", href: section.link }, "website"));\n                    }\n                    if (section.note) {\n                        note = section.note + \'. \';\n                    }\n                    intro = react["createElement"](Card["CardText"], { expandable: true }, react["createElement"]("p", null, note, link));\n                }\n                return react["createElement"](Card["Card"], { key: index }, react["createElement"](Card["CardTitle"], { actAsExpander: true, showExpandableButton: true, title: section.title, subtitle: section.description || null }), intro, react["createElement"](Card["CardText"], { expandable: true }, content));\n            });\n            return sections;\n        };\n        this.getResources = () => {\n            let resources = null;\n            if (!this.lists) return resources;\n            resources = this.getSections();\n            return resources;\n        };\n    }\n    componentDidMount() {\n        fetch(\'./db/repositories/toronto/resources/resources.json\').then(response => {\n            if (response.ok) {\n                return response.json();\n            } else {\n                console.log(\'response error\', response);\n            }\n        }).then(json => {\n            this.setState({\n                resources: json\n            });\n        }).catch(error => {\n            console.log(\'error\', error);\n        });\n    }\n    render() {\n        this.prepareLists();\n        let resources = this.getResources();\n        return react["createElement"]("div", null, this.resourcesintro, resources);\n    }\n}\n/* harmony default export */ var pages_resources = (resources_Resources);\n// CONCATENATED MODULE: ./ts/addons/pages/teams.tsx\n// tribes.tsx\n// required by bundler\n\n\nvar { Component: teams_Component } = react;\n\nclass teams_Teams extends teams_Component {\n    render() {\n        return react["createElement"]("div", null, react["createElement"](Card["Card"], null, react["createElement"](Card["CardTitle"], { title: "Our Teams. Join Us! Help us Make Budgetpedia Better." }), react["createElement"](Card["CardText"], null, "Budgetpedia is a volunteer-driven project.  We\'ve gotten where we are thanks to people with a wide variety of backgrounds and expertise.  If you\'re interested in democratizing information on municipal budgets in Ontario, we\'d love to have you join us."), react["createElement"](Card["CardTitle"], { title: "Getting Involved" }), react["createElement"](Card["CardText"], null, react["createElement"]("h3", null, "Where and when"), "We have regular meetings at Civic Tech Toronto Hacknights. We\'ll be there the first Tuesday of the month (and possibly other Tuesdays as well). Never hurts to check at ", react["createElement"]("a", { target: "_blank", href: "mailto:mail@budgetpedia.ca" }, "mail@budgetpedia.ca"), " though just to make sure. Check with Civic Tech TO ", react["createElement"]("a", { target: "_blank", href: "http://www.meetup.com/Civic-Tech-Toronto/" }, "meetup"), " for locations. Or just email us your interests and we\'ll take it from there."), react["createElement"](Card["CardText"], null, react["createElement"]("h3", null, "Our Teams"), react["createElement"]("p", null, "These are the main working groups we\'ve set up. Feel free to get involved with one of them.  Or suggest something else you\'d like to do.  We\'re pretty flexible."), react["createElement"]("ul", null, react["createElement"]("li", null, react["createElement"]("strong", null, "Research"), react["createElement"]("br", null), react["createElement"]("p", null, "Like data?  Interested in sifting through municipal budgets and open data sets?  This is a key area we can use help. "), react["createElement"]("p", null, "Specific things we could use help with:"), react["createElement"]("ul", { style: { marginBottom: "16px" } }, react["createElement"]("li", null, "Research planning"), react["createElement"]("li", null, "Identifying, sifting through, and preparing muncipal data sets"), react["createElement"]("li", null, "Validating and verifying the data (QA); eventually arranging for an audit"), react["createElement"]("li", null, "Helping explain municipal budget data"), react["createElement"]("li", null, "Visualization"))), react["createElement"]("li", null, react["createElement"]("strong", null, "UX (user experience)"), react["createElement"]("p", null, "The UX team conducts user research, and develops ux designs which pleases users, and motivates them to return to our site for more.")), react["createElement"]("li", null, react["createElement"]("strong", null, "Web Development"), react["createElement"]("p", null, "Budgetpedia is an open source project, and we welcome contributions. The codebase is on ", react["createElement"]("a", { href: "https://github.com/CivicTechTO/budgetpedia-dev-frontend" }, "Github"), ". The main areas of work are:"), react["createElement"]("ul", { style: { marginBottom: "16px" } }, react["createElement"]("li", null, "Developing and maintaining a software development plan."), react["createElement"]("li", null, "Enhancing the front-end (it really needs an admin interface for example)"), react["createElement"]("li", null, "Enhancing the backend, starting with migrating the data from source files to databases; supporting login, logout, and content management")), react["createElement"]("p", null, "Technical details are as follows:"), react["createElement"]("ul", { style: { marginBottom: "16px" } }, react["createElement"]("li", null, "Main frontend components:", react["createElement"]("ul", { style: { marginBottom: "8px" } }, react["createElement"]("li", null, "typescript (language - es6 superset, strongly typed)"), react["createElement"]("li", null, "reactjs (rendering)"), react["createElement"]("li", null, "redux (model/state manager)"), react["createElement"]("li", null, "fetch (ajax)"), react["createElement"]("li", null, "material-ui for widgets, a Google Material Design implementation"))), react["createElement"]("li", null, "Main backend components (for next phase):", react["createElement"]("ul", { style: { marginBottom: "8px" } }, react["createElement"]("li", null, "nodejs environment on server"), react["createElement"]("li", null, "nginx for web server"), react["createElement"]("li", null, "hapijs for api handler"), react["createElement"]("li", null, "available databases: mariadb (relational), mongodb (aggregates), neo4j (graphs)"))))), react["createElement"]("li", null, react["createElement"]("strong", null, "Communications"), react["createElement"]("br", null), react["createElement"]("p", null, "Numbers are nice but it\'s the stories that matter to most people."), react["createElement"]("p", null, "Help us explain what\'s going on in the budget; Help spread the word about budgetpedia; Help us build partnerships with other people and organizations who care about municipal budgets."), react["createElement"]("p", null, "Some of the specific things we\'re working on include:"), react["createElement"]("ul", { style: { marginBottom: "16px" } }, react["createElement"]("li", null, "Social media communication and outreach"), react["createElement"]("li", null, "Developing budget literacy programs"), react["createElement"]("li", null, "Supporting collaboartion among users"), react["createElement"]("li", null, "Content generation: blogs, long-form prose, etc.  Pull apart the budget and show us the stories that are there.  Let your inner Nate Silver shine!"))), react["createElement"]("li", null, react["createElement"]("strong", null, "Management"), react["createElement"]("br", null), react["createElement"]("p", null, "This is the group tasked with looking after Budgetpedia\'s future."), react["createElement"]("ul", { style: { marginBottom: "16px" } }, react["createElement"]("li", null, "Developing a management plan"), react["createElement"]("li", null, "Organizational development"), react["createElement"]("li", null, "Government relations"), react["createElement"]("li", null, "Funding, including grants and possibly a service-for-fee plan"))), react["createElement"]("li", null, react["createElement"]("strong", null, "Operations"), react["createElement"]("br", null), react["createElement"]("p", null, "This group is tasked with looking after Budgetpedia\'s routine administrative operations"), react["createElement"]("ul", { style: { marginBottom: "16px" } }, react["createElement"]("li", null, "Developing an operations plan"), react["createElement"]("li", null, "Website operations"), react["createElement"]("li", null, "Repository maintenance"), react["createElement"]("li", null, "Administrative support"))), react["createElement"]("li", null, react["createElement"]("strong", null, "Advisory Group"), react["createElement"]("br", null), react["createElement"]("p", null, "We\'re working on organizing an advisory group to help guide the project, and develop connections among user groups.")))), react["createElement"](Card["CardText"], null, react["createElement"]("h3", null, "People"), react["createElement"]("p", null, "These are just a few of the people involved in Budgetpedia (alphabetical).  If you\'ve got questions, or want to know more, please reach out to one of us at ", react["createElement"]("a", { target: "_blank", href: "mailto:mail@budgetpedia.ca" }, "mail@budgetpedia.ca"), " ."), react["createElement"]("div", { style: { border: "1px solid silver", margin: "6px 3px", padding: "3px", borderRadius: "8px" } }, react["createElement"]("img", { src: "./public/avatars/donaltman.jpg", style: { borderRadius: "50%", float: "left", height: "40px", margin: "6px" } }), react["createElement"]("p", null, "Don Altman is with our advisory group, and has just retired from being the Manager of Corporate Financial Strategies at the City of Toronto."), react["createElement"]("div", { style: { clear: "left" } })), react["createElement"]("div", { style: { border: "1px solid silver", margin: "6px 3px", padding: "3px", borderRadius: "8px" } }, react["createElement"]("img", { src: "./public/avatars/HenrikHeadshotSquare.jpg", style: { borderRadius: "50%", float: "left", height: "40px", margin: "6px" } }), react["createElement"]("p", null, "Henrik Bechmann is the project lead and co-lead of our software team."), react["createElement"]("div", { style: { clear: "left" } })), react["createElement"]("div", { style: { border: "1px solid silver", margin: "6px 3px", padding: "3px", borderRadius: "8px" } }, react["createElement"]("img", { src: "./public/avatars/alexbellet.png", style: { borderRadius: "50%", float: "left", height: "40px", margin: "6px" } }), react["createElement"]("p", null, "Alexis Bellet is a web developer with a background in digital marketing and is co-lead of our communications team."), react["createElement"]("div", { style: { clear: "left" } })), react["createElement"]("div", { style: { border: "1px solid silver", margin: "6px 3px", padding: "3px", borderRadius: "8px" } }, react["createElement"]("img", { src: "./public/avatars/jeremybiden.png", style: { borderRadius: "50%", float: "left", height: "40px", margin: "6px" } }), react["createElement"]("p", null, "Jeremy Biden is a planner, lead of The Planning Clinc, owner and principal at  RIOT Urbanism, and is with our advisory group, helping us find ways to support planning efforts through budgets."), react["createElement"]("div", { style: { clear: "left" } })), react["createElement"]("div", { style: { border: "1px solid silver", margin: "6px 3px", padding: "3px", borderRadius: "8px" } }, react["createElement"]("img", { src: "./public/avatars/kejobuchanan.png", style: { borderRadius: "50%", float: "left", height: "40px", margin: "6px" } }), react["createElement"]("p", null, "Kejo Buchanan is with our advisory group, and an expert at resource and information structures and access."), react["createElement"]("div", { style: { clear: "left" } })), react["createElement"]("div", { style: { border: "1px solid silver", margin: "6px 3px", padding: "3px", borderRadius: "8px" } }, react["createElement"]("img", { src: "./public/avatars/rafichaudhury.png", style: { borderRadius: "50%", float: "left", height: "40px", margin: "6px" } }), react["createElement"]("p", null, "Rafi Chaudhury is co-lead of our UX group, and a specialist in project and product management."), react["createElement"]("div", { style: { clear: "left" } })), react["createElement"]("div", { style: { border: "1px solid silver", margin: "6px 3px", padding: "3px", borderRadius: "8px" } }, react["createElement"]("img", { src: "./public/avatars/chrisgraham.png", style: { borderRadius: "50%", float: "left", height: "40px", margin: "6px" } }), react["createElement"]("p", null, "Christopher Graham is our product champion, co-lead of our UX team, and is involved with research and project development."), react["createElement"]("div", { style: { clear: "left" } })), react["createElement"]("div", { style: { border: "1px solid silver", margin: "6px 3px", padding: "3px", borderRadius: "8px" } }, react["createElement"](FontIcon_default.a, { className: "material-icons", style: { borderRadius: "50%", float: "left", height: "40px", fontSize: \'40px\', margin: "6px", color: \'rgba(0,0,0,0.4)\' } }, "person"), react["createElement"]("p", null, "Arthur Gron is a writer, our blogger-in-chief and co-lead of our communications team."), react["createElement"]("div", { style: { clear: "left" } })), react["createElement"]("div", { style: { border: "1px solid silver", margin: "6px 3px", padding: "3px", borderRadius: "8px" } }, react["createElement"]("img", { src: "./public/avatars/meghanhellstern.jpg", style: { borderRadius: "50%", float: "left", height: "40px", margin: "6px" } }), react["createElement"]("p", null, "Meghan Hellstern is a human-centered designer and communicator, and is a member of our advisory group helping with organizational development."), react["createElement"]("div", { style: { clear: "left" } })), react["createElement"]("div", { style: { border: "1px solid silver", margin: "6px 3px", padding: "3px", borderRadius: "8px" } }, react["createElement"]("img", { src: "./public/avatars/robertjarvis.jpg", style: { borderRadius: "50%", float: "left", height: "40px", margin: "6px" } }), react["createElement"]("p", null, "Robert Jarvis has a background in international management and is co-lead of our management team."), react["createElement"]("div", { style: { clear: "left" } })), react["createElement"]("div", { style: { border: "1px solid silver", margin: "6px 3px", padding: "3px", borderRadius: "8px" } }, react["createElement"]("img", { src: "./public/avatars/amadoukebe.png", style: { borderRadius: "50%", float: "left", height: "40px", margin: "6px" } }), react["createElement"]("p", null, "Amadou Kebe is a policy and communications advisor and is co-lead of our communications team."), react["createElement"]("div", { style: { clear: "left" } })), react["createElement"]("div", { style: { border: "1px solid silver", margin: "6px 3px", padding: "3px", borderRadius: "8px" } }, react["createElement"]("img", { src: "./public/avatars/kiramccutcheon.png", style: { borderRadius: "50%", float: "left", height: "40px", margin: "6px" } }), react["createElement"]("p", null, "Kira McCutcheon is involved with content development, communications, and project development, and is co-lead of our management team."), react["createElement"]("div", { style: { clear: "left" } })), react["createElement"]("div", { style: { border: "1px solid silver", margin: "6px 3px", padding: "3px", borderRadius: "8px" } }, react["createElement"](FontIcon_default.a, { className: "material-icons", style: { borderRadius: "50%", float: "left", height: "40px", fontSize: \'40px\', margin: "6px", color: \'rgba(0,0,0,0.4)\' } }, "person"), react["createElement"]("p", null, "Jim Rootham is a computer scientist, has taken on the challenge of reviewing the current codebase to prepare for the next development phase, and is co-lead of our software team."), react["createElement"]("div", { style: { clear: "left" } })), react["createElement"]("div", { style: { border: "1px solid silver", margin: "6px 3px", padding: "3px", borderRadius: "8px" } }, react["createElement"]("img", { src: "./public/avatars/asherzafar.jpg", style: { borderRadius: "50%", float: "left", height: "40px", margin: "6px" } }), react["createElement"]("p", null, "Asher Zafar is an economist, strategy and analytics professional, currently helping us with data analysis, and is with our advisory group."), react["createElement"]("div", { style: { clear: "left" } })), react["createElement"]("h3", null, "Past Helpers"), react["createElement"]("div", { style: { border: "1px solid silver", margin: "6px 3px", padding: "3px", borderRadius: "8px" } }, react["createElement"]("img", { src: "./public/avatars/lindadow.png", style: { borderRadius: "50%", float: "left", height: "40px", margin: "6px" } }), react["createElement"]("p", null, "Lindamarleny Dow was the project\'s communications lead."), react["createElement"]("div", { style: { clear: "left" } })))));\n    }\n}\n/* harmony default export */ var teams = (teams_Teams);\n// CONCATENATED MODULE: ./ts/addons/pages/stories.tsx\n// tribes.tsx\n// required by bundler\n\nvar { Component: stories_Component } = react;\nclass stories_Stories extends stories_Component {\n    render() {\n        return react["createElement"]("div", null, "Stories Page");\n    }\n}\n/* harmony default export */ var pages_stories = (stories_Stories);\n// CONCATENATED MODULE: ./ts/addons/pages/announcements.tsx\n// announements.tsx\n// required by bundler\n\n\nvar { Component: announcements_Component } = react;\nclass announcements_Announcements extends announcements_Component {\n    render() {\n        return react["createElement"]("div", null, react["createElement"](Card["Card"], null, react["createElement"](Card["CardTitle"], { title: "Budgetpedia Project Announcements" }), react["createElement"](Card["CardText"], null, react["createElement"]("h3", null, "Key Upcoming Events"), react["createElement"]("ul", { style: { marginBottom: "16px" } }, react["createElement"]("li", null, react["createElement"]("p", null, react["createElement"]("strong", null, "Regular Meetups: First Tuesday of each month 6:30-9:00 pm "), react["createElement"]("br", null), react["createElement"]("em", null, " Location:"), " ", react["createElement"]("a", { target: "_blank", href: "http://www.meetup.com/Civic-Tech-Toronto/" }, "Varies - Check the Meetup page for the next meeting")), react["createElement"]("p", null, "Additional meetings may be scheduled. This is where Budgetpedia was born and raised to its current early state. It\'s also where a lot of the brainstorming, development and creative processes happen. Anyone with an interest in this project is welcome.  No coding or technical skills required!"), react["createElement"]("p", null, "For more details, check out the ", react["createElement"]("a", { href: "./teams" }, "Teams"), " page of this website, or the ", react["createElement"]("a", { target: "_blank", href: "http://www.civictech.ca" }, "Civic Tech website home Page"), ".")))), react["createElement"](Card["CardText"], null, react["createElement"]("h3", null, "Key Past Events"), react["createElement"]("ul", { style: { marginBottom: "16px" } }, react["createElement"]("li", null, react["createElement"]("p", null, react["createElement"]("strong", null, "Saturday, April 22, 2017 gave \\"lightening\\" (5 minute) talk at  ", react["createElement"]("a", { target: "_blank", href: "http://investinginto.ca/" }, "Investing in Toronto"), " consultation"), ". See the ", react["createElement"]("a", { target: "_blank", href: "https://www.youtube.com/watch?v=xlvL_1GGCjI&feature=youtu.be&t=3821" }, "video"), " and ", react["createElement"]("a", { target: "_blank", href: "https://drive.google.com/open?id=1vmw8MGtj9fvV-tX3l53VL6Z6Jh6rruI2nUVIdeFeCIs" }, "slide deck"), "."), react["createElement"]("p", null, "Highlighted what we learned like ", react["createElement"]("em", null, "taxonomies, trends, motivations"), ".")), react["createElement"]("li", null, react["createElement"]("p", null, react["createElement"]("strong", null, "Saturday, Feb 25, 2017 gave \\"lightening\\" (10 minute) talk at  ", react["createElement"]("a", { target: "_blank", href: "http://hellocon.net/" }, "Hello Con"), " conference"), ". See the ", react["createElement"]("a", { target: "_blank", href: "https://www.youtube.com/watch?v=Pn4l9JA1ROg" }, "video"), "."), react["createElement"]("p", null, "Highlighted benefits of ", react["createElement"]("em", null, "taxonomies, careful data preparation, and reactive programming"), ". See the slide deck ", react["createElement"]("a", { target: "_blank", href: "https://drive.google.com/open?id=13tOAln9YE6DOKP_zrGiLzVpeIaZLkd3bWxoBhHj3UUg" }, "here"), ".")), react["createElement"]("li", null, react["createElement"]("p", null, react["createElement"]("strong", null, "Monday, Feb 6, 2017 honoured to give budget overview presentation to the ", react["createElement"]("a", { target: "_blank", href: "http://thetyc.ca/" }, "toronto youth cabinet"), " budget meeting at City Hall.")), react["createElement"]("p", null, "Great conversation ensued between councillors Perks, Wong-Tam, and youth cabinet. Our take: people\'s narratives need to snowball to overcome obstacles. Slide deck we used is ", react["createElement"]("a", { target: "_blank", href: "https://drive.google.com/open?id=153RdCnnAlNPGMo7_Ji-V4j_nMFczzgdHWELiyI2cYX0" }, "here"), ".")), react["createElement"]("li", null, react["createElement"]("p", null, react["createElement"]("strong", null, "Monday, January 30, 2017 Budgetpedia upgrade v0.1.2 released"), react["createElement"]("br", null), "This release adds two new features to the explorer page."), react["createElement"]("p", null, " ", react["createElement"]("em", null, "Latest analyst notes"), " provides access to the latest city capital and operating analyst notes for all divisions and agencies cited in the budget. These are available from a button at the top of the page, and also from info buttons on all budget charts."), react["createElement"]("p", null, "Secondly a ", react["createElement"]("em", null, "View"), " button beside the ", react["createElement"]("em", null, "Taxonomy"), " selection shows an hierarchical chart ( like an org chart) of the currently selected taxonomy. This allows the user to get an overview of the currently selected taxonomy. The charts are interactive, allowing the user to hide child cells by double-clicking on parent cells. This allows for focus on selected sections of the hierarchy.")), react["createElement"]("li", null, react["createElement"]("p", null, react["createElement"]("strong", null, "Monday, January 2, 2017 Budgetpedia upgrade v0.1.1 released"), react["createElement"]("br", null), "This release adds a major feature: \\"select an area of interest\\" which creates a \\"storyboard\\" of charts related to one of the main areas of budget activities, as selected by the user. This is intended to be a precursor to more configurable, narrared user storyboards in the future.")), react["createElement"]("li", null, react["createElement"]("p", null, react["createElement"]("strong", null, "Tuesday, November 29, 2016 6:30-9:00 pm Budgetpedia v0.1 Launch!"), react["createElement"]("br", null), react["createElement"]("em", null, "Location:"), " ", react["createElement"]("a", { target: "_blank", href: "https://www.meetup.com/Civic-Tech-Toronto/events/235306439/" }, "Civic Tech Toronto Meetup")), react["createElement"]("p", null, "Join us for the official launch of Budgetpedia version 0.1 at Civic Tech\'s weekly meetup. See Budgetpedia in action, gain insights into the city budget and generally celebrate our going live. See the ", react["createElement"]("a", { target: "_blank", href: "https://drive.google.com/open?id=1xZyJ6_wk4M6XP8DgrzyNi8oBvzvmzQyV6K23J0OwvZY" }, "slide deck"), " and ", react["createElement"]("a", { target: "_blank", href: "https://www.youtube.com/watch?v=Wd7-g9ox-90" }, "video"), " for the meetup."))))));\n    }\n}\n/* harmony default export */ var announcements = (announcements_Announcements);\n// CONCATENATED MODULE: ./ts/addons/pages/pathways.tsx\n// pathways.tsx\n// required by bundler\n\n\nvar { Component: pathways_Component } = react;\nclass pathways_Pathways extends pathways_Component {\n    render() {\n        return react["createElement"]("div", null, react["createElement"](Card["Card"], null, react["createElement"](Card["CardTitle"], { title: "Activist Pathways", subtitle: "How to make change" }), react["createElement"](Card["CardText"], null, react["createElement"]("p", null, "Making change is hard. Making change in government is harder. Here we want to collect stories of what\'s worked."), react["createElement"]("p", null, "The purpose of this section of the Budgetpedia website is to direct you, dear social activist, to places where you can learn what others before you, or around you, did to make positive changes in their communities, and within their governments. If you\'ve succeeded in making some changes, perhaps you could see your way to letting us link to your story so that others can learn from it. Because we love a celebration story, particularly when Toronto is the grounds for this celebration."), react["createElement"]("p", null, "We are inspired by those who want to see change, and by those who make the moves to see that through. No matter how big, or how small, dedication to a cause is motivating - and who can\'t use a push every now and then?"), react["createElement"]("p", null, "If you\'re looking for a home for your story, consider ", react["createElement"]("a", { target: "_blank", href: "http://medium.com/budgetpedia" }, "Budgetpedia\'s Medium publication"), ". You can publish your story there, and we can link it here. The only editorial criteria we have is that it be accurate, respectful, and constructive. Or if you know of a story that you think is worth sharing, then please let us know at ", react["createElement"]("a", { target: "_blank", href: "mailto:mail@budgetpedia.ca" }, "mail@budgetpedia.ca")), react["createElement"]("p", null, "For example (click to expand):"))), react["createElement"](Card["Card"], null, react["createElement"](Card["CardTitle"], { title: "Neighbourhood parks", actAsExpander: true, showExpandableButton: true }), react["createElement"](Card["CardText"], { expandable: true }, react["createElement"]("h3", null, "Jutta Mason - Community Activist at Dufferin Park"), react["createElement"]("p", null, "Who comes to mind when you think of parks and recreation? Perhap it\'s ", react["createElement"]("a", { target: "_blank", href: "https://en.wikipedia.org/wiki/Leslie_Knope" }, "Leslie Knope"), " - the plucky and endearing Deputy Director of the Pawnee City Department. Or perhaps, if you live in Toronto, this figure is Jutta Mason, the \\"urban dynamo\\" behind the Dufferin Grove Park revitalization project. "), react["createElement"]("p", null, " In her new booklet project, ", react["createElement"]("a", { target: "_blank", href: "http://www.celos.ca/wiki/uploads/CELOSBooklets/dgpcommons.pdf" }, "\\"Dufferin Grove Park as a neighborhood commons, 1993 to 2015\\""), ", Mason reflects on the Dufferin Park - the faces behind the project and it\'s trials, successes, and ways to move forward. This booklet is a realists musings on a commons project. An attempt to wrangle public space away from corporate control -  to see it shine as a space inherited and created jointly, that will (hopefully) last for generations to come (", react["createElement"]("a", { target: "_blank", href: "http://www.onthecommons.org/about-commons" }, "www.onthecommons.org/about-commons"), ")."), react["createElement"]("p", null, " From the onset of the project, Mason sets the tone for a cooperative commons, asking friends and neighbours - \\"", react["createElement"]("em", null, "what would you like to see in Dufferin Grove Park"), "\\" (Mason 2016, 1). It\'s a question that seems quite simple, but it is the simplicity, clarity and inclusive nature of this question that speak to Mason\'s broader philosophy. It asks people what they want in the effort to give it back to them."), react["createElement"]("p", null, "To make change in a bureaucracy, Mason, building on Mario Zanetti - the Director of Recreation - articulates two main principles: (1) ", react["createElement"]("em", null, "start small"), " and (2) ", react["createElement"]("em", null, "use the rules against themselves"), " (Mason 2016, 9). Its with these guiding principles that inspiration struck, guiding the \\"park kids\\" through varying manifestations of Dufferin Grove."), react["createElement"]("p", null, "This project was (and continues to be) backed by a selection of grants and gifts - large and small, from individuals to groups. Mason writes, \\"", react["createElement"]("em", null, "such gifts, when put to use by people who had ideas and wanted to test them, built sociability and surprise into the park. Money when used that way, brought freedom, including the freedom to make mistakes, confess them, and learn from them"), "\\" (Mason 2016, 48). The final line of this quote holds particularly poignant insight. Mistake are not failure - they are an opportunity to learn and grow, and are truly an inevitable part of a collaborative long term project. The Dufferin Gove Park project led by Mason is a case study in non linear growth - there are times when there was no clear solution, or a stationary status, but somehow, with the community coming together, new ways forward were achieved."), react["createElement"]("p", null, "For more information please see:"), react["createElement"]("ul", null, react["createElement"]("li", null, react["createElement"]("a", { target: "_blank", href: "http://www.celos.ca/wiki/uploads/CELOSBooklets/dgpcommons.pdf" }, "http://www.celos.ca/wiki/uploads/CELOSBooklets/dgpcommons.pdf")), react["createElement"]("li", null, react["createElement"]("a", { target: "_blank", href: "https://parkpeople.ca/archives/2073" }, "https://parkpeople.ca/archives/2073")), react["createElement"]("li", null, react["createElement"]("a", { target: "_blank", href: "http://www.ideasthatmatter.com/people/2001jutta" }, "http://www.ideasthatmatter.com/people/2001jutta")), react["createElement"]("li", null, react["createElement"]("a", { target: "_blank", href: "http://metcalffoundation.com/stories/publications/the-power-of-civic-action/" }, "Women\'s Committee of Thorncliffe Park"))))), react["createElement"](Card["Card"], null, react["createElement"](Card["CardTitle"], { title: "Citywide causes", actAsExpander: true, showExpandableButton: true }), react["createElement"](Card["CardText"], { expandable: true }, react["createElement"]("p", null, "Here are some causes that have budget components to them. Hopefully we can collectively help to support projects like this over time."), react["createElement"]("ul", null, react["createElement"]("li", null, "CASE ONE: ", react["createElement"]("a", { target: "_blank", href: "http://www.theglobeandmail.com/news/toronto/toronto-comes-to-grips-with-a-growing-all-season-pastime-cycling/article28466089/" }, "Cycling in Toronto")), react["createElement"]("li", null, "CASE TWO: ", react["createElement"]("a", { target: "_blank", href: "http://www.thespec.com/opinion-story/6919686-time-to-put-basic-income-guarantee-to-work-in-ontario/" }, "Case for Basic Income")), react["createElement"]("li", null, "CASE THREE: ", react["createElement"]("a", { target: "_blank", href: "https://www.thestar.com/news/gta/2016/02/08/toronto-budget-falls-short-of-anti-poverty-pledge-activists-say.html" }, "Anti-Poverty Pledge"), ", and see ", react["createElement"]("a", { target: "_blank", href: "https://nowtoronto.com/news/think-free-blog/ocap-descends-on-city-hall-again/" }, "here"), " as well")))));\n    }\n}\n/* harmony default export */ var pathways = (pathways_Pathways);\n// CONCATENATED MODULE: ./ts/addons/pageroutes.tsx\n// copyright (c) 2016 Henrik Bechmann, Toronto, MIT Licence\n// pageroutes.tsx\n\n\n\n\n\n\n\n// import Explorer from \'./explorer/explorer\'\n// import Communities from \'./pages/communities\'\n// import SocialMedia from \'./pages/socialmedia\'\n// import Newsletter from \'./pages/newsletter\'\n// import Resources from \'./pages/resources\'\n// import Teams from \'./pages/teams\'\n// import Stories from \'./pages/stories\'\n// import Announcements from \'./pages/announcements\'\n// import Pathways from \'./pages/pathways\'\n\nconst Loading = () => react["createElement"]("div", null, "Loading...");\nconst Explorer = react_loadable_lib_default()({\n    loader: () => Promise.all(/* import() | Explorer */[__webpack_require__.e(0), __webpack_require__.e(1)]).then(__webpack_require__.bind(null, 1290)),\n    loading: Loading\n});\n\n\n\n\n\n\n\n\nlet routedata = [{ path: "/about", component: about }, { path: "/overview", component: page_controller }, { path: "/budgets", component: page_controller }, { path: "/roadmap", component: page_controller }, { path: "/deputations", component: deputations }, { path: "/explorer", component: Explorer }, { path: "/communities", component: communities }, { path: "/socialmedia", component: socialmedia }, { path: "/newsletter", component: newsletter }, { path: "/resources", component: pages_resources }, { path: "/teams", component: teams }, { path: "/stories", component: pages_stories }, { path: "/announcements", component: announcements }, { path: "/pathways", component: pathways }];\nconst pageroutes = routedata.map((item, index) => react["createElement"](react_router_dom_es["b" /* Route */], { key: \'pageroute\' + index, path: item.path, component: item.component }));\n/* harmony default export */ var addons_pageroutes = (pageroutes);\n// CONCATENATED MODULE: ./ts/core/start/routes.controller.tsx\n// copyright (c) 2016 Henrik Bechmann, Toronto, MIT Licence\n// routes.tsx\n// assemble and manage routes\n/*\n    TODO: transition fails with redirect for forcing trailing slash\n    the goal is to force initial url to end in /# to avoid reload of page on first permalink\n*/\n\n\n\nlet { Component: routes_controller_Component } = react;\n\n\n\n// import { TransitionGroup, CSSTransition } from \'react-transition-group\';\nlet ReactGA = __webpack_require__(546);\nReactGA.initialize(\'UA-4105209-11\');\n\n\n\nlet logPageView = location => {\n    // console.log(\'hostname\',window.location)\n    if (window.location.hostname == \'budgetpedia.ca\') {\n        // console.log(\'logging\',location.pathname + location.search)\n        ReactGA.pageview(location.pathname + location.search);\n    }\n};\nlet routes_controller_routedata = [\n// { path: "/dev", component: PageController }, // must be LAST, or else will pre-empt other paths\n{ path: "*", component: nomatch }];\nlet coreroutes = routes_controller_routedata.map((item, index) => react["createElement"](react_router_dom_es["b" /* Route */], { key: \'coreroute\' + index, path: item.path, component: item.component }));\nlet routes_controller_home = react["createElement"](react_router_dom_es["b" /* Route */], { key: \'home\', exact: true, path: "/", component: page_controller }); // HomeController } />\n// let redirect = <Route key = "redirect" exact strict path="/:url*" render={props => <Redirect to={`${props.location.pathname}/`}/>} />\nlet routes_controller_routes = [routes_controller_home, ...addons_pageroutes, ...coreroutes];\nlogPageView(window.location); // first hit\nlet RoutesController = class extends routes_controller_Component {\n    constructor() {\n        super(...arguments);\n        this.historyListener = (location, action) => {\n            // console.log(\'history\',location,action)\n            logPageView(location);\n        };\n    }\n    componentWillMount() {\n        this.props.history.listen(this.historyListener);\n        // global function to deal with markdown local links\n        window[\'storybuilder_global\'] = {\n            navigateViaRouter: event => {\n                // console.log(\'navigating from storybuilder_global\')\n                let target = event.currentTarget;\n                let path = target.getAttribute(\'href\'); // limited to original \'/somepath\'\n                event.preventDefault();\n                // this.props.history.push(event.currentTarget.href) // includes protocol prefix - \'http://\'\n                this.props.history.push(path);\n                // push(path)\n            }\n        };\n    }\n    componentWillUnmount() {\n        delete window[\'storybuilder_global\'];\n    }\n    // <ConnectedRouter history = {this.props.history}>\n    // </ConnectedRouter>\n    render() {\n        let location = this.props.router.location || {};\n        return react["createElement"](react_router_redux_es["a" /* ConnectedRouter */], { history: this.props.history }, react["createElement"](react_router_dom_es["c" /* Switch */], { location: location }, routes_controller_routes));\n    }\n};\n// transitions were causing trouble, particularly with table of contents. \n// router causes page reload for first toc selection on roadmap\n// <TransitionGroup>\n//     <CSSTransition\n//         key = {location.key}\n//         classNames = "fade"\n//         timeout = {1000}\n//         appear\n//         exit = {false}\n//         onEnter = {() => {\n//             window.scrollTo(0, 0) // adapt to single page app results in arbitray page location after nav\n//         }}\n//     >\n//  ** switch controller goes here\n//     </CSSTransition>\n// </TransitionGroup>\nlet routes_controller_mapStateToProps = state => {\n    let { router } = state;\n    return {\n        router\n    };\n};\nRoutesController = Object(react_redux_es["connect"])(routes_controller_mapStateToProps)(RoutesController);\n\n// CONCATENATED MODULE: ./ts/core/start/main.view.tsx\n// copyright (c) 2016 Henrik Bechmann, Toronto, MIT Licence\n// app.tsx\n// display the app\n\n\n\n\nconst MainView = ({ globalmessage, history, style }) => react["createElement"]("div", { style: style }, react["createElement"](globalbar_controller, null), react["createElement"]("div", { style: { height: "64px" } }, " "), globalmessage, react["createElement"](RoutesController, { history: history }), react["createElement"](react_redux_toastr_lib_default.a, { timeOut: 4000, newestOnTop: false, position: "top-left" }));\n/* harmony default export */ var main_view = (MainView);\n// CONCATENATED MODULE: ./ts/core/start/main.controller.tsx\n// copyright (c) 2016 Henrik Bechmann, Toronto, MIT Licence\n// configure the app environment\n\n\n\n\nlet main_controller_state = store.getState(); // get font-family for non material-ui components\nlet fontFamily = main_controller_state.resources.theme.fontFamily;\n// set default user auth\n\n\n\nconst muiTheme = getMuiTheme_default()();\n\n//TODO: assign version to state (DEVELOPMENT|STAGING|PRODUCTION)\nconst Main = ({ globalmessage, version }) => react["createElement"](react_redux_es["Provider"], { store: store }, react["createElement"](MuiThemeProvider_default.a, { muiTheme: muiTheme }, react["createElement"](main_view, { history: globaldataconfig_utility_history, globalmessage: globalmessage, style: { fontFamily } })));\n/* harmony default export */ var main_controller = (Main);\n// CONCATENATED MODULE: ./ts/index.tsx\n// index.tsx\n// copyright (c) 2016 Henrik Bechmann, Toronto, MIT Licence\n// configure the system environment\n\n\n// TODO move inject.. and isomorphic.. to index.tsx\n// required by material-ui\nvar injectTapEventPlugin = __webpack_require__(1124);\ninjectTapEventPlugin();\n__webpack_require__(1118);\n\n// TODO concept of globalmessage needs to be fleshed out; source behind api\nlet ts_globalmessage = null;\ntry {\n    // TODO implement {version} as controlling variable, for example for google analytics\n    // TODO refine error handling here\n    Object(react_dom["render"])(react["createElement"](main_controller, { globalmessage: ts_globalmessage, version: "DEVELOPMENT" }), document.getElementById(\'main\'));\n} catch (e) {\n    react["createElement"]("div", null, "This application requires a modern browser, like Chrome, Firefox, Safari or MS Edge.");\n}\n\n//# sourceURL=webpack:///./ts/index.tsx_+_75_modules?')},660:function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(62)(false);\n// imports\n\n\n// module\nexports.push([module.i, ".editor {\\n  box-sizing: border-box;\\n  border: 1px solid #ddd;\\n  cursor: text;\\n  padding: 16px;\\n  border-radius: 2px;\\n  margin-bottom: 2em;\\n  box-shadow: inset 0px 1px 8px -3px #ABABAB;\\n  background: #fefefe;\\n}\\n\\n.editor .public-DraftEditor-content {\\n  min-height: 140px;\\n}\\n\\n.headlineButtonWrapper {\\n  display: inline-block;\\n}\\n\\n.headlineButton {\\n  background: #fbfbfb;\\n  color: #888;\\n  font-size: 18px;\\n  border: 0;\\n  padding-top: 5px;\\n  vertical-align: bottom;\\n  height: 34px;\\n  width: 36px;\\n}\\n\\n.headlineButton:hover,\\n.headlineButton:focus {\\n  background: #f3f3f3;\\n}", ""]);\n\n// exports\n\n\n//# sourceURL=webpack:///./ts/core/control/forked-components/sheet.styles.css?./node_modules/css-loader')},661:function(module,exports,__webpack_require__){eval("\nvar content = __webpack_require__(660);\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(61)(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack:///./ts/core/control/forked-components/sheet.styles.css?")},674:function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(62)(false);\n// imports\n\n\n// module\nexports.push([module.i, ".addImage {\\n  background: #FFF;\\n  display: inline-block;\\n}\\n\\n.addImagePopover {\\n  margin-top: 10px;\\n  background: #FFF;\\n  position: absolute;\\n  height: 54px;\\n  width: 300px;\\n  border-radius: 2px;\\n  padding: 10px;\\n  box-shadow: 0px 4px 30px 0px rgba(220,220,220,1);\\n  z-index: 1000;\\n}\\n\\n.addImageClosedPopover {\\n  display: none;\\n}\\n\\n.addImageButton {\\n  box-sizing: border-box;\\n  background: #fff;\\n  border: 1px solid #ddd;\\n  padding: 0;\\n  color: #888;\\n  margin: 0;\\n  border-radius: 1.5em;\\n  cursor: pointer;\\n  height: 1.5em;\\n  width: 2.5em;\\n  font-size: 1.5em;\\n  line-height: 1.2em;\\n  margin: 0;\\n}\\n\\n.addImageButton:focus {\\n  outline: 0; /* reset for :focus */\\n}\\n\\n.addImageButton:hover {\\n  background: #f3f3f3;\\n}\\n\\n.addImageButton:active {\\n  background: #e6e6e6;\\n}\\n\\n.addImagePressedButton {\\n  /*composes: addImageButton;*/\\n  background: #ededed;\\n}\\n\\n.addImageBottomGradient {\\n  width: 100%;\\n  height: 1em;\\n  position: absolute;\\n  bottom: 0px;\\n  left: 0px;\\n  right: 0px;\\n  background-color: white;\\n  pointer-events: none;\\n  background: linear-gradient(to bottom, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 100%);\\n}\\n\\n.addImageInput {\\n  box-sizing: border-box;\\n  border: 1px solid #ddd;\\n  cursor: text;\\n  padding: 4px;\\n  width: 78%;\\n  border-radius: 2px;\\n  margin-bottom: 1em;\\n  box-shadow: inset 0px 1px 8px -3px #ABABAB;\\n  background: #fefefe;\\n}\\n\\n.addImageConfirmButton {\\n  box-sizing: border-box;\\n  background: #fff;\\n  border: 1px solid #ddd;\\n  padding: 0;\\n  color: #888;\\n  margin: 0;\\n  border-radius: 2.1em;\\n  cursor: pointer;\\n  height: 2.1em;\\n  width: 18%;\\n  font-size: 1em;\\n  line-height: 2.1em;\\n  margin: 0;\\n  margin-left: 4%;\\n}\\n\\n.addImageConfirmButton:focus {\\n  outline: 0; /* reset for :focus */\\n}\\n\\n.addImageConfirmButton:hover {\\n  background: #f3f3f3;\\n}\\n\\n.addImageConfirmButton:active {\\n  background: #e6e6e6;\\n}", ""]);\n\n// exports\n\n\n//# sourceURL=webpack:///./ts/core/control/forked-components/imageadd.styles.css?./node_modules/css-loader')},675:function(module,exports,__webpack_require__){eval("\nvar content = __webpack_require__(674);\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(61)(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack:///./ts/core/control/forked-components/imageadd.styles.css?")},7:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "z", function() { return types; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "g", function() { return branchTypes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "q", function() { return nodeTypes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return cellTypes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "s", function() { return onetimeNotification; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return addBranchDeclaration; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "n", function() { return cloneBranchDeclaration; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "t", function() { return removeBranchDeclaration; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "u", function() { return removeBranches; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "l", function() { return changeViewpoint; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "A", function() { return updateBranch; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "k", function() { return changeVersion; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "i", function() { return changeAspect; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "x", function() { return toggleInflationAdjusted; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "G", function() { return updateProrata; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "o", function() { return harmonizeCells; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "y", function() { return toggleShowOptions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "p", function() { return incrementBranchDataVersion; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "m", function() { return clearBranchStory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "j", function() { return changeTab; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "F", function() { return updateNode; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return addNodeDeclaration; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "d", function() { return addNodeDeclarations; });\n/* unused harmony export _addNodeDeclarations */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "v", function() { return removeNodeDeclarations; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "r", function() { return normalizeCellYearDependencies; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return addCellDeclarations; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "C", function() { return updateCellChartSelection; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "D", function() { return updateCellTimeScope; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "B", function() { return updateCellChartCode; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "E", function() { return updateCellYearSelections; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "w", function() { return resetLastAction; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return branchMoveUp; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return branchMoveDown; });\n/* harmony import */ var redux_actions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(19);\n// copyright (c) 2016 Henrik Bechmann, Toronto, MIT Licence\n// actions.tsx\n/*\n\n    URLPARMSTODO: create addNodeDeclarations (plural) ADD_NODES\n\n*/\n\nlet uuid = __webpack_require__(557); // use uuid.v4() for unique id\nvar types;\n(function (types) {\n    types.ONETIME_NOTIFICATION = \'ONETIME_NOTIFICATION\';\n    types.ADD_BRANCH = \'ADD_BRANCH\';\n    types.CLONE_BRANCH = \'CLONE_BRANCH\';\n    types.UPDATE_BRANCH = \'UPDATE_BRANCH\';\n    types.REMOVE_BRANCH = \'REMOVE_BRANCH\';\n    types.REMOVE_BRANCHES = \'REMOVE_BRANCHES\';\n    types.CHANGE_VIEWPOINT = \'CHANGE_VIEWPOINT\';\n    types.CHANGE_VERSION = \'CHANGE_VERSION\';\n    types.CHANGE_ASPECT = \'CHANGE_ASPECT\';\n    types.TOGGLE_INFLATION_ADJUSTED = \'TOGGLE_INFLATION_ADJUSTED\';\n    types.UPDATE_PRORATA = \'UPDATE_PRORATA\';\n    types.TOGGLE_SHOW_OPTIONS = \'TOGGLE_SHOW_OPTIONS\';\n    types.ADD_NODE = \'ADD_NODE\';\n    types.ADD_NODES = \'ADD_NODES\';\n    types.REMOVE_NODES = \'REMOVE_NODES\';\n    types.RESET_LAST_ACTION = \'RESET_LAST_ACTION\';\n    types.BRANCH_MOVE_UP = \'BRANCH_MOVE_UP\';\n    types.BRANCH_MOVE_DOWN = \'BRANCH_MOVE_DOWN\';\n    types.CHANGE_BRANCH_DATA = \'CHANGE_BRANCH_DATA\';\n    types.CLEAR_BRANCH_STORY = \'CLEAR_BRANCH_STORY\';\n    types.NORMALIZE_CELL_YEAR_DEPENDENCIES = \'NORMALIZE_CELL_YEAR_DEPENDENCIES\';\n    types.HARMONIZE_CELLS = \'HARMONIZE_CELLS\';\n    types.ADD_CELLS = \'ADD_CELLS\';\n    types.CHANGE_TAB = \'CHANGE_TAB\';\n    types.UPDATE_CELL_SELECTION = \'UPDATE_CELL_SELECTION\';\n    types.UPDATE_CELL_TIMECODE = \'UPDATE_CELL_TIMECODE\';\n    types.UPDATE_CELL_CHART_CODE = \'UPDATE_CELL_CHART_CODE\';\n    types.TOGGLE_DELTA = \'TOGGLE_DELTA\';\n    // export const TOGGLE_NET = \'TOGGLE_NET\'\n    // export const TOGGLE_VARIANCE = \'TOGGLE_VARIANCE\'\n    types.UPDATE_NODE_YEAR_SELECTIONS = \'UPDATE_NODE_YEAR_SELECTIONS\';\n    types.UPDATE_NODE = \'UPDATE_NODE\';\n})(types || (types = {}));\nvar branchTypes;\n(function (branchTypes) {\n    branchTypes.ADD_NODE = types.ADD_NODE;\n    branchTypes.ADD_NODES = types.ADD_NODES;\n    branchTypes.REMOVE_NODES = types.REMOVE_NODES;\n    branchTypes.CHANGE_VIEWPOINT = types.CHANGE_VIEWPOINT;\n    branchTypes.UPDATE_BRANCH = types.UPDATE_BRANCH;\n    branchTypes.CHANGE_VERSION = types.CHANGE_VERSION;\n    branchTypes.CHANGE_ASPECT = types.CHANGE_ASPECT;\n    branchTypes.TOGGLE_INFLATION_ADJUSTED = types.TOGGLE_INFLATION_ADJUSTED;\n    branchTypes.UPDATE_PRORATA = types.UPDATE_PRORATA;\n    branchTypes.TOGGLE_SHOW_OPTIONS = types.TOGGLE_SHOW_OPTIONS;\n    branchTypes.CHANGE_BRANCH_DATA = types.CHANGE_BRANCH_DATA;\n    branchTypes.CLEAR_BRANCH_STORY = types.CLEAR_BRANCH_STORY;\n    branchTypes.HARMONIZE_CELLS = types.HARMONIZE_CELLS;\n})(branchTypes || (branchTypes = {}));\nvar nodeTypes;\n(function (nodeTypes) {\n    nodeTypes.ADD_CELLS = types.ADD_CELLS;\n    nodeTypes.CHANGE_TAB = types.CHANGE_TAB;\n    nodeTypes.NORMALIZE_CELL_YEAR_DEPENDENCIES = types.NORMALIZE_CELL_YEAR_DEPENDENCIES;\n    nodeTypes.UPDATE_NODE = types.UPDATE_NODE;\n    nodeTypes.UPDATE_NODE_YEAR_SELECTIONS = types.UPDATE_NODE_YEAR_SELECTIONS;\n    // export import UPDATE_CELLS_DATASERIESNAME = types.UPDATE_CELLS_DATASERIESNAME\n})(nodeTypes || (nodeTypes = {}));\nvar cellTypes;\n(function (cellTypes) {\n    cellTypes.UPDATE_CELL_SELECTION = types.UPDATE_CELL_SELECTION;\n    cellTypes.UPDATE_CELL_TIMECODE = types.UPDATE_CELL_TIMECODE;\n    cellTypes.UPDATE_CELL_CHART_CODE = types.UPDATE_CELL_CHART_CODE;\n    cellTypes.TOGGLE_DELTA = types.TOGGLE_DELTA;\n    // export import TOGGLE_NET = types.TOGGLE_NET\n    // export import TOGGLE_VARIANCE = types.TOGGLE_VARIANCE\n})(cellTypes || (cellTypes = {}));\n// --------------------[ Explorer ]---------------------\nconst onetimeNotification = Object(redux_actions__WEBPACK_IMPORTED_MODULE_0__[/* createAction */ "a"])(types.ONETIME_NOTIFICATION);\n// --------------------[ Branch ]---------------------\nconst addBranchDeclaration = Object(redux_actions__WEBPACK_IMPORTED_MODULE_0__[/* createAction */ "a"])(types.ADD_BRANCH, (refbranchuid, settings) => ({\n    settings,\n    branchuid: uuid.v4(),\n    refbranchuid\n}), () => ({\n    explorer: true\n}));\nconst cloneBranchDeclaration = Object(redux_actions__WEBPACK_IMPORTED_MODULE_0__[/* createAction */ "a"])(types.CLONE_BRANCH, (refbranchuid, settings) => ({\n    branchuid: refbranchuid,\n    settings,\n    refbranchuid\n}), () => ({\n    explorer: true\n}));\nconst removeBranchDeclaration = Object(redux_actions__WEBPACK_IMPORTED_MODULE_0__[/* createAction */ "a"])(types.REMOVE_BRANCH, branchuid => ({\n    branchuid\n}), () => ({\n    explorer: false\n}));\nconst removeBranches = Object(redux_actions__WEBPACK_IMPORTED_MODULE_0__[/* createAction */ "a"])(types.REMOVE_BRANCHES, () => ({}), () => ({\n    explorer: false\n}));\nconst changeViewpoint = Object(redux_actions__WEBPACK_IMPORTED_MODULE_0__[/* createAction */ "a"])(types.CHANGE_VIEWPOINT, (branchuid, viewpointname) => ({\n    branchuid,\n    viewpointname\n}), () => ({\n    explorer: true\n}));\nconst updateBranch = Object(redux_actions__WEBPACK_IMPORTED_MODULE_0__[/* createAction */ "a"])(types.UPDATE_BRANCH, (branchuid, settings) => ({\n    branchuid,\n    settings\n}), () => ({\n    explorer: true\n}));\nconst changeVersion = Object(redux_actions__WEBPACK_IMPORTED_MODULE_0__[/* createAction */ "a"])(types.CHANGE_VERSION, (branchuid, versionname) => ({\n    branchuid,\n    versionname\n}), () => ({\n    explorer: true\n}));\nconst changeAspect = Object(redux_actions__WEBPACK_IMPORTED_MODULE_0__[/* createAction */ "a"])(types.CHANGE_ASPECT, (branchuid, aspectname) => ({\n    branchuid,\n    aspectname\n}), () => ({\n    explorer: true\n}));\nconst toggleInflationAdjusted = Object(redux_actions__WEBPACK_IMPORTED_MODULE_0__[/* createAction */ "a"])(types.TOGGLE_INFLATION_ADJUSTED, (branchuid, value) => ({\n    branchuid,\n    value\n}), () => ({\n    explorer: true\n}));\nconst updateProrata = Object(redux_actions__WEBPACK_IMPORTED_MODULE_0__[/* createAction */ "a"])(types.UPDATE_PRORATA, (branchuid, value) => ({\n    branchuid,\n    value\n}), () => ({\n    explorer: true\n}));\nconst harmonizeCells = Object(redux_actions__WEBPACK_IMPORTED_MODULE_0__[/* createAction */ "a"])(types.HARMONIZE_CELLS, (branchuid, nodeProperties, cellProperties, nodeList, cellList) => ({\n    branchuid,\n    nodeProperties,\n    cellProperties,\n    nodeList,\n    cellList\n}), () => ({\n    explorer: true\n}));\nconst toggleShowOptions = Object(redux_actions__WEBPACK_IMPORTED_MODULE_0__[/* createAction */ "a"])(types.TOGGLE_SHOW_OPTIONS, (branchuid, value) => ({\n    branchuid,\n    value\n}), () => ({\n    explorer: true\n}));\nconst incrementBranchDataVersion = Object(redux_actions__WEBPACK_IMPORTED_MODULE_0__[/* createAction */ "a"])(types.CHANGE_BRANCH_DATA, branchuid => ({\n    branchuid\n}), () => ({\n    explorer: false\n}));\nconst clearBranchStory = Object(redux_actions__WEBPACK_IMPORTED_MODULE_0__[/* createAction */ "a"])(types.CLEAR_BRANCH_STORY, branchuid => ({\n    branchuid\n}), () => ({\n    explorer: false\n}));\n// ----------------------[ Node ]-----------------------------\nconst changeTab = Object(redux_actions__WEBPACK_IMPORTED_MODULE_0__[/* createAction */ "a"])(types.CHANGE_TAB, (branchuid, nodeuid, tabvalue) => ({\n    nodeuid,\n    tabvalue,\n    branchuid\n}), () => ({\n    explorer: true\n}));\n// TODO: validate this -- may not do anything\nconst updateNode = Object(redux_actions__WEBPACK_IMPORTED_MODULE_0__[/* createAction */ "a"])(types.UPDATE_NODE, (branchuid, nodeuid) => ({\n    nodeuid,\n    branchuid\n}), () => ({\n    explorer: true\n}));\nconst addNodeDeclaration = Object(redux_actions__WEBPACK_IMPORTED_MODULE_0__[/* createAction */ "a"])(types.ADD_NODE, (branchuid, settings) => ({\n    settings,\n    nodeuid: uuid.v4(),\n    branchuid\n}), () => ({\n    explorer: true\n}));\nconst addNodeDeclarations = (branchuid, settingslist) => {\n    return dispatch => {\n        for (let settingsdata of settingslist) {\n            settingsdata.nodeuid = uuid.v4();\n        }\n        dispatch(_addNodeDeclarations(branchuid, settingslist));\n    };\n};\nconst _addNodeDeclarations = Object(redux_actions__WEBPACK_IMPORTED_MODULE_0__[/* createAction */ "a"])(types.ADD_NODES, (branchuid, settingslist) => ({\n    settingslist,\n    branchuid\n}), () => ({\n    explorer: true\n}));\nconst removeNodeDeclarations = Object(redux_actions__WEBPACK_IMPORTED_MODULE_0__[/* createAction */ "a"])(types.REMOVE_NODES, (branchuid, items) => ({\n    items,\n    branchuid\n}), () => ({\n    explorer: true\n}));\nconst normalizeCellYearDependencies = Object(redux_actions__WEBPACK_IMPORTED_MODULE_0__[/* createAction */ "a"])(types.NORMALIZE_CELL_YEAR_DEPENDENCIES, (branchuid, nodeuid, cellList, yearsRange) => ({\n    branchuid,\n    nodeuid,\n    cellList,\n    yearsRange\n}), () => ({\n    explorer: true\n}));\n// ---------------------[ Cell ]---------------------\nconst _addCellDeclaration = Object(redux_actions__WEBPACK_IMPORTED_MODULE_0__[/* createAction */ "a"])(types.ADD_CELLS, (branchuid, nodeuid, settings) => ({\n    branchuid,\n    settings,\n    nodeuid\n}), () => ({\n    explorer: true\n}));\nconst addCellDeclarations = (branchuid, nodeuid, settingslist) => {\n    return dispatch => {\n        for (let settings of settingslist) {\n            settings.celluid = uuid.v4();\n        }\n        dispatch(_addCellDeclaration(branchuid, nodeuid, settingslist));\n    };\n};\nconst updateCellChartSelection = Object(redux_actions__WEBPACK_IMPORTED_MODULE_0__[/* createAction */ "a"])(types.UPDATE_CELL_SELECTION, (branchuid, nodeuid, celluid, selection) => ({\n    celluid,\n    selection,\n    nodeuid,\n    branchuid\n}), () => ({\n    explorer: true\n}));\nconst updateCellTimeScope = Object(redux_actions__WEBPACK_IMPORTED_MODULE_0__[/* createAction */ "a"])(types.UPDATE_CELL_TIMECODE, (branchuid, nodeuid, celluid, explorerTimeCode) => ({\n    branchuid,\n    nodeuid,\n    celluid,\n    explorerTimeCode\n}), () => ({\n    explorer: true\n}));\nconst updateCellChartCode = Object(redux_actions__WEBPACK_IMPORTED_MODULE_0__[/* createAction */ "a"])(types.UPDATE_CELL_CHART_CODE, (branchuid, nodeuid, celluid, explorerChartCode) => ({\n    branchuid,\n    nodeuid,\n    celluid,\n    explorerChartCode\n}), () => ({\n    explorer: true\n}));\nconst updateCellYearSelections = Object(redux_actions__WEBPACK_IMPORTED_MODULE_0__[/* createAction */ "a"])(types.UPDATE_NODE_YEAR_SELECTIONS, (branchuid, nodeuid, leftyear, rightyear) => ({\n    branchuid,\n    nodeuid,\n    // celluid,\n    leftyear,\n    rightyear\n}), () => ({\n    explorer: true\n}));\nconst resetLastAction = Object(redux_actions__WEBPACK_IMPORTED_MODULE_0__[/* createAction */ "a"])(types.RESET_LAST_ACTION, () => ({}), () => ({\n    explorer: true\n}));\nconst branchMoveUp = Object(redux_actions__WEBPACK_IMPORTED_MODULE_0__[/* createAction */ "a"])(types.BRANCH_MOVE_UP, branchuid => ({\n    branchuid\n}), () => ({\n    explorer: false\n}));\nconst branchMoveDown = Object(redux_actions__WEBPACK_IMPORTED_MODULE_0__[/* createAction */ "a"])(types.BRANCH_MOVE_DOWN, branchuid => ({\n    branchuid\n}), () => ({\n    explorer: false\n}));\n\n//# sourceURL=webpack:///./ts/addons/explorer/actions.tsx?')},70:function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* harmony import */ var material_ui_styles_baseThemes_lightBaseTheme__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(227);\n/* harmony import */ var material_ui_styles_baseThemes_lightBaseTheme__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(material_ui_styles_baseThemes_lightBaseTheme__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var material_ui_styles_colors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(121);\n/* harmony import */ var material_ui_styles_colors__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(material_ui_styles_colors__WEBPACK_IMPORTED_MODULE_1__);\n// master.model.tsx\n/*\n    TODO: purge system of navitiles - old wordy tiles = maintiles\n    TODO: break file into backend config bundle and frontend package bundle components; merge in index.tsx?\n*/\n\n// https://design.google.com/icons/\n/* ================= theme details: ==================== */\n// let budgetdata = {} // require('../../explorerprototypedata/2015budgetA.json')\n\n\n// import database, {CurrencyDataset,ItemDataset} from '../addins/classes/databaseapi'\n// fontFamily: \"Roboto, sans-serif\"\n// palette: Object\n// \taccent1Color: \"#ff4081\"\n// \taccent2Color: \"#f5f5f5\"\n// \taccent3Color: \"#9e9e9e\"\n// \talternateTextColor: \"#ffffff\"\n// \tborderColor: \"#e0e0e0\"\n// \tcanvasColor: \"#ffffff\"\n// \tclockCircleColor: \"rgba(0,0,0,0.07)\"\n// \tdisabledColor: \"rgba(0,0,0,0.3)\"\n// \tpickerHeaderColor: \"#00bcd4\"\n// \tprimary1Color: \"#00bcd4\"\n// \tprimary2Color: \"#0097a7\"\n// \tprimary3Color: \"#bdbdbd\"\n// \ttextColor: \"rgba(0, 0, 0, 0.87)\"\n// spacing: Object\n// \tdesktopDropDownMenuFontSize: 15\n// \tdesktopDropDownMenuItemHeight: 32\n// \tdesktopGutter: 24\n// \tdesktopGutterLess: 16\n// \tdesktopGutterMini: 8\n// \tdesktopGutterMore: 32\n// \tdesktopKeylineIncrement: 64\n// \tdesktopLeftNavMenuItemHeight: 48\n// \tdesktopSubheaderHeight: 48\n// \tdesktopToolbarHeight: 56\n// \ticonSize: 24\n/* ======================================== */\n\nlet globalbar = {\n    title: 'Budgetpedia v0.1.6',\n    contactAddress: 'mailto:mail@budgetpedia.ca',\n    contactPrompt: 'mail@budgetpedia.ca',\n    tagLine: 'Only about Toronto for now',\n    username: 'anonymous',\n    accountoptions: [],\n    menuoptions: []\n};\n// let toolsnavbar = {\n// }\n// TODO: no longer needed with switch away from flipcards\n// for more detail: https://www.npmjs.com/package/snifferjs\n// let system = {\n// \tischrome: /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor)\n// }\nlet homepage = {\n    id: 0,\n    content: {\n        title: \"Budgetpedia Home\",\n        // subtitle:\"we're all about government budgets\",\n        image: '../../public/icons/budgetpedia-logo.png',\n        category: 'master'\n    },\n    index: 0,\n    tier: 'master',\n    route: '/',\n    tag: 'home',\n    parent: null\n};\n// review apporpriateness of the following typescript type notation\nlet pagetargets = [{\n    id: 7,\n    content: {\n        title: `Budget Roadmap`,\n        subtitle: `About budget decisions`,\n        image: '../../public/icons/ic_map_48px.svg',\n        category: 'tools'\n    },\n    index: 1,\n    tier: 'primary',\n    route: '/roadmap/',\n    tag: 'roadmap',\n    parent: 'home'\n}, {\n    id: 8,\n    content: {\n        title: `Budgets`,\n        subtitle: `About specific budgets`,\n        image: '../../public/icons/ic_attach_money_48px.svg',\n        category: 'tools'\n    },\n    index: 1,\n    tier: 'primary',\n    route: '/budgets',\n    tag: 'budgets',\n    parent: 'home'\n}, {\n    id: 9,\n    content: {\n        title: `Budget Explorer`,\n        subtitle: `Interactive tools`,\n        image: '../../public/icons/ic_explore_48px.svg',\n        category: 'tools'\n    },\n    index: 0,\n    tier: 'primary',\n    route: '/explorer',\n    tag: 'explorer',\n    parent: 'home'\n}, {\n    id: 15,\n    content: {\n        title: `Resources`,\n        subtitle: `External websites`,\n        image: '../../public/icons/ic_library_books_48px.svg',\n        category: 'support'\n    },\n    index: 2,\n    tier: 'primary',\n    route: '/resources',\n    tag: 'resources',\n    parent: 'home'\n}, {\n    id: 100,\n    content: {\n        title: `Overview`,\n        subtitle: `Toronto Overview`,\n        image: '../../public/icons/ic_wb_sunny_black_48px.svg',\n        category: 'support'\n    },\n    index: 2,\n    tier: 'primary',\n    route: '/overview',\n    tag: 'overview',\n    parent: 'home'\n}, {\n    id: 14,\n    content: {\n        title: `Activist Pathways`,\n        subtitle: `How to make change`,\n        image: '../../public/icons/ic_directions_walk_48px.svg',\n        category: 'support'\n    },\n    index: 3,\n    tier: 'primary',\n    route: '/pathways',\n    tag: 'pathways',\n    parent: 'home'\n}, {\n    id: 6,\n    content: {\n        title: `About Budgetpedia`,\n        subtitle: `History, people, resources`,\n        image: '../../public/icons/ic_info_48px.svg',\n        category: 'information'\n    },\n    index: 4,\n    tier: 'secondary',\n    route: 'about',\n    tag: 'about',\n    parent: 'home'\n}, {\n    id: 16,\n    content: {\n        title: `Announcements`,\n        subtitle: `Budgetpedia Plans and News`,\n        image: '../../public/icons/ic_announcement_black_48px.svg',\n        category: 'information'\n    },\n    index: 5,\n    tier: 'secondary',\n    route: '/announcements',\n    tag: 'announcements',\n    parent: 'home'\n},\n// {\n//     id: 13,\n//     content: {\n//         title: `Get a Demo`,\n//         subtitle: `Resources & training`,\n//         image: '../../public/icons/ic_record_voice_over_48px.svg',\n//         category: 'get involved',\n//     },\n//     index: 6,\n//     tier:'secondary',\n//     route: '/demos',\n//     tag:'demos',\n//     parent:'home',\n// },\n{\n    id: 10,\n    content: {\n        title: `Our Teams`,\n        subtitle: `Join us!`,\n        image: '../../public/icons/ic_group_48px.svg',\n        category: 'get involved'\n    },\n    index: 7,\n    tier: 'secondary',\n    route: '/teams',\n    tag: 'teams',\n    parent: 'home'\n}];\nlet branchDefaults = {\n    repository: \"Toronto\",\n    viewpoint: \"FUNCTIONAL\",\n    version: 'SUMMARY',\n    aspect: \"Expenses\",\n    branchDataGeneration: 0,\n    defaultVersions: {\n        'FUNCTIONAL': 'SUMMARY',\n        'STRUCTURAL': 'SUMMARY',\n        'ACTUALEXPENSES': 'ACTUALEXPENSES',\n        'ACTUALREVENUES': 'ACTUALREVENUES',\n        'EXPENDITURES': 'EXPENDITURES',\n        'FINANCIALASSETS': 'FINANCIALASSETS',\n        'NONFINANCIALASSETS': 'NONFINANCIALASSETS',\n        'LIABILITIES': 'LIABILITIES',\n        'RESERVES': 'RESERVES'\n    },\n    defaultAspects: {\n        'SUMMARY': 'Expenses',\n        'PBFT': 'Expenses',\n        'ACTUALEXPENSES': 'Expenses',\n        'ACTUALREVENUES': 'Revenues',\n        'EXPENDITURES': 'Expenditure',\n        'FINANCIALASSETS': 'Assets',\n        'NONFINANCIALASSETS': 'TangibleAssets',\n        'LIABILITIES': 'Liabilities',\n        'RESERVES': 'Reserves'\n    },\n    // chartType: \"ColumnChart\",\n    inflationAdjusted: true,\n    nodeList: [],\n    showOptions: true,\n    prorata: 'OFF'\n};\nlet explorer = {\n    defaults: {\n        branch: branchDefaults,\n        node: {\n            cellIndex: 0,\n            cellList: null,\n            yearSelections: { leftYear: 1998, rightYear: 2017 }\n        },\n        cell: {\n            chartConfigs: {\n                'OneYear': {\n                    explorerChartCode: \"ColumnChart\"\n                },\n                'TwoYears': {\n                    explorerChartCode: \"DiffColumnChart\"\n                },\n                'AllYears': {\n                    explorerChartCode: \"TimeLine\"\n                }\n            },\n            chartSelection: null,\n            yearScope: \"OneYear\"\n        }\n    }\n};\nvar masterModel = {\n    homepage,\n    pagetargets,\n    globalbar,\n    // toolsnavbar,\n    theme: (material_ui_styles_baseThemes_lightBaseTheme__WEBPACK_IMPORTED_MODULE_0___default()),\n    colors: material_ui_styles_colors__WEBPACK_IMPORTED_MODULE_1__,\n    explorer\n};\n/* harmony default export */ __webpack_exports__[\"a\"] = (masterModel);\n\n//# sourceURL=webpack:///./ts/legacy/budgetpedia.model.tsx?")},822:function(module,exports,__webpack_require__){eval("// markdown-it-anchor.tsx\n// forked from https://github.com/valeriangalliat/markdown-it-anchor/blob/master/index.js\n// changed by Henrik Bechmann (HB)\nconst string = __webpack_require__(111);\nconst slugify = s => string(s).slugify().toString();\nconst position = {\n    false: 'push',\n    true: 'unshift'\n};\nconst hasProp = {}.hasOwnProperty;\nconst permalinkHref = slug => `#${slug}`;\nconst renderPermalink = (slug, opts, state, idx) => {\n    const space = () => Object.assign(new state.Token('text', '', 0), { content: ' ' });\n    const linkTokens = [Object.assign(new state.Token('link_open', 'a', 1), {\n        attrs: [['class', opts.permalinkClass], ['href', opts.permalinkHref(slug, state)], ['aria-hidden', 'true']]\n    }), Object.assign(new state.Token('html_block', '', 0), { content: opts.permalinkSymbol }), new state.Token('link_close', 'a', -1)];\n    // `push` or `unshift` according to position option.\n    // Space is at the opposite side.\n    linkTokens[position[(!opts.permalinkBefore).toString()]](space());\n    state.tokens[idx + 1].children[position[opts.permalinkBefore]](...linkTokens);\n};\n// added by HB, copied and modified renderPermalink\nconst renderTargetlink = (slug, opts, state, idx, text, tag) => {\n    const space = () => Object.assign(new state.Token('text', '', 0), { content: ' ' });\n    const linkTokens = [Object.assign(new state.Token('link_open', 'a', 1), {\n        attrs: [['class', opts.targetlinkClass], ['id', slug], ['data-text', text], ['data-level', tag], ['aria-hidden', 'true']]\n    }), Object.assign(new state.Token('html_block', '', 0), { content: '' }), new state.Token('link_close', 'a', -1)];\n    // `push` or `unshift` according to position option.\n    // Space is at the opposite side.\n    linkTokens[position[(!opts.permalinkBefore).toString()]](space());\n    state.tokens[idx + 1].children[position[opts.permalinkBefore]](...linkTokens);\n};\nconst uniqueSlug = (slug, slugs) => {\n    // Mark this slug as used in the environment.\n    slugs[slug] = (hasProp.call(slugs, slug) ? slugs[slug] : 0) + 1;\n    // First slug, return as is.\n    if (slugs[slug] === 1) {\n        return slug;\n    }\n    // Duplicate slug, add a `-2`, `-3`, etc. to keep ID unique.\n    return slug + '-' + slugs[slug];\n};\nconst isLevelSelectedNumber = selection => level => level >= selection;\nconst isLevelSelectedArray = selection => level => selection.includes(level);\nconst anchor = (md, opts) => {\n    opts = Object.assign({}, defaults, opts);\n    md.core.ruler.push('anchor', state => {\n        const slugs = {};\n        const tokens = state.tokens;\n        const isLevelSelected = Array.isArray(opts.level) ? isLevelSelectedArray(opts.level) : isLevelSelectedNumber(opts.level);\n        tokens.filter(token => token.type === 'heading_open').filter(token => isLevelSelected(Number(token.tag.substr(1)))).forEach(token => {\n            // Aggregate the next token children text.\n            const title = tokens[tokens.indexOf(token) + 1].children.filter(token => token.type === 'text' || token.type === 'code_inline').reduce((acc, t) => acc + t.content, '');\n            let slug = token.attrGet('id');\n            if (slug == null) {\n                // this section re-organized by HB; mostly added conditional of useTargetLink\n                slug = uniqueSlug(opts.slugify(title), slugs);\n                token.attrPush(['class', opts.headerClassName]);\n                token.attrPush(['style', 'position:relative;padding-left:16px;margin-left:-16px;']);\n                if (opts.useTargetlink) {\n                    opts.renderTargetlink(slug, opts, state, tokens.indexOf(token), title, token.tag);\n                } else {\n                    token.attrPush(['id', slug]);\n                }\n            }\n            if (opts.permalink) {\n                opts.renderPermalink(slug, opts, state, tokens.indexOf(token));\n            }\n            if (opts.callback) {\n                // HB added tag prop\n                opts.callback(token, { slug, title, tag: token.tag });\n            }\n        });\n    });\n};\nlet defaults = {\n    level: 1,\n    slugify,\n    permalink: false,\n    renderPermalink,\n    permalinkClass: 'header-anchor markup-anchor',\n    permalinkSymbol: '¶',\n    permalinkBefore: false,\n    permalinkHref,\n    // added by HB\n    useTargetlink: false,\n    renderTargetlink,\n    targetlinkClass: 'target-anchor hash-anchor',\n    headerClassName: 'content-header'\n};\nmodule.exports = anchor;\n\n//# sourceURL=webpack:///./ts/core/control/forked-components/markdown-it-anchor.tsx?")},880:function(module){eval('module.exports = {"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"url":"https://www.toronto.ca/legdocs/mmis/2017/bu/comm/communicationfile-69341.pdf"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"url":"http://app.toronto.ca/tmmis/viewAgendaItemHistory.do?item=2017.BU32.7"}},"2":{"type":"LINK","mutability":"MUTABLE","data":{"url":"http://www.socialplanningtoronto.org/citybudgetwatch"}},"3":{"type":"LINK","mutability":"MUTABLE","data":{"url":"http://www.socialplanningtoronto.org/citybudgetwatch_blog"}},"4":{"type":"LINK","mutability":"MUTABLE","data":{"url":"http://www.commitmentto.com/"}}},"blocks":[{"key":"51f58","text":"Social Planning Toronto","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"afjka","text":"A great example of Civil Society intervention is this: On May 11, 2017, Social Planning Toronto presented an open letter to the Budget Committee meeting, requesting that unfunded social programs, already approved by Council, be costed. They provided a partial list:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":109,"length":11,"key":0},{"offset":128,"length":24,"key":1}],"data":{}},{"key":"bvc8l","text":"TO Prosperity: Poverty Reduction Strategy","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"7re5s","text":"Fair (Transit) Pass Program","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8c6ca","text":"Toronto Strong Neighbourhoods Strategy","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"7kfd3","text":"Youth Equity Strategy","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3vetf","text":"Seniors Strategy","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ahkak","text":"Toronto Newcomer Strategy","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"qra9","text":"Housing Opportunities Toronto","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cmc55","text":"Recreation Services Plan","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"64run","text":"Childcare Growth Strategy","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"f3vpb","text":"Transform TO: Climate Action for a Healthy, Equitable, Prosperous Toronto","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"dkk4r","text":"Middle Childhood Strategy","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"c6t2k","text":"Some 90 Civil Society organizations in Toronto signed the letter.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8sk1u","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2vntd","text":"This makes complete sense; an analog to the backlog of capital projects. Indeed Councillor Carroll put forward a successful motion to have this done.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"a3l7q","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cn18v","text":"Indeed Social Planning Toronto maintains a blog called City Budget Watch (also here), and a website dedicated to community action (commitmentto.com). They run many budget town halls around the City every year.","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":55,"length":18,"style":"ITALIC"}],"entityRanges":[{"offset":55,"length":17,"key":2},{"offset":79,"length":4,"key":3},{"offset":131,"length":16,"key":4}],"data":{}},{"key":"eofne","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}]};\n\n//# sourceURL=webpack:///./ts/model/data/draft/civilsociety.json?')},881:function(module){eval('module.exports = {"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"url":"http://www.betterbudget.ca/"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"url":"http://www.betterbudget.ca/wp-content/uploads/2015/05/Review-of-the-Budget-Process-2015.pdf"}},"2":{"type":"image","mutability":"IMMUTABLE","data":{"src":"/public/images/newyorkbudgetcycle2015.png","width":95,"alignment":"center"}}},"blocks":[{"key":"9knbd","text":"New York Budget Roadmap","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9d68b","text":"In May of 2015 Better Budget Toronto created a review of the Toronto budget process in a paper titled Putting the public back in public budgeting: Review of the 2015 Toronto budget process. The paper reviews Toronto\'s budget process from the point of view of Participation, Accessibility, Vision, and The Use of Evidence. Worth a read.","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":102,"length":86,"style":"ITALIC"},{"offset":259,"length":13,"style":"ITALIC"},{"offset":274,"length":13,"style":"ITALIC"},{"offset":289,"length":6,"style":"ITALIC"},{"offset":301,"length":19,"style":"ITALIC"}],"entityRanges":[{"offset":15,"length":21,"key":0},{"offset":102,"length":86,"key":1}],"data":{}},{"key":"8uvk1","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"64rq3","text":"In that paper, one of the intersting pieces of evidence presented is the budget process used (at the time) by New York City. It\'s worth a review to get a sense of alternative processes that can be applied to budgeting. This is systematic, starts from the ground up, and extensive. Of course New York is several times the size of Toronto, but there are still good ideas to be had here.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3mh3j","text":" ","type":"atomic","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":1,"key":2}],"data":{}},{"key":"ec0bt","text":"Examples like this are worth studying to see how we can improve our own process.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8m4nh","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"con7s","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eqkc6","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}]};\n\n//# sourceURL=webpack:///./ts/model/data/draft/elsewhere.json?')},882:function(module){eval('module.exports = {"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"url":"http://app.toronto.ca/tmmis/viewAgendaItemHistory.do?item=2015.EX5.18"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"url":"http://app.toronto.ca/tmmis/viewAgendaItemHistory.do?item=2015.BU7.3"}},"2":{"type":"LINK","mutability":"MUTABLE","data":{"url":"http://app.toronto.ca/tmmis/decisionBodyList.do?function=prepareDisplayDBList"}},"3":{"type":"LINK","mutability":"MUTABLE","data":{"url":"https://medium.com/budgetpedia/how-toronto-councillors-voted-on-the-2018-public-budget-review-process-5cded7692b6d"}},"4":{"type":"LINK","mutability":"MUTABLE","data":{"url":"http://www.investinginto.ca/downloads/LTFP-Consultation-Final-Report.pdf"}},"5":{"type":"LINK","mutability":"MUTABLE","data":{"url":"https://www1.toronto.ca/wps/portal/contentonly?vgnextoid=ac53968ac42bc510VgnVCM10000071d60f89RCRD"}}},"blocks":[{"key":"568qm","text":"Wanted: Delegation and Inclusion in the Budget Process","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"vk0b","text":"Standing committees were supposed to be involved in the budget process, possibly with public input. Instead, Council is backsliding.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ag4b9","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"51tug","text":"On May 5, 2015, Toronto Council adopted the following:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bbhjh","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"onvc","text":"3.  City Council direct the Deputy City Manager and Chief Financial Officer and the City Clerk to report in Spring 2016, prior to the start of the 2017 multi-year plan and budget process, with detailed recommendations regarding Standing Committee and Budget Committee review of Service Plans, Levels and Performance on an ongoing basis, beginning with the 2017 Multi-Year Service-Based Planning and Budgeting Process.","type":"blockquote","depth":0,"inlineStyleRanges":[{"offset":188,"length":147,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"f9n0l","text":"The emphasis is ours. See the original here.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":39,"length":4,"key":0}],"data":{}},{"key":"fjp76","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9ae09","text":"This was based on a budget committee resolution, which included more detail in the Summary section, including:","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":83,"length":7,"style":"ITALIC"}],"entityRanges":[{"offset":20,"length":27,"key":1}],"data":{}},{"key":"eutk4","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4i3ah","text":"Beginning in 2016 for the 2017 Budget Process, Standing Committee meetings will be dedicated to the Service Planning and Priority-Setting stage of the integrated Multi-Year Planning and Budgeting Process.  Standing Committees will assess service plans to ensure they align with Council\'s strategic directions. Standing Committees will also have the opportunity to consult with the public during this period to seek input in the setting of service priorities.","type":"blockquote","depth":0,"inlineStyleRanges":[{"offset":47,"length":157,"style":"BOLD"},{"offset":310,"length":77,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"di6v3","text":"","type":"blockquote","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"18ebk","text":"For the 2017 process, Standing Committees will forward service plans to City Council for consideration of their alignment with strategic directions and for approval in principle. The service plans established by Standing Committees will set multi-year service objectives, targets and associated priority actions and will be approved by Council. Each year thereafter, Standing Committees will review service levels and performance in attaining those service objectives. Results from these service level reviews will then be forwarded to Budget Committee. These recommended service level priorities along with any fiscal guidelines from the Budget Committee will be utilized by the Executive Committee to provide budget directions and guidelines in developing the 2017 and 2018 Operating and Capital Budgets.","type":"blockquote","depth":0,"inlineStyleRanges":[{"offset":345,"length":123,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"bje4n","text":"Again, the emphasis is ours.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"kscj","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2njv4","text":"To summarize, the Standing Committees of Council (see Committees Reporting to City Council) are supposed to have regular input into the budget process. Standing Committees are designed to provide general oversight to all or most City divisions and agencies. Therefore this would be a good step in decentralizing some of the budget deliberation process. And note that there was a directive allowing for public consultations.","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":54,"length":36,"style":"ITALIC"}],"entityRanges":[{"offset":54,"length":36,"key":2}],"data":{}},{"key":"7os2b","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"kdli","text":"Unfortunately, this resolution wasn\'t followed. We tried but failed to obtain the followup report that was requested by Council from The Deputy City Manager, Chief Financial Officer, and Clerk. Instead, council voted against any form of public consultation during the summer of 2017 for the 2018 budget.","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":46,"style":"BOLD"},{"offset":0,"length":46,"style":"ITALIC"}],"entityRanges":[{"offset":203,"length":53,"key":3}],"data":{}},{"key":"3va8i","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1404b","text":"Somewhat ironically, the City Manager\'s Investing in Toronto initiative during the winter of 2016/2017 had a number of public consultations (which were very well organized and facilitated). These led to a final report, which contained some interesting findings:","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":40,"length":20,"style":"ITALIC"}],"entityRanges":[{"offset":205,"length":12,"key":4}],"data":{}},{"key":"bavtb","text":"To be able to provide better input, most participants want more information, and for that information to be presented in a way they can more easily understand. Participants acknowledge a tension between providing all the data available, which is inherently complex, and providing more accessible data, which often requires reducing the level of detail. Participants suggested potential solutions to this challenge include: ","type":"blockquote","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"12rko","text":"Providing more detail of spending at the community level ","type":"blockquote","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9rjin","text":"Presenting alternative spending options, and cost and benefit analysis ","type":"blockquote","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"dkj5j","text":"Expanding the open data program to include more topics and sources ","type":"blockquote","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"emikb","text":"Using narrative or storytelling to present information ","type":"blockquote","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"79o","text":"Developing charts and visualizations which can be easily shared through social media ","type":"blockquote","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8p5tp","text":"Tracking the progress of programs and strategies ","type":"blockquote","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9h5k3","text":"Creating more dialogue and opportunities for the public to ask questions","type":"blockquote","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"30gpu","text":"That\'s what we at Budgetpedia are trying to do! (though we\'d be more than happy if the City\'s work obviated the need).","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"dde4f","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3htlr","text":"The report also found that participants wanted to see more collaboration:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"eua7v","text":"Overwhelmingly, participants would like their input taken more seriously by the City. They believe public input should carry more weight in City decision-making than it currently does. They would also like to see broadening participation on long-term issues, including environmental and social impact of different decisions, for example. It also means broadening inclusion to actively reach out to people, communities and interests that are not typically reflected in public consultation processes. The only caveat to increasing participation is a desire to streamline decision-making.","type":"blockquote","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"7d4q8","text":"We\'re not aware that these findings have had any direct impact on City policy.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9of9","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8dca9","text":"In a nutshell, senior City personnel seem generally to be at a loss as to how to engage broadly in planning, on an ongoing basis, for better outcomes. Yet there is hope, as ways and means to do this are well understood and readily available.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4gjic","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"dt1ls","text":"On the positive side:","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2ch6n","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9affh","text":"One experiment the City is trying, with Councillor Carroll\'s leadership, is Participatory Budgeting. This is on a relatively small scale, but provides valuable experience in ways of collaborating close to communities.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":76,"length":23,"key":5}],"data":{}},{"key":"ekk76","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"39lpi","text":"Also many councillors host Town Halls in their wards about the budget. Not collaboration exactly, but at least it provides a way for local people to get somewhat connected.","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":27,"length":10,"style":"ITALIC"}],"entityRanges":[],"data":{}}]};\n\n//# sourceURL=webpack:///./ts/model/data/draft/councilservices.json?')},883:function(module){eval('module.exports = {"entityMap":{},"blocks":[{"key":"6t8tt","text":"We\'re assembling Data Stories","type":"header-two","depth":0,"inlineStyleRanges":[{"offset":17,"length":12,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"2ka82","text":"Let\'s face it... it\'s all a bit much. Big city, big budget, endless issues, way too many numbers.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6udfj","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"10n0i","text":"We\'ve thought about this a lot, and decided to focus our efforts around stories. Conceiving, designing, researching, assembling, creating, and presenting stories. By stories we mean data stories. Evidence combined with any of the following: narratives, images, charts, nuggets (quick, relevant, statistics), tables, contextual references, sources, more reading, author references. On this website, a page will be a story (most of the time). We\'ll also try to communicate through Twitter, and through targeted formal briefs.","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":182,"length":12,"style":"ITALIC"},{"offset":269,"length":7,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"fr5bm","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"38cjr","text":"A story could be as general as information related to the TTC, or its Scarborough Subway Extension, or as specific as a particular park, or even a particular program in a community centre. We would work together to assemble the information to provide a foundation for whatever the interest is.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"9cm4k","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cbrji","text":"We\'re not a policy organization -- we\'re a support group. The idea is to assemble stories to support informed debate and ongoing collaboration; supporting any viewpoint presented in good faith, with reference to the information we assemble.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ff7c5","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"e4i3m","text":"The goal, always, is to provide constructive support which has a good chance of advancing the City in small ways, for the sake of our people.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"82qvt","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bgej1","text":"So 2018 is the Year of the Story for us. If you\'re so inclined -- if you have a story you\'d like to work on -- join us!","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":15,"length":17,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"2jpo8","text":"The mechanics of stories","type":"header-three","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8tlmc","text":"Stories consist of one or more sections -- sequential pieces that allow a story to unfold. Each section can contain any type of content that is best suited to communicating that part of the story. These can be lists of various kinds, embedded media, decorated text, or cards (chunks of text and related images,  with action buttons to take the user to more in-depth information). Also each section can be introduced and followed up by some narration; what we collectively call the narrative of the story.","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":269,"length":5,"style":"ITALIC"},{"offset":477,"length":13,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"5nubg","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}]};\n\n//# sourceURL=webpack:///./ts/model/data/draft/stories.json?')},884:function(module){eval('module.exports = {"entityMap":{"0":{"type":"image","mutability":"IMMUTABLE","data":{"src":"/public/images/budgetpedia_hacknight.jpeg","alignment":"right"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"url":"http://publicpolicy.utoronto.ca/better-budget-process-toronto/"}},"2":{"type":"LINK","mutability":"MUTABLE","data":{"url":"https://www1.toronto.ca/wps/portal/contentonly?vgnextoid=91a998b613412410VgnVCM10000071d60f89RCRD&vgnextchannel=1e68f40f9aae0410VgnVCM10000071d60f89RCRD"}},"3":{"type":"LINK","mutability":"MUTABLE","data":{"url":"https://www1.toronto.ca/wps/portal/contentonly?vgnextoid=ac53968ac42bc510VgnVCM10000071d60f89RCRD"}},"4":{"type":"LINK","mutability":"MUTABLE","data":{"url":"https://medium.com/budgetpedia/a-naturalized-view-of-torontos-2017-operating-budget-5043d49ee83e"}}},"blocks":[{"key":"4q7q","text":"Opportunities for Improvements","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3qetn","text":"Collaboration","type":"header-three","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6ekuk","text":" ","type":"atomic","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":1,"key":0}],"data":{}},{"key":"6b6qp","text":"It is widely accepted that collaboration in the form of brainstorming and workshops when properly done (often with facilitators) generates practical innovations and leads to improved outcomes. Since the City of Toronto does such little collaborating, the opportunities for improvements here are vast. Collaboration can be done with ","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"72joc","text":"the public, in general consultations like the City Manager\'s consultations on structural revenue reform","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":4,"length":6,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"f8mjt","text":"program constituents: Jennifer Keesmaat, Toronto\'s former planning chief, showed the way with consultations on a variety of planning topics. Imagine the additional inputs and buy-ins that could be achieved if all program heads were mandated to collaborate with their constituents!","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":20,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"d4ju9","text":"front-line staff could offer valuable insights into their operations","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":16,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"b5irv","text":"Councillor constituents could offer local insights. Many councillors already offer periodic Town Halls, but a more discussion-oriented format would likely yield better results.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":23,"style":"BOLD"},{"offset":92,"length":10,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"5f5ck","text":"Among Councillors - Councillor Shelly Carroll at a panel at SPPG recently said the last time City Councillors had a collective facilitated budget collaboration session was 2004... and it went really well!","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":17,"style":"BOLD"}],"entityRanges":[{"offset":51,"length":13,"key":1}],"data":{}},{"key":"dj2ur","text":"Community Councils (there are four) could be used more for budget collaborations, to get closer to local issues.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":18,"style":"BOLD"}],"entityRanges":[{"offset":0,"length":18,"key":2}],"data":{}},{"key":"d12im","text":"Among Managers - we\'re not sure how much divisions and agencies collaborate, but we\'d like to see a lot of it.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":14,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"4prka","text":"Toronto has been experimenting with Participatory Budgeting for some time, which helps gain experience with broad collaborative methods.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":36,"length":23,"key":3}],"data":{}},{"key":"el4k4","text":"Granularity","type":"header-three","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4u4mu","text":"Toronto has over 13,000 cost centres, which are the lowest units of managed organization in the City, and the units used to enter budget data. If the City released budget and actual data at this level, many benefits could be realized. With greater detail comes scale that many more people can relate to, and data that aligns better with people\'s interests (local and specialized passions). ","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6jtpv","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1tb84","text":"Unfortunately, the City only releases data typically to the Service level; sometimes the Activity level, which are one or two levels below the program (division or agency) level, but far from the detail available. ","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":60,"length":7,"style":"ITALIC"},{"offset":89,"length":8,"style":"ITALIC"},{"offset":143,"length":7,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"b252o","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3gh39","text":"Data should also be provided to the account level; currently it is provided at best at an account category level. Such detail would afford much more opportunity for evaluation and planning.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"10apv","text":"Clarity","type":"header-three","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"19ul7","text":"Toronto currently uses many unconventional methods of budget preparation and presentation. The use of more conventional methods would make the budget much more accessible, and would therefore support much more meaningful dialog and debate. We have put forward the notion of a naturalized budget format. Others favour taking a full accrual accounting approach to budgeting, which would align the budgets much more closely to the audited statements. These approaches are complementary.","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":276,"length":18,"style":"ITALIC"}],"entityRanges":[{"offset":276,"length":18,"key":4}],"data":{}},{"key":"bngj7","text":"Vision-first budgeting","type":"header-three","depth":0,"inlineStyleRanges":[{"offset":0,"length":12,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"54of4","text":"Budgeting is part of a planning process, and it is widely recognized that planning is much more effective when guided by the vision-mission-values approach. Unfortunatley, Toronto has gotten into the habit of framing budget deliberations around fiscal concerns first. This tends to weaken innovation. We think vision-first budgeting would yield much sharper results.","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":23,"length":8,"style":"ITALIC"},{"offset":125,"length":21,"style":"ITALIC"}],"entityRanges":[],"data":{}}]};\n\n//# sourceURL=webpack:///./ts/model/data/draft/opportunities.json?')},885:function(module){eval('module.exports = {"entityMap":{"0":{"type":"LINK","mutability":"MUTABLE","data":{"url":"http://www.investinginto.ca/"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"url":"https://medium.com/budgetpedia/a-naturalized-view-of-torontos-2017-operating-budget-5043d49ee83e"}}},"blocks":[{"key":"pfu5","text":"Concerns to Consider","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6ajm7","text":"We have been working on our project since the summer of 2015. We started with the intent of limiting our activities to explaining the budget, but found ourselves stymied by a variety of issues. So our mandate has expanded to include encouragment of modernization of Toronto\'s financial management, and by extension its management culture. Here is a list of our main concerns.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cfegt","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8l6f7","text":"To be sure, we are editorializing here, and we are open to modifying our views. But we have seen enough to make the determination that these concerns should be articulated, and made available for examination and debate.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cifnm","text":"Budget Concerns","type":"header-three","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"87amp","text":"Competing, contradictory, financial narratives","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":46,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"f6o1e","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"228vm","text":"The narrative that arises out of Toronto\'s annual budget process, re-enforced by the City Manager\'s Investing in Toronto initiative, is that Toronto is more or less \\"broke\\" and therefore is unable to take bold initiatives (particularly social initiatives). This mindset has taken hold among councillors and senior staff to the point where the 2018 budget direction was explicitly set to \'status quo\' -- no major changes with no budget growth. We have seen so many red flags regarding the structure of the budget that we are skeptical of this position. Our skepticism is re-enforced by examination of Toronto\'s audited financial statements, which tell quite a different story.","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":100,"length":20,"style":"ITALIC"}],"entityRanges":[{"offset":100,"length":20,"key":0}],"data":{}},{"key":"23k1s","text":" ","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"aitoo","text":"Unconventional, conflated, and in some cases erroneous budget accounting practices","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":82,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"b01f8","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5c4cn","text":"Careful examination of the data we could assemble regarding the budget has revealed a number of questionable practices (see for example the recommendations arising from our \\"naturalized budget\\" proposal). The collective effect of these is to make the budget extremely difficult to understand. This need not be so. At the core of operating budgets is a simple idea: the cost of staff, and the cost of goods and services consumed to provide the services required of the organization. For Toronto this amount is about $8.5B by our estimation (we can\'t identify a precise figure of course; that\'s the problem). Isolating other elements, being more precise about the core elements, and applying consistent principles from the highest to the lowest organizational levels would make the entire enterprise much more transparent, and thus more amenable to good management and planning practices. There\'s nothing special about government operations that we can see, to stand in the way of this approach.","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":419,"length":8,"style":"ITALIC"}],"entityRanges":[{"offset":174,"length":18,"key":1}],"data":{}},{"key":"45msg","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5ufls","text":"Indications of deficient accounting systems","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":43,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"akfk5","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"69s7k","text":"We have a number of indications that the City\'s accounting systems are weak, and data is sometimes inaccurate.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"89lsh","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5saeh","text":"Importantly, good bookkeeping is a pre-requisite for good reporting, which in turn is a pre-requisite to good decision-making. If good bookkeeping systems are not in place, it follows that the down-stream activities suffer as a result.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fs4e4","text":"General Concerns","type":"header-three","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"7bdg5","text":"Some lack of resolve to tackle large systemic issues","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":52,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"3jl38","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"d41md","text":"The negative budget narrative emanating from City Hall helps councillors and senior staff claim absolution from responsibility for tackling many of the persistent systemic issues that plague our city. Income inequality, large populations (including children) living in poverty, housing shortages, TTC over-crowding, neighbourhood ghettoization, and large ongoing immigrant migration to our City are some of these. In addition modernization of our City corporate culture and operation is happening far too slowly in our view.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"fl34l","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"b7a90","text":"General slowness to modernize","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":29,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"f5phh","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"dqdku","text":"We view modern government as ","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"es303","text":"A collaborative management culture","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1e89r","text":"good bookkeeping","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ba18n","text":"open government","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"efdec","text":"open data","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1lvar","text":"digital platforms (marshalled in support of the above)","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"797d2","text":"We see the Financial Planning division being quite a ways behind the curve in relation to this vision.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"2omi0","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"81qm2","text":"Possible inclination to outsource rather than modernize","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":55,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"avpii","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6t5vk","text":"The City Manager, Mr. Wallace, has made public statements, and has a background in, outsourcing. As well the new Toronto Chief Transformation Officer, Mr. Knox, has a strong background in outsourcing. We are concerned that they would favour outsourcing rather than cultural transformation to effect organizational change.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5c7bd","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5acj7","text":"Persistence of outdated culture","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":31,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"ercnl","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"bumuq","text":"Traditional bureaucratic culture favours","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"731cq","text":"systems over people","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"cce7d","text":"process over outcomes","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"d1k39","text":"compliance over innovation","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"8noh7","text":"Modern culture reverses these. We find the Financial divisions are slow to make this change. Fortunately there are islands of excellence within the City organization, and more are emerging.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4obg","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1vsnb","text":"Additional management questions","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":0,"length":31,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"7sret","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5jhk9","text":"There are a number of red flags related to City management. For example: ","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"4cl6k","text":"the above budgeting system deficiencies continue, even 20 years after amalgamation","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6p4ej","text":"we find there is a tendency for City staff to respond to challenges by becoming unresponsive","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"7kd31","text":"we don\'t see a clear universal culture of accountability within the City","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"6vrg9","text":"we have become aware that the proportion of unfilled positions has climbed substantially in recent years (to ~5% from ~1%), at a time when staff compensation has been rising substantially.","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"d10mg","text":"capital budgets are persistently underspent by about 1/3","type":"unordered-list-item","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"ctvve","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}]};\n\n//# sourceURL=webpack:///./ts/model/data/draft/concerns.json?')},886:function(module){eval('module.exports = {"entityMap":{"0":{"type":"image","mutability":"IMMUTABLE","data":{"src":"/public/images/budget_cycle.png","alignment":"center","width":77}}},"blocks":[{"key":"sn6u","text":"The Complete City of Toronto Budget Cycle","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"3o5ue","text":"Like any budget process, the City budget process involves deliberation, estimation, measurement, and evaluation.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"depo5","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"33h8r","text":"Toronto\'s budget process is mostly internal. There is very little collaboration with the public, or with program constituents. Here is a rough timeline of the entire cycle, spanning about 27 months. It begins with internal (secret) strategizing, and ends with release of the audited financial statements for the budget year in question. The active public budget events are concentrated on the single directions budget committee meeting in May, and an adoption process the following winter.","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":400,"length":10,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"66l27","text":" ","type":"atomic","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":1,"key":0}],"data":{}},{"key":"872sh","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"1a69c","text":"Note that rate-supported budgets include waste, water, and parking, because those three programs are entirely supported by user fees. Tax-supported budgets are the rest, as they are paid for to varying degrees by property taxes. Council deals with these two groups separately.","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":10,"length":14,"style":"ITALIC"},{"offset":134,"length":13,"style":"ITALIC"}],"entityRanges":[],"data":{}}]};\n\n//# sourceURL=webpack:///./ts/model/data/draft/cityprocess.json?')},887:function(module){eval('module.exports = {"entityMap":{"0":{"type":"image","mutability":"IMMUTABLE","data":{"src":"/public/images/2017expbudget.png","alignment":"right"}},"1":{"type":"LINK","mutability":"MUTABLE","data":{"url":"http://local.link/explorer"}}},"blocks":[{"key":"7g29s","text":"What the City of Toronto does","type":"header-two","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"5e8do","text":" ","type":"atomic","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":0,"length":1,"key":0}],"data":{}},{"key":"ngno","text":"After you take away the administrative portion of city work, the rest is divided more or less evenly between general city services, and resident support services. The budget and audited financial statements paint slightly different, but similar pictures.","type":"unstyled","depth":0,"inlineStyleRanges":[{"offset":109,"length":21,"style":"BOLD"},{"offset":136,"length":25,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"2relu","text":"","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"81grd","text":"The 2017 budget is shown in the chart. We\'ve learned that budget documents aren\'t very accurate, but they give a good general idea of what\'s going on.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"shg8","text":"General City Services ($4.9B, 24,000 staff) consists of Transportation (Roads & TTC), Utilities (Water and Waste), and City Commons (Parks, Library, and City-owned destinations)","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":21,"style":"ITALIC"},{"offset":0,"length":21,"style":"BOLD"},{"offset":56,"length":14,"style":"BOLD"},{"offset":86,"length":9,"style":"BOLD"},{"offset":119,"length":12,"style":"BOLD"}],"entityRanges":[],"data":{}},{"key":"1k2bt","text":"Resident Support Services ($4.7B, 21,000 staff) consists of Human Services (income, housing, and child support), Protective Services (police, fire, and paramedics), and Health Services (Public Health & Long Term Care)","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":25,"style":"BOLD"},{"offset":60,"length":14,"style":"BOLD"},{"offset":113,"length":19,"style":"BOLD"},{"offset":169,"length":15,"style":"BOLD"},{"offset":0,"length":25,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"et4li","text":"Administrative Services ($2.7B, 6,500 staff) is what you would normally think of as City Hall work ($1.1B), and also includes Capital Account (financing) activities ($1.6B).","type":"unordered-list-item","depth":0,"inlineStyleRanges":[{"offset":0,"length":23,"style":"BOLD"},{"offset":84,"length":9,"style":"BOLD"},{"offset":126,"length":15,"style":"BOLD"},{"offset":0,"length":23,"style":"ITALIC"},{"offset":143,"length":9,"style":"ITALIC"}],"entityRanges":[],"data":{}},{"key":"7ici5","text":"For detailed information, see our explorer. Recent budgets have been deliberately guided by a \'status quo\' mentality.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[{"offset":34,"length":8,"key":1}],"data":{}},{"key":"bhou4","text":"Capital projects","type":"header-three","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}},{"key":"i8bt","text":"Toronto also budgets about $3B in capital projects (building and upgrading things) each year, although it only manages to implement about 2/3 of that. The largest spender is the TTC.","type":"unstyled","depth":0,"inlineStyleRanges":[],"entityRanges":[],"data":{}}]};\n\n//# sourceURL=webpack:///./ts/model/data/draft/citybasics.json?')},888:function(module,exports){eval('module.exports = "\x3c!-- headerimages.html --\x3e\\n<div style = \\"float:right;margin:9px 3px 3px 3px;border-radius:8px\\">\\n    <img style=\\"width:100px\\" src= \\"/public/icons/budgetpedia-logo-2.png\\" />\\n</div>\\n<div style = \\"clear:right;float:right;margin:0px 3px 3px 3px;border-radius:8px;line-height:9px\\">\\n    <span style=\\"font-style:italic;font-size:9px\\" >fostered by:</span><br />\\n    <a target = \\"_blank\\" href=\\"http://civictech.ca\\">\\n    <img style=\\"width:100px\\" src= \\"/public/icons/CTTO-logo-sm.png\\" /></a>\\n</div>\\n<div style = \\"clear:right;float:right;margin:0px 3px 3px 3px;border-radius:8px;line-height:9px\\">\\n    <span style=\\"font-style:italic;font-size:9px\\" >in collaboration with:</span><br />\\n    <a target = \\"_blank\\" href=\\"http://betterbudget.ca\\">\\n    <img style=\\"width:100px\\" src= \\"/public/icons/bbtoLogo_04.jpg\\" /></a>\\n</div>\\n";\n\n//# sourceURL=webpack:///./ts/model/data/html/headerimages.html?')},910:function(module,exports,__webpack_require__){eval('var map = {\n\t"./af": 428,\n\t"./af.js": 428,\n\t"./ar": 427,\n\t"./ar-dz": 426,\n\t"./ar-dz.js": 426,\n\t"./ar-kw": 425,\n\t"./ar-kw.js": 425,\n\t"./ar-ly": 424,\n\t"./ar-ly.js": 424,\n\t"./ar-ma": 423,\n\t"./ar-ma.js": 423,\n\t"./ar-sa": 422,\n\t"./ar-sa.js": 422,\n\t"./ar-tn": 421,\n\t"./ar-tn.js": 421,\n\t"./ar.js": 427,\n\t"./az": 420,\n\t"./az.js": 420,\n\t"./be": 419,\n\t"./be.js": 419,\n\t"./bg": 418,\n\t"./bg.js": 418,\n\t"./bm": 417,\n\t"./bm.js": 417,\n\t"./bn": 416,\n\t"./bn.js": 416,\n\t"./bo": 415,\n\t"./bo.js": 415,\n\t"./br": 414,\n\t"./br.js": 414,\n\t"./bs": 413,\n\t"./bs.js": 413,\n\t"./ca": 412,\n\t"./ca.js": 412,\n\t"./cs": 411,\n\t"./cs.js": 411,\n\t"./cv": 410,\n\t"./cv.js": 410,\n\t"./cy": 409,\n\t"./cy.js": 409,\n\t"./da": 408,\n\t"./da.js": 408,\n\t"./de": 407,\n\t"./de-at": 406,\n\t"./de-at.js": 406,\n\t"./de-ch": 405,\n\t"./de-ch.js": 405,\n\t"./de.js": 407,\n\t"./dv": 404,\n\t"./dv.js": 404,\n\t"./el": 403,\n\t"./el.js": 403,\n\t"./en-au": 402,\n\t"./en-au.js": 402,\n\t"./en-ca": 401,\n\t"./en-ca.js": 401,\n\t"./en-gb": 400,\n\t"./en-gb.js": 400,\n\t"./en-ie": 399,\n\t"./en-ie.js": 399,\n\t"./en-il": 398,\n\t"./en-il.js": 398,\n\t"./en-nz": 397,\n\t"./en-nz.js": 397,\n\t"./eo": 396,\n\t"./eo.js": 396,\n\t"./es": 395,\n\t"./es-do": 394,\n\t"./es-do.js": 394,\n\t"./es-us": 393,\n\t"./es-us.js": 393,\n\t"./es.js": 395,\n\t"./et": 392,\n\t"./et.js": 392,\n\t"./eu": 391,\n\t"./eu.js": 391,\n\t"./fa": 390,\n\t"./fa.js": 390,\n\t"./fi": 389,\n\t"./fi.js": 389,\n\t"./fo": 388,\n\t"./fo.js": 388,\n\t"./fr": 387,\n\t"./fr-ca": 386,\n\t"./fr-ca.js": 386,\n\t"./fr-ch": 385,\n\t"./fr-ch.js": 385,\n\t"./fr.js": 387,\n\t"./fy": 384,\n\t"./fy.js": 384,\n\t"./gd": 383,\n\t"./gd.js": 383,\n\t"./gl": 382,\n\t"./gl.js": 382,\n\t"./gom-latn": 381,\n\t"./gom-latn.js": 381,\n\t"./gu": 380,\n\t"./gu.js": 380,\n\t"./he": 379,\n\t"./he.js": 379,\n\t"./hi": 378,\n\t"./hi.js": 378,\n\t"./hr": 377,\n\t"./hr.js": 377,\n\t"./hu": 376,\n\t"./hu.js": 376,\n\t"./hy-am": 375,\n\t"./hy-am.js": 375,\n\t"./id": 374,\n\t"./id.js": 374,\n\t"./is": 373,\n\t"./is.js": 373,\n\t"./it": 372,\n\t"./it.js": 372,\n\t"./ja": 371,\n\t"./ja.js": 371,\n\t"./jv": 370,\n\t"./jv.js": 370,\n\t"./ka": 369,\n\t"./ka.js": 369,\n\t"./kk": 368,\n\t"./kk.js": 368,\n\t"./km": 367,\n\t"./km.js": 367,\n\t"./kn": 366,\n\t"./kn.js": 366,\n\t"./ko": 365,\n\t"./ko.js": 365,\n\t"./ky": 364,\n\t"./ky.js": 364,\n\t"./lb": 363,\n\t"./lb.js": 363,\n\t"./lo": 362,\n\t"./lo.js": 362,\n\t"./lt": 361,\n\t"./lt.js": 361,\n\t"./lv": 360,\n\t"./lv.js": 360,\n\t"./me": 359,\n\t"./me.js": 359,\n\t"./mi": 358,\n\t"./mi.js": 358,\n\t"./mk": 357,\n\t"./mk.js": 357,\n\t"./ml": 356,\n\t"./ml.js": 356,\n\t"./mn": 355,\n\t"./mn.js": 355,\n\t"./mr": 354,\n\t"./mr.js": 354,\n\t"./ms": 353,\n\t"./ms-my": 352,\n\t"./ms-my.js": 352,\n\t"./ms.js": 353,\n\t"./mt": 351,\n\t"./mt.js": 351,\n\t"./my": 350,\n\t"./my.js": 350,\n\t"./nb": 349,\n\t"./nb.js": 349,\n\t"./ne": 348,\n\t"./ne.js": 348,\n\t"./nl": 347,\n\t"./nl-be": 346,\n\t"./nl-be.js": 346,\n\t"./nl.js": 347,\n\t"./nn": 345,\n\t"./nn.js": 345,\n\t"./pa-in": 344,\n\t"./pa-in.js": 344,\n\t"./pl": 343,\n\t"./pl.js": 343,\n\t"./pt": 342,\n\t"./pt-br": 341,\n\t"./pt-br.js": 341,\n\t"./pt.js": 342,\n\t"./ro": 340,\n\t"./ro.js": 340,\n\t"./ru": 339,\n\t"./ru.js": 339,\n\t"./sd": 338,\n\t"./sd.js": 338,\n\t"./se": 337,\n\t"./se.js": 337,\n\t"./si": 336,\n\t"./si.js": 336,\n\t"./sk": 335,\n\t"./sk.js": 335,\n\t"./sl": 334,\n\t"./sl.js": 334,\n\t"./sq": 333,\n\t"./sq.js": 333,\n\t"./sr": 332,\n\t"./sr-cyrl": 331,\n\t"./sr-cyrl.js": 331,\n\t"./sr.js": 332,\n\t"./ss": 330,\n\t"./ss.js": 330,\n\t"./sv": 329,\n\t"./sv.js": 329,\n\t"./sw": 328,\n\t"./sw.js": 328,\n\t"./ta": 327,\n\t"./ta.js": 327,\n\t"./te": 326,\n\t"./te.js": 326,\n\t"./tet": 325,\n\t"./tet.js": 325,\n\t"./tg": 324,\n\t"./tg.js": 324,\n\t"./th": 323,\n\t"./th.js": 323,\n\t"./tl-ph": 322,\n\t"./tl-ph.js": 322,\n\t"./tlh": 321,\n\t"./tlh.js": 321,\n\t"./tr": 320,\n\t"./tr.js": 320,\n\t"./tzl": 319,\n\t"./tzl.js": 319,\n\t"./tzm": 318,\n\t"./tzm-latn": 317,\n\t"./tzm-latn.js": 317,\n\t"./tzm.js": 318,\n\t"./ug-cn": 316,\n\t"./ug-cn.js": 316,\n\t"./uk": 315,\n\t"./uk.js": 315,\n\t"./ur": 314,\n\t"./ur.js": 314,\n\t"./uz": 313,\n\t"./uz-latn": 312,\n\t"./uz-latn.js": 312,\n\t"./uz.js": 313,\n\t"./vi": 311,\n\t"./vi.js": 311,\n\t"./x-pseudo": 310,\n\t"./x-pseudo.js": 310,\n\t"./yo": 309,\n\t"./yo.js": 309,\n\t"./zh-cn": 308,\n\t"./zh-cn.js": 308,\n\t"./zh-hk": 307,\n\t"./zh-hk.js": 307,\n\t"./zh-tw": 306,\n\t"./zh-tw.js": 306\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tvar module = __webpack_require__(id);\n\treturn module;\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\'Cannot find module "\' + req + \'".\');\n\t\te.code = \'MODULE_NOT_FOUND\';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 910;\n\n//# sourceURL=webpack:///./node_modules/moment/locale_sync_^\\.\\/.*$?')}});