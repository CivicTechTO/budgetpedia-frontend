"use strict";
const React = require('react');
const Card_1 = require('material-ui/Card');
const SvgIcon_1 = require('material-ui/SvgIcon');
const FontIcon_1 = require('material-ui/FontIcon');
let content = React.createElement("div", null, 
    React.createElement(Card_1.Card, null, 
        React.createElement(Card_1.CardText, null, 
            "The best way to become familiar with the explorer is to ", 
            React.createElement("span", {style: { fontStyle: 'italic' }}, "play with it"), 
            " (experiment)." + ' ' + "Once in a while, review the lists below. Click on any title below for details.")
    ), 
    React.createElement(Card_1.Card, null, 
        React.createElement(Card_1.CardTitle, {actAsExpander: true, showExpandableButton: true}, "Dataset Options"), 
        React.createElement(Card_1.CardText, {expandable: true, style: { paddingTop: "0px" }}, 
            React.createElement("p", null, "There are several dataset options available for charts:"), 
            React.createElement("dl", null, 
                React.createElement("dt", null, 
                    React.createElement("strong", null, "Viewpoint")
                ), 
                React.createElement("dd", null, " a viewpoint is a classification scheme (taxonomy) of a set of accounts."), 
                React.createElement("dt", null, 
                    React.createElement("strong", null, "Source")
                ), 
                React.createElement("dd", null, 
                    "alternate detailed datasets available for the selected Viewpoint (see the Budgetpedia" + ' ' + "project's ", 
                    React.createElement("a", {target: "_blank", href: "https://drive.google.com/drive/u/0/folders/0B208oCU9D8OuM2NmUk9XR1VCbEU"}, "research repository)")), 
                React.createElement("dt", null, 
                    React.createElement("strong", null, "Aspect")
                ), 
                React.createElement("dd", null, " particular aspects of the dataset, such as Revenue, Expenses or Staffing"), 
                React.createElement("dt", null, 
                    React.createElement("strong", null, "Prorated")
                ), 
                React.createElement("dd", null, " the beginnings of diagnostic analytics, using simple math to view the" + ' ' + "data compared with relevant related metrics, such as per person or per household"), 
                React.createElement("dt", null, 
                    React.createElement("strong", null, "Inflation adjusted")
                ), 
                React.createElement("dd", null, " the datasets are updated annually to reflect the Bank of" + ' ' + "Canada's Inflation Calculator. This makes it possible to get historical perspectives that are" + ' ' + "meaningful in today's dollar terms.")), 
            React.createElement("p", null, "Choices for the selections are interdependent. Toronto budgets have similar classifications for" + ' ' + "Revenue and Expenses for example, and therefore these can be viewed together. Financial statements" + ' ' + "on the other hand do not have similar classifications for Revenue and Expenses."), 
            React.createElement("hr", null), 
            React.createElement("p", null, 
                React.createElement("strong", null, 
                    React.createElement("em", null, "Viewpoint")
                ), 
                " choices include:"), 
            React.createElement("dl", null, 
                React.createElement("dt", null, 
                    React.createElement("strong", null, "Functional (operating budgets)")
                ), 
                React.createElement("dd", null, "combines City of Toronto Agencies and Divisions into groups according to the nature of" + ' ' + "the services delivered (this is the default). The classification scheme above the" + ' ' + "Division/Agency level was developed by Budgetpedia project contributors."), 
                React.createElement("dt", null, 
                    React.createElement("strong", null, "Structural (operating budgets)")
                ), 
                React.createElement("dd", null, "more traditional: separates Agencies from Divisions, and generally by organizational" + ' ' + "structures. Groupings are closer to those found in City annual Budget Summaries."), 
                React.createElement("dt", null, 
                    React.createElement("strong", null, "Audited Expenses, and Audited Revenues")
                ), 
                React.createElement("dd", null, "These reporting structures are manadated by the province (and GAAP -- Generally Accepted" + ' ' + "Accounting Principles). They are functional, and are comparable to other municipalities in the" + ' ' + "province. Summary groupings above the statment levels are added by the Budgetpedia project" + ' ' + "for easier access."), 
                React.createElement("dt", null, 
                    React.createElement("strong", null, "Audited Expenses by Object")
                ), 
                React.createElement("dd", null, "Expenses by Object is a restatement of expenses by object of expenditure, such as materials," + ' ' + "or Wages & Salaries. These categories cross all Divisions and Agencies, and therefore provide a" + ' ' + "general picture of the ways that money is spent.")), 
            React.createElement("hr", null), 
            React.createElement("p", null, 
                React.createElement("strong", null, 
                    React.createElement("em", null, "Source")
                ), 
                " choices depend on the Viewpoint that is chosen."), 
            React.createElement("dl", null, 
                React.createElement("dt", null, 
                    React.createElement("em", null, "For Viewpoint = Budget (both functional and structural), Versions"), 
                    " include:"), 
                React.createElement("dd", null, 
                    React.createElement("dl", null, 
                        React.createElement("dt", null, 
                            React.createElement("strong", null, "Summary PDF Reports 2003 - 2016")
                        ), 
                        React.createElement("dt", null, 
                            React.createElement("strong", null, "Detailed open data files 2011 - 2016")
                        ), 
                        React.createElement("dt", null, 
                            React.createElement("strong", null, "Variance Reports"), 
                            " ", 
                            React.createElement("em", null, "[deferred]")))
                ), 
                React.createElement("dd", null, 
                    "The detailed files are generated by ", 
                    React.createElement("em", null, "PBFT"), 
                    " which stands for ", 
                    React.createElement("em", null, "Public Budget Formulation Tool"), 
                    " which is part of the City's new" + ' ' + "FPARS (Financial Planning Analysis and Reporting System) system"), 
                React.createElement("dt", {style: { marginTop: "20px" }}, 
                    React.createElement("em", null, "For Viewpoint = Audited Expenses or Revenues, Source"), 
                    " includes:"), 
                React.createElement("dd", null, 
                    React.createElement("dl", null, 
                        React.createElement("dt", null, 
                            React.createElement("strong", null, "Audited Statements 1998 - 2015")
                        ), 
                        React.createElement("dt", null, 
                            React.createElement("strong", null, "to come: Financial Information Returns")
                        ))
                ), 
                React.createElement("dd", null, "FIR for MMAH = Financial Information Returns for the Ontario Ministry of Municipal Affairs" + ' ' + "and Housing.")), 
            React.createElement("hr", null), 
            React.createElement("p", null, 
                React.createElement("strong", null, 
                    React.createElement("em", null, "Aspect")
                ), 
                " choices depend on the Viewpoint and Version that is chosen."), 
            React.createElement("dl", null, 
                React.createElement("dt", null, 
                    React.createElement("em", null, "For Viewpoint = Budget (both functional and structural), Version = Summary or Detailed," + ' ' + "Aspects"), 
                    " include:"), 
                React.createElement("dd", null, 
                    React.createElement("dl", null, 
                        React.createElement("dt", null, 
                            React.createElement("strong", null, "Revenue")
                        ), 
                        React.createElement("dt", null, 
                            React.createElement("strong", null, "Expenses")
                        ), 
                        React.createElement("dt", null, 
                            React.createElement("strong", null, "Staffing")
                        ))
                ), 
                React.createElement("dd", null, " All of these are based on City documents which have similar line items across all aspects. This" + ' ' + "makes the figures from all sources comparable."), 
                React.createElement("dt", {style: { marginTop: "20px" }}, 
                    React.createElement("em", null, "For Viewpoint = Consolidated Statements, any Version, Aspects"), 
                    " include:"), 
                React.createElement("dd", null, 
                    React.createElement("dl", null, 
                        React.createElement("dt", null, 
                            React.createElement("strong", null, "Revenue (actual), or")
                        ), 
                        React.createElement("dt", null, 
                            React.createElement("strong", null, "Expenses (actual)")
                        ))
                ), 
                React.createElement("dd", null, "The classification schemes for these are different for each, and therefore they cannot be" + ' ' + "combined."), 
                React.createElement("dt", {style: { marginTop: "20px" }}, 
                    React.createElement("em", null, "For Viewpoint = Expenses by Object, Source =" + ' ' + "Audited Statements, Aspects"), 
                    " include:"), 
                React.createElement("dd", null, 
                    React.createElement("dl", null, 
                        React.createElement("dt", null, 
                            React.createElement("strong", null, "Expenses")
                        )
                    )
                ), 
                React.createElement("dd", null, "These come from notes to the audited financial statements.")), 
            React.createElement("hr", null), 
            React.createElement("p", null, 
                React.createElement("strong", null, 
                    React.createElement("em", null, "Prorated")
                ), 
                " choices are common for all other choices, and include:"), 
            React.createElement("dl", null, 
                React.createElement("dd", null, 
                    React.createElement("dl", null, 
                        React.createElement("dt", null, 
                            React.createElement("strong", null, "Population: per person")
                        ), 
                        React.createElement("dt", null, 
                            React.createElement("strong", null, "Population: per 100,000 people")
                        ), 
                        React.createElement("dt", null, 
                            React.createElement("strong", null, "Per household")
                        ), 
                        React.createElement("dt", null, 
                            React.createElement("strong", null, "Per 40,000 households")
                        ), 
                        React.createElement("dt", null, 
                            React.createElement("strong", null, "Per Ward (x 44)"), 
                            " an average per ward"), 
                        React.createElement("dt", null, 
                            React.createElement("strong", null, "Per Neighbourhood (x 4 x 44)"), 
                            " an average per neighbourhood, 4 per ward, about walking distance"))
                )
            ), 
            React.createElement("hr", null), 
            React.createElement("p", null, 
                React.createElement("strong", null, 
                    React.createElement("em", null, "Inflation adjusted")
                ), 
                " is on by default, but can be turned off."), 
            React.createElement("dl", null, 
                React.createElement("dd", null, "This uses" + ' ' + "the Statistics Canada's estimated CPI for Toronto, to adjust historical figures in terms of recent" + ' ' + "currency valuations, for more meaningful trend analysis.")
            ))), 
    React.createElement(Card_1.Card, null, 
        React.createElement(Card_1.CardTitle, {actAsExpander: true, showExpandableButton: true}, "Chart Options"), 
        React.createElement(Card_1.CardText, {expandable: true, style: { paddingTop: "0px" }}, 
            React.createElement("p", null, " Chart options vary according to the time options selected. The time options available are:"), 
            React.createElement("dl", null, 
                React.createElement("dt", null, 
                    React.createElement(SvgIcon_1.default, {style: {
                        height: "18px",
                        width: "18px",
                        padding: "0 3px",
                        border: "1px solid silver",
                        borderRadius: "5px",
                        verticalAlign: "middle"
                    }, viewBox: "0 0 36 36"}, 
                        React.createElement("rect", {x: "13", y: "13", width: "10", height: "10"})
                    ), 
                    " One year (default)"), 
                React.createElement("dd", null, " Select a specific year to investigate."), 
                React.createElement("dt", null, 
                    React.createElement(SvgIcon_1.default, {style: {
                        height: "18px",
                        width: "18px",
                        padding: "0 3px",
                        border: "1px solid silver",
                        borderRadius: "5px",
                        verticalAlign: "middle"
                    }, viewBox: "0 0 36 36"}, 
                        React.createElement("rect", {x: "4", y: "13", width: "10", height: "10"}), 
                        React.createElement("rect", {x: "22", y: "13", width: "10", height: "10"})), 
                    " Two years"), 
                React.createElement("dd", null, " Allows data for two years to be presented side by side for comparison."), 
                React.createElement("dt", null, 
                    React.createElement(SvgIcon_1.default, {style: {
                        height: "18px",
                        width: "18px",
                        padding: "0 3px",
                        border: "1px solid silver",
                        borderRadius: "5px",
                        verticalAlign: "middle"
                    }, viewBox: "0 0 36 36"}, 
                        React.createElement("ellipse", {cx: "6", cy: "18", rx: "4", ry: "4"}), 
                        React.createElement("ellipse", {cx: "18", cy: "18", rx: "4", ry: "4"}), 
                        React.createElement("ellipse", {cx: "30", cy: "18", rx: "4", ry: "4"})), 
                    " All years (all available years)"), 
                React.createElement("dd", null, " Shows all available years to investigate trends.")), 
            React.createElement("p", null, "Specific years can be selected in the selection dropdowns under the charts."), 
            React.createElement("hr", null), 
            React.createElement("dl", null, 
                React.createElement("dt", null, 
                    React.createElement(SvgIcon_1.default, {style: {
                        height: "18px",
                        width: "18px",
                        padding: "0 3px",
                        border: "1px solid silver",
                        borderRadius: "5px",
                        verticalAlign: "middle"
                    }, viewBox: "0 0 36 36"}, 
                        React.createElement("rect", {x: "13", y: "13", width: "10", height: "10"})
                    ), 
                    " Chart options when one year is chosen include:"), 
                React.createElement("dd", null, 
                    React.createElement("dl", null, 
                        React.createElement("dt", null, 
                            React.createElement(FontIcon_1.default, {style: {
                                height: "18px",
                                width: "18px",
                                padding: "0 3px",
                                border: "1px solid silver",
                                borderRadius: "5px",
                                verticalAlign: "middle",
                                fontSize: "18px",
                            }, className: "material-icons"}, "insert_chart"), 
                            " Column Chart"), 
                        React.createElement("dd", null, " This shows the basics" + ' ' + "of the components of the chart. Float the mouse over the column to see the number," + ' ' + "or click on a column to drill down."), 
                        React.createElement("dt", null, 
                            React.createElement(FontIcon_1.default, {style: {
                                height: "18px",
                                width: "18px",
                                padding: "0 3px",
                                border: "1px solid silver",
                                borderRadius: "5px",
                                verticalAlign: "middle",
                                fontSize: "18px",
                            }, className: "material-icons"}, "donut_small"), 
                            " Donut Chart"), 
                        React.createElement("dd", null, " This shows the percentages of each" + ' ' + "number in relation to the whole."))
                )), 
            React.createElement("hr", null), 
            React.createElement("dl", null, 
                React.createElement("dt", null, 
                    React.createElement(SvgIcon_1.default, {style: {
                        height: "18px",
                        width: "18px",
                        padding: "0 3px",
                        border: "1px solid silver",
                        borderRadius: "5px",
                        verticalAlign: "middle"
                    }, viewBox: "0 0 36 36"}, 
                        React.createElement("rect", {x: "4", y: "13", width: "10", height: "10"}), 
                        React.createElement("rect", {x: "22", y: "13", width: "10", height: "10"})), 
                    " Chart options when two years is chosen include:"), 
                React.createElement("dd", null, 
                    React.createElement("dl", null, 
                        React.createElement("dt", null, 
                            React.createElement(FontIcon_1.default, {style: {
                                height: "18px",
                                width: "18px",
                                padding: "0 3px",
                                border: "1px solid silver",
                                borderRadius: "5px",
                                verticalAlign: "middle",
                                fontSize: "18px",
                            }, className: "material-icons"}, "insert_chart"), 
                            " Column Chart"), 
                        React.createElement("dd", null, " This offers" + ' ' + "a difference chart. The light colored bars are background bars."), 
                        React.createElement("dt", null, 
                            React.createElement(FontIcon_1.default, {style: {
                                height: "18px",
                                width: "18px",
                                padding: "0 3px",
                                border: "1px solid silver",
                                borderRadius: "5px",
                                verticalAlign: "middle",
                                fontSize: "18px",
                            }, className: "material-icons"}, "donut_small"), 
                            " A piechart difference chart"), 
                        React.createElement("dd", null, " This shows the differences" + ' ' + "between the two years chosen."))
                )), 
            React.createElement("hr", null), 
            React.createElement("dl", null, 
                React.createElement("dt", null, 
                    React.createElement(SvgIcon_1.default, {style: {
                        height: "18px",
                        width: "18px",
                        padding: "0 3px",
                        border: "1px solid silver",
                        borderRadius: "5px",
                        verticalAlign: "middle"
                    }, viewBox: "0 0 36 36"}, 
                        React.createElement("ellipse", {cx: "6", cy: "18", rx: "4", ry: "4"}), 
                        React.createElement("ellipse", {cx: "18", cy: "18", rx: "4", ry: "4"}), 
                        React.createElement("ellipse", {cx: "30", cy: "18", rx: "4", ry: "4"})), 
                    " Chart options when all years is chosen include:"), 
                React.createElement("dd", null, 
                    React.createElement("dl", null, 
                        React.createElement("dt", null, 
                            React.createElement(FontIcon_1.default, {style: {
                                height: "18px",
                                width: "18px",
                                padding: "0 3px",
                                border: "1px solid silver",
                                borderRadius: "5px",
                                verticalAlign: "middle",
                                fontSize: "18px",
                            }, className: "material-icons"}, "timeline"), 
                            " Line Chart"), 
                        React.createElement("dd", null, " Basic time lines"), 
                        React.createElement("dt", null, 
                            React.createElement(SvgIcon_1.default, {style: {
                                height: "18px",
                                width: "18px",
                                padding: "0 3px",
                                border: "1px solid silver",
                                borderRadius: "5px",
                                verticalAlign: "middle"
                            }}, 
                                React.createElement("path", {d: "M20,6c0-0.587-0.257-1.167-0.75-1.562c-0.863-0.69-2.121-0.551-2.812,0.312l-2.789,3.486L11.2,6.4  c-0.864-0.648-2.087-0.493-2.762,0.351l-4,5C4.144,12.119,4,12.562,4,13v3h16V6z"}), 
                                React.createElement("path", {d: "M20,19H4c-0.552,0-1,0.447-1,1s0.448,1,1,1h16c0.552,0,1-0.447,1-1S20.552,19,20,19z"})), 
                            " Area Chart"), 
                        React.createElement("dd", null, " Same data as timelines, but stacked."), 
                        React.createElement("dt", null, 
                            React.createElement(FontIcon_1.default, {style: {
                                height: "18px",
                                width: "18px",
                                padding: "0 3px",
                                border: "1px solid silver",
                                borderRadius: "5px",
                                verticalAlign: "middle",
                                fontSize: "18px",
                            }, className: "material-icons"}, "view_stream"), 
                            " Proportional Chart "), 
                        React.createElement("dd", null, " All lines add to 100%;" + ' ' + "individual amounts are shown in proportion to the whole."))
                )))), 
    React.createElement(Card_1.Card, null, 
        React.createElement(Card_1.CardTitle, {actAsExpander: true, showExpandableButton: true}, "Context Options"), 
        React.createElement(Card_1.CardText, {expandable: true, style: { paddingTop: "0px" }}, 
            React.createElement("p", null, " Context options are offered to provide contextual information for the data being viewed, and" + ' ' + "to afford the reader the opportunity to contribute to the process surrounding the budget. These" + ' ' + "are the options offered, found under each chart:"), 
            React.createElement("dl", null, 
                React.createElement("dt", null, 
                    React.createElement(FontIcon_1.default, {style: {
                        height: "18px",
                        width: "18px",
                        padding: "0 3px",
                        border: "1px solid silver",
                        borderRadius: "5px",
                        verticalAlign: "middle",
                        fontSize: "18px",
                    }, className: "material-icons"}, "info_outline"), 
                    " The ", 
                    React.createElement("em", null, "information"), 
                    " icon"), 
                React.createElement("dd", null, 
                    React.createElement("em", null, "[deferred]"), 
                    " invokes a dialog containing information related to the current" + ' ' + "data. This could be brief explanations, links to related information, or links to websites" + ' ' + "which specialize in the subject matter. The idea is to allow the reader to discover more context" + ' ' + "and detail about the subject matter at hand."), 
                React.createElement("dt", null, 
                    React.createElement(FontIcon_1.default, {style: {
                        height: "18px",
                        width: "18px",
                        padding: "0 3px",
                        border: "1px solid silver",
                        borderRadius: "5px",
                        verticalAlign: "middle",
                        fontSize: "18px",
                    }, className: "material-icons"}, "note"), 
                    " The ", 
                    React.createElement("em", null, "notes"), 
                    " icon"), 
                React.createElement("dd", null, 
                    React.createElement("em", null, "[deferred]"), 
                    " invokes detailed technical information about the" + ' ' + "data presented, including source documents, exceptions, errors, and any relevant notes about the" + ' ' + "way the data was processed. If there are errors or exceptions in place, the note icon changes" + ' ' + "colour to red or orange, depending on severity."), 
                React.createElement("dt", null, 
                    React.createElement(FontIcon_1.default, {style: {
                        height: "18px",
                        width: "18px",
                        padding: "0 3px",
                        border: "1px solid silver",
                        borderRadius: "5px",
                        verticalAlign: "middle",
                        fontSize: "18px",
                    }, className: "material-icons"}, "share"), 
                    " The ", 
                    React.createElement("em", null, "share"), 
                    " icon "), 
                React.createElement("dd", null, 
                    React.createElement("em", null, "[deferred]"), 
                    " provides access to relevant social media" + ' ' + "sites, to allow readers to read or contribute to discussion about the subject at hand."), 
                React.createElement("dt", null, 
                    React.createElement(FontIcon_1.default, {style: {
                        height: "18px",
                        width: "18px",
                        padding: "0 3px",
                        border: "1px solid silver",
                        borderRadius: "5px",
                        verticalAlign: "middle",
                        fontSize: "18px",
                    }, className: "material-icons"}, "announcement"), 
                    " The ", 
                    React.createElement("em", null, "announcement"), 
                    " icon"), 
                React.createElement("dd", null, 
                    React.createElement("em", null, "[deferred]"), 
                    " provides the user with" + ' ' + "lists of calls to actions or meetings related to the subject matter, or to contribute their own" + ' ' + "call to action or meetings."), 
                React.createElement("dt", null, 
                    React.createElement(FontIcon_1.default, {style: {
                        height: "18px",
                        width: "18px",
                        padding: "0 3px",
                        border: "1px solid silver",
                        borderRadius: "5px",
                        verticalAlign: "middle",
                        fontSize: "18px",
                    }, className: "material-icons"}, "view_list"), 
                    " The ", 
                    React.createElement("em", null, "data"), 
                    " icon"), 
                React.createElement("dd", null, 
                    React.createElement("em", null, "[deferred]"), 
                    " brings up the data underlying the currently viewed chart, with an option to download same."), 
                React.createElement("dt", null, 
                    React.createElement(FontIcon_1.default, {style: {
                        height: "18px",
                        width: "18px",
                        padding: "0 3px",
                        border: "1px solid silver",
                        borderRadius: "5px",
                        verticalAlign: "middle",
                        fontSize: "18px",
                    }, className: "material-icons"}, "swap_horiz"), 
                    " The ", 
                    React.createElement("em", null, "harmonize"), 
                    " icon"), 
                React.createElement("dd", null, 
                    " allows the user to impose the" + ' ' + "settings made in the current chart onto the other charts in the row (", 
                    React.createElement("em", null, "Exhibit"), 
                    ").")))), 
    React.createElement(Card_1.Card, null, 
        React.createElement(Card_1.CardTitle, {actAsExpander: true, showExpandableButton: true}, "Cloning Features"), 
        React.createElement(Card_1.CardText, {expandable: true, style: { paddingTop: "0px" }}, 
            React.createElement("p", null, 
                "The Budget Explorer organizes charts into horizontal drill-down sequences which we" + ' ' + "call ", 
                React.createElement("em", null, "Exhibits"), 
                ". We allow for cloning and re-ordering these exhibits to allow for comparison," + ' ' + "exploration, and publication. This clone contains all the option controls of the original. The" + ' ' + "clone is independent of the original."), 
            React.createElement("dl", null, 
                React.createElement("dt", null, 
                    React.createElement(FontIcon_1.default, {style: {
                        height: "18px",
                        width: "18px",
                        padding: "0 3px",
                        border: "1px solid silver",
                        borderRadius: "5px",
                        verticalAlign: "middle",
                        fontSize: "18px",
                    }, className: "material-icons"}, "add_circle_outline"), 
                    " Add a clone of the current Exhibit"), 
                React.createElement("dd", null, 
                    "This icon when invoked adds a clone of the current row of charts below the current row. ", 
                    React.createElement("em", null, "The clone reproduces all of the components and selections of the current" + ' ' + "row.")), 
                React.createElement("dt", null, 
                    React.createElement(FontIcon_1.default, {style: {
                        height: "18px",
                        width: "18px",
                        padding: "0 3px",
                        border: "1px solid silver",
                        borderRadius: "5px",
                        verticalAlign: "middle",
                        fontSize: "18px",
                    }, className: "material-icons"}, "remove_circle_outline"), 
                    " Remove the current Exhibit"), 
                React.createElement("dd", null, "This icon when invoked removes the current row of charts (cannot currently be undone)."), 
                React.createElement("dt", null, 
                    React.createElement(FontIcon_1.default, {style: {
                        height: "18px",
                        width: "18px",
                        padding: "0 3px",
                        border: "1px solid silver",
                        borderRadius: "5px",
                        verticalAlign: "middle",
                        fontSize: "18px",
                    }, className: "material-icons"}, "arrow_upward"), 
                    " Move the current Exhibit up one position"), 
                React.createElement("dd", null, 
                    "When mulitple rows (", 
                    React.createElement("em", null, "Exhibits"), 
                    ") exist, they can be re-ordered. The up arrow icon" + ' ' + "(to the upper right of the row title) moves the row up one position."), 
                React.createElement("dt", null, 
                    React.createElement(FontIcon_1.default, {style: {
                        height: "18px",
                        width: "18px",
                        padding: "0 3px",
                        border: "1px solid silver",
                        borderRadius: "5px",
                        verticalAlign: "middle",
                        fontSize: "18px",
                    }, className: "material-icons"}, "arrow_downward"), 
                    " Move the current Exhibit down one position"), 
                React.createElement("dd", null, 
                    "When mulitple rows (", 
                    React.createElement("em", null, "Exhibits"), 
                    ") exist, they can be re-ordered. The down arrow icon" + ' ' + "(to the upper right of the row title) moves the row down one position.")))), 
    React.createElement(Card_1.Card, null, 
        React.createElement(Card_1.CardTitle, {actAsExpander: true, showExpandableButton: true}, "Actionable Features"), 
        React.createElement(Card_1.CardText, {expandable: true, style: { paddingTop: "0px" }}, 
            React.createElement("p", null, "We've provided a few actionable features to help you find and share charts with friends and associates."), 
            React.createElement("dl", null, 
                React.createElement("dt", null, "Find"), 
                React.createElement("dd", null, "This lets you find a chart by the title of the City account, or classification, that it highlights. Enter a key word that is likely to be found in a name."), 
                React.createElement("dt", null, "Share"), 
                React.createElement("dd", null, "This gives you a bitly (short) url that you can share with friends. When they go to that url, it will reproduce the current row of charts for them. A good basis for discussion."), 
                React.createElement("dt", null, "Sources"), 
                React.createElement("dd", null, "This provides a list of the source reports used to collect the data for the current viewpoint."), 
                React.createElement("dt", null, "Printing charts"), 
                React.createElement("dd", null, "To print charts, turn off options on each row of charts to remove clutter, and then use" + ' ' + "a browser utility like Fireshot for Chrome to print the entire visible page.")))));
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = content;
